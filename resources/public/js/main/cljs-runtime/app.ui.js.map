{"version":3,"sources":["app/ui.cljs"],"mappings":";AAMA,AAAA,AAAA;AAAA,IAAAA,+BAAA,2CAAA,wDAAA,6BAAewB;AAAf,AAAA,0FAAA,4DAAA,+DAAA;GAAA,oDAAA,mCAAAvB,NAAeuB;AAAf,AAAA,IAAAtB,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAAA,RAAoD0B;SAApD,AAAAxB,4CAAAF,eAAA,hEAAmCuB;WAAnC,AAAArB,4CAAAF,eAAA,lEAAsCwB;UAAtC,AAAAtB,4CAAAF,eAAA,jEAA2CyB;AAA3C,AAAA,0FAAA,4DAE6B,AAAA,0FAAYC;GAFzC,0DAAA,+BAAeJ;AAAf,AAAA,OAAAnB,uDAAA,NAAemB;AAAf,AAAA,IAAAlB,aAAA,CAAAC,wEAAAA,+EAAAA,TAAeiB,2DAAAA;IAAflB,iBAAA,AAAAH,4BAAAG;YAAAA,RAAoDsB;SAApD,AAAAxB,4CAAAE,eAAA,hEAAmCmB;WAAnC,AAAArB,4CAAAE,eAAA,lEAAsCoB;UAAtC,AAAAtB,4CAAAE,eAAA,jEAA2CqB;IAA3CnB,aAAA,CAAAC,+EAAAA,sFAAAA,TAAee,kEAAAA;IAAfhB,iBAAA,AAAAL,4BAAAK;eAAA,AAAAJ,4CAAAI,eAAA,tEAAmEqB;AAAnE,AAGE,OAAAC,8EAAA,KAAA,mFACE,AAAAA,8EAAA,KAAA,mFAAQ,mDAAA,2DAAA,jEAAKJ,4DAAeC,mBAAS,AAAAG,8EAAA,SAAA,mFAAA,2CAAA,4DAAA;AAAA,AAAuB,QAACD,yCAAAA,6CAAAA,NAASJ,yBAAAA;mDADxE,dACE,1BAAqC,YAAA;;;AAJzC,AAAA,GAAA,QAAAf,gCAAAC,mCAAAC;AAAA;AAAA,AAAA;;;gBAAA,wBAAAC,xCAAOU;AAAP,AAAA,IAAAT,sBAAA;AAAA,AAAA,IAAAC,2BAAA,AAAAX,4CAAAJ,6BAAA;AAAA,AAAA,oBAAAe;AAAA,IAAAC,kCAAAD;AAAA,AAAA,CAAA,AAAAD,4BAAA,iBAAAG,WAAA,EAAA,eAAA,iBAAAC,WAAAJ;IAAAK,WAAA,CAAAC,yEAAAA,uEAAAP,qBAAA,kBAAAO,mDAAAP,qBAAA;AAAA,AAAA,QAAAG,gEAAAA,8DAAAE,SAAAC,YAAAH,0CAAAE,SAAAC;;AAAA,AAAAF;;;AAAA,CAAA,AAAAH,4BAAA,iBAAAO,WAAA,EAAA,eAAA;AAAA,AAAAA;;;;AAAA;;;;AAAA,AAAAC,0EAAA,oEAAAtB,lFAAOuB;AAOP,AAAKQ,mBAAU,+FAAA,2CAAA,sDAAA,hMAACC,iFAAsBT;AAEtC,AAAA,AAAA;AAAA,IAAAvB,+BAAA,2CAAA,wDAAA,6BAAmBwB;AAAnB,AAAA,0FAAA,yDAAA,8DAAA,2CAAA,gEAC8C,AAACoB,0EAAerB;GAD9D,oDAAA,mCAAAU,NAAmBT;AAAnB,AAAA,IAAAU,aAAAD;IAAAC,iBAAA,AAAA/B,4BAAA+B;YAAAA,RAA0DN;SAA1D,AAAAxB,4CAAA8B,eAAA,hEAAqCT;YAArC,AAAArB,4CAAA8B,eAAA,nEAAwCQ;aAAxC,AAAAtC,4CAAA8B,eAAA,pEAA8CS;AAA9C,AAAA,0FAAA,yDAE2B,AAAA,uFAAUf;GAFrC,0DAAA,mCAAmBJ;AAAnB,AAAA,OAAAnB,uDAAA,NAAmBmB;AAAnB,AAAA,IAAAW,aAAA,CAAA5B,wEAAAA,+EAAAA,TAAmBiB,2DAAAA;IAAnBW,iBAAA,AAAAhC,4BAAAgC;YAAAA,RAA0DP;SAA1D,AAAAxB,4CAAA+B,eAAA,hEAAqCV;YAArC,AAAArB,4CAAA+B,eAAA,nEAAwCO;aAAxC,AAAAtC,4CAAA+B,eAAA,pEAA8CQ;AAA9C,AAGE,IAAME,gBAAc,WAAKC;AAAL,AACE,4FAAA,rFAACC,+EAAevB,yFAAM,iBAAAwB,WAAA,2CAAA,4DAAA,HAA6BvB,+DAAcqB;AAA3C,AAAA,8HAAAE,kDAAAA,xKAACC,4DAAAA,sEAAAA;;;AAD7C,AAEE,OAAAnB,8EAAA,MAAA,mFACE,AAAAA,8EAAA,KAAA,mFACE,4CAAA,WAAAoB,vDAACC;AAAD,AAAM,IAAAC,WAAAF;IAAAG,WAAA,2CAAA,6DAAwBR;AAAxB,AAAA,wGAAAO,SAAAC,uCAAAD,SAAAC,zJAACtB,iDAAAA,oEAAAA;iCAFX,dACE,hBACgDY;;;AAPtD,AAAA,GAAA,QAAAjC,gCAAAC,mCAAAyB;AAAA;AAAA,AAAA;;;oBAAA,4BAAAvB,hDAAO4B;AAAP,AAAA,IAAA3B,sBAAA;AAAA,AAAA,IAAAC,2BAAA,AAAAX,4CAAAJ,6BAAA;AAAA,AAAA,oBAAAe;AAAA,IAAAC,kCAAAD;AAAA,AAAA,CAAA,AAAAD,4BAAA,iBAAAuB,WAAA,EAAA,eAAA,iBAAAC,WAAAxB;IAAAyB,WAAA,CAAAnB,yEAAAA,uEAAAP,qBAAA,kBAAAO,mDAAAP,qBAAA;AAAA,AAAA,QAAAG,gEAAAA,8DAAAsB,SAAAC,YAAAvB,0CAAAsB,SAAAC;;AAAA,AAAAF;;;AAAA,CAAA,AAAAvB,4BAAA,iBAAA0B,WAAA,EAAA,eAAA;AAAA,AAAAA;;;;AAAA;;;;AAAA,AAAAlB,8EAAA,0EAAAtB,5FAAOyC;AASP,AAAKa,wBAAe,AAACC,wEAAad;AAGlC,AAAA,AAAA;AAAA,IAAAzC,+BAAA,2CAAA,wDAAA,6BAAawB;AAAb,AAAA,0FAAA,2CAAA,gKAAA,2CAAA,hJACqB,AAACoB,0EAAeH,iIAChB,AAACG,0EAAeH;GAFrC,wEAAA,2CAAAe;AAAA,AAAA,OAAAC,iDAAA,mCAAA,2CAAA,6EAAA,qFAAAD,vGACqCf,6EACAA;GAFrC,0DAAA,6BAAajB;AAAb,AAAA,OAAAnB,uDAAA,NAAamB;AAAb,AAAA,IAAAkC,aAAA,CAAAnD,wEAAAA,+EAAAA,TAAaiB,2DAAAA;IAAbkC,iBAAA,AAAAvD,4BAAAuD;cAAA,AAAAtD,4CAAAsD,eAAA,rEAA0BO;cAA1B,AAAA7D,4CAAAsD,eAAA,rEAAkCQ;AAAlC,AAIE,OAAApC,8EAAA,MAAA,unBAAA,piBACE,AAAAqC,sDAAA,CAAA,KAAA,KAAA,YACA,2BAAA,gKAAA,zKAAMF,SACJ,CAACX,sDAAAA,+DAAAA,XAAeW,2CAAAA,gBAClB,AAAAE,sDAAA,CAAA,KAAA,KAAA,YACA,2BAAA,gKAAA,zKAAMD,SACJ,CAACZ,sDAAAA,+DAAAA,XAAeY,2CAAAA;;;AAVtB,AAAA,GAAA,QAAAxD,gCAAAC,mCAAAgD;AAAA;AAAA,AAAA;;;cAAA,sBAAA9C,pCAAOmD;AAAP,AAAA,IAAAlD,sBAAA;AAAA,AAAA,IAAAC,2BAAA,AAAAX,4CAAAJ,6BAAA;AAAA,AAAA,oBAAAe;AAAA,IAAAC,kCAAAD;AAAA,AAAA,CAAA,AAAAD,4BAAA,iBAAA8C,WAAA,EAAA,eAAA,iBAAAC,WAAA/C;IAAAgD,WAAA,CAAA1C,yEAAAA,uEAAAP,qBAAA,kBAAAO,mDAAAP,qBAAA;AAAA,AAAA,QAAAG,gEAAAA,8DAAA6C,SAAAC,YAAA9C,0CAAA6C,SAAAC;;AAAA,AAAAF;;;AAAA,CAAA,AAAA9C,4BAAA,iBAAAiD,WAAA,EAAA,eAAA;AAAA,AAAAA;;;;AAAA;;;;AAAA,AAAAzC,wEAAA,iEAAAtB,7EAAOgE","names":["options__49551__auto__","p__57294","map__57295","cljs.core/--destructure-map","cljs.core.get","com.fulcrologic.fulcro.components/wrapped-render","map__57296","com.fulcrologic.fulcro.components/props","map__57297","com.fulcrologic.fulcro.components/get-computed","js/app","js/app.ui","js/app.ui.Person","props__49552__auto__","this__49553__auto__","temp__5802__auto__","init-state__49554__auto__","obj57299","G__57300","G__57301","com.fulcrologic.fulcro.components/isoget","obj57303","com.fulcrologic.fulcro.components/configure-component!","app.ui/Person","this","id","name","age","props","onDelete","com.fulcrologic.fulcro.dom.macro_create_element","app.ui/ui-person","com.fulcrologic.fulcro.components.computed_factory","p__57305","map__57306","map__57307","js/app.ui.PersonList","obj57312","G__57313","G__57314","obj57316","app.ui/PersonList","label","people","com.fulcrologic.fulcro.components.get_query","delete-person","person-id","com.fulcrologic.fulcro.components.transact_BANG_","G__57308","app.mutations/delete-person","p1__57304#","cljs.core.map","G__57309","G__57310","app.ui/ui-person-list","com.fulcrologic.fulcro.components.factory","params","com.fulcrologic.fulcro.components/make-state-map","map__57317","js/app.ui.Root","obj57319","G__57320","G__57321","obj57323","app.ui/Root","friends","enemies","com.fulcrologic.fulcro.dom/macro-create-element*"],"sourcesContent":["(ns app.ui\r\n  (:require\r\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\r\n    [com.fulcrologic.fulcro.dom :as dom]\r\n    [app.mutations :as api]))\r\n\r\n(defsc Person [this {:person/keys [id name age] :as props} {:keys [onDelete]}]\r\n  {:query [:person/id :person/name :person/age]\r\n   :ident (fn [] [:person/id (:person/id props)])}\r\n  (dom/li\r\n    (dom/h5 (str name \" (age: \" age \")\") (dom/button {:onClick #(onDelete id)} \"X\"))))\r\n\r\n;; The keyfn generates a React key for each element based on props. See React documentation on keys.\r\n(def ui-person (comp/computed-factory Person {:keyfn :person/name}))\r\n\r\n(defsc PersonList [this {:list/keys [id label people] :as props}]\r\n  {:query [:list/id :list/label {:list/people (comp/get-query Person)}]\r\n   :ident (fn [] [:list/id (:list/id props)])}\r\n  (let [delete-person (fn [person-id]\r\n                        (comp/transact! this [(api/delete-person {:list/id id :person/id person-id})]))]\r\n    (dom/div\r\n      (dom/ul\r\n        (map #(ui-person % {:onDelete delete-person}) people)))))\r\n\r\n(def ui-person-list (comp/factory PersonList))\r\n\r\n; Root's initial state becomes the entire app's initial state!\r\n(defsc Root [this {:keys [friends enemies]}]\r\n  {:query [{:friends (comp/get-query PersonList)}\r\n           {:enemies (comp/get-query PersonList)}]\r\n   :initial-state {}}\r\n  (dom/div\r\n    (dom/h3 \"Friends\")\r\n    (when friends\r\n      (ui-person-list friends))\r\n    (dom/h3 \"Enemies\")\r\n    (when enemies\r\n      (ui-person-list enemies))))"]}
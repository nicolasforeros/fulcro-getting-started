["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.networking.http_remote');\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"method\",\"com.fulcrologic.fulcro.networking.http-remote/method\",934706316),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null,\"get\",\"get\",1683182755),\"null\",new cljs.core.Keyword(null,\"patch\",\"patch\",380775109),\"null\",new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"null\",new cljs.core.Keyword(null,\"connect\",\"connect\",1232828233),\"null\",new cljs.core.Keyword(null,\"delete\",\"delete\",-1768633620),\"null\",new cljs.core.Keyword(null,\"head\",\"head\",-771383919),\"null\",new cljs.core.Keyword(null,\"post\",\"post\",269697687),\"null\",new cljs.core.Keyword(null,\"options\",\"options\",99638489),\"null\",new cljs.core.Keyword(null,\"put\",\"put\",1299772570),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null,\"get\",\"get\",1683182755),null,new cljs.core.Keyword(null,\"patch\",\"patch\",380775109),null,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),null,new cljs.core.Keyword(null,\"connect\",\"connect\",1232828233),null,new cljs.core.Keyword(null,\"delete\",\"delete\",-1768633620),null,new cljs.core.Keyword(null,\"head\",\"head\",-771383919),null,new cljs.core.Keyword(null,\"post\",\"post\",269697687),null,new cljs.core.Keyword(null,\"options\",\"options\",99638489),null,new cljs.core.Keyword(null,\"put\",\"put\",1299772570),null], null), null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"url\",\"com.fulcrologic.fulcro.networking.http-remote/url\",-1403244238),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"headers\",\"com.fulcrologic.fulcro.networking.http-remote/headers\",-898565085),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Symbol(null,\"string?\",\"string?\",-1129175764,null),new cljs.core.Symbol(null,\"string?\",\"string?\",-1129175764,null)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,cljs.core.string_QMARK_], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),(function (i__34624__auto__,v__34625__auto__){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__34625__auto__,(0));\r\n}),new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__56776){\r\nreturn cljs.core.map_QMARK_(G__56776);\r\n})], null),null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"body\",\"com.fulcrologic.fulcro.networking.http-remote/body\",1774671039),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request\",\"com.fulcrologic.fulcro.networking.http-remote/request\",2101891015),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"method\",\"com.fulcrologic.fulcro.networking.http-remote/method\",934706316),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"body\",\"com.fulcrologic.fulcro.networking.http-remote/body\",1774671039),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"url\",\"com.fulcrologic.fulcro.networking.http-remote/url\",-1403244238),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"headers\",\"com.fulcrologic.fulcro.networking.http-remote/headers\",-898565085)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"method\",\"com.fulcrologic.fulcro.networking.http-remote/method\",934706316),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"body\",\"com.fulcrologic.fulcro.networking.http-remote/body\",1774671039),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"url\",\"com.fulcrologic.fulcro.networking.http-remote/url\",-1403244238),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"headers\",\"com.fulcrologic.fulcro.networking.http-remote/headers\",-898565085)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__56777){\r\nreturn cljs.core.map_QMARK_(G__56777);\r\n}),(function (G__56777){\r\nreturn cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\r\n}),(function (G__56777){\r\nreturn cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\n}),(function (G__56777){\r\nreturn cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"url\",\"url\",276297046));\r\n}),(function (G__56777){\r\nreturn cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\r\n})], null),(function (G__56777){\r\nreturn ((cljs.core.map_QMARK_(G__56777)) && (((cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"method\",\"method\",55703592))) && (((cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669))) && (((cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"url\",\"url\",276297046))) && (cljs.core.contains_QMARK_(G__56777,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129))))))))));\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"method\",\"com.fulcrologic.fulcro.networking.http-remote/method\",934706316),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"body\",\"com.fulcrologic.fulcro.networking.http-remote/body\",1774671039),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"url\",\"com.fulcrologic.fulcro.networking.http-remote/url\",-1403244238),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"headers\",\"com.fulcrologic.fulcro.networking.http-remote/headers\",-898565085)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"method\",\"method\",55703592))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"url\",\"url\",276297046))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129)))], null),null])));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error\",\"com.fulcrologic.fulcro.networking.http-remote/error\",-1451658604),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 12, [new cljs.core.Keyword(null,\"offline\",\"offline\",-107631935),\"null\",new cljs.core.Keyword(null,\"silent\",\"silent\",-1142977785),\"null\",new cljs.core.Keyword(null,\"custom\",\"custom\",340151948),\"null\",new cljs.core.Keyword(null,\"abort\",\"abort\",521193198),\"null\",new cljs.core.Keyword(null,\"http-error\",\"http-error\",-1040049553),\"null\",new cljs.core.Keyword(null,\"network-error\",\"network-error\",-1095989517),\"null\",new cljs.core.Keyword(null,\"not-found\",\"not-found\",-629079980),\"null\",new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),\"null\",new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318),\"null\",new cljs.core.Keyword(null,\"middleware-failure\",\"middleware-failure\",-1809927973),\"null\",new cljs.core.Keyword(null,\"access-denied\",\"access-denied\",959449406),\"null\",new cljs.core.Keyword(null,\"none\",\"none\",1333468478),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 12, [new cljs.core.Keyword(null,\"offline\",\"offline\",-107631935),null,new cljs.core.Keyword(null,\"silent\",\"silent\",-1142977785),null,new cljs.core.Keyword(null,\"custom\",\"custom\",340151948),null,new cljs.core.Keyword(null,\"abort\",\"abort\",521193198),null,new cljs.core.Keyword(null,\"http-error\",\"http-error\",-1040049553),null,new cljs.core.Keyword(null,\"network-error\",\"network-error\",-1095989517),null,new cljs.core.Keyword(null,\"not-found\",\"not-found\",-629079980),null,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),null,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318),null,new cljs.core.Keyword(null,\"middleware-failure\",\"middleware-failure\",-1809927973),null,new cljs.core.Keyword(null,\"access-denied\",\"access-denied\",959449406),null,new cljs.core.Keyword(null,\"none\",\"none\",1333468478),null], null), null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error-text\",\"com.fulcrologic.fulcro.networking.http-remote/error-text\",1688434090),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-code\",\"com.fulcrologic.fulcro.networking.http-remote/status-code\",-319905462),new cljs.core.Symbol(\"cljs.core\",\"pos-int?\",\"cljs.core/pos-int?\",-2115888030,null),cljs.core.pos_int_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-text\",\"com.fulcrologic.fulcro.networking.http-remote/status-text\",1990262342),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"outgoing-request\",\"com.fulcrologic.fulcro.networking.http-remote/outgoing-request\",-1149828572),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request\",\"com.fulcrologic.fulcro.networking.http-remote/request\",2101891015),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request\",\"com.fulcrologic.fulcro.networking.http-remote/request\",2101891015));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transaction\",\"com.fulcrologic.fulcro.networking.http-remote/transaction\",-2045447007),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.vector_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-phase\",\"com.fulcrologic.fulcro.networking.http-remote/progress-phase\",490506134),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862),\"null\",new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724),\"null\",new cljs.core.Keyword(null,\"complete\",\"complete\",-500388775),\"null\",new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862),null,new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724),null,new cljs.core.Keyword(null,\"complete\",\"complete\",-500388775),null,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),null], null), null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-event\",\"com.fulcrologic.fulcro.networking.http-remote/progress-event\",-929487957),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response\",\"com.fulcrologic.fulcro.networking.http-remote/response\",1950226596),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"outgoing-request\",\"com.fulcrologic.fulcro.networking.http-remote/outgoing-request\",-1149828572),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"body\",\"com.fulcrologic.fulcro.networking.http-remote/body\",1774671039),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-code\",\"com.fulcrologic.fulcro.networking.http-remote/status-code\",-319905462),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-text\",\"com.fulcrologic.fulcro.networking.http-remote/status-text\",1990262342),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error\",\"com.fulcrologic.fulcro.networking.http-remote/error\",-1451658604),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error-text\",\"com.fulcrologic.fulcro.networking.http-remote/error-text\",1688434090)], null),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transaction\",\"com.fulcrologic.fulcro.networking.http-remote/transaction\",-2045447007),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-phase\",\"com.fulcrologic.fulcro.networking.http-remote/progress-phase\",490506134),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-event\",\"com.fulcrologic.fulcro.networking.http-remote/progress-event\",-929487957)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"outgoing-request\",\"com.fulcrologic.fulcro.networking.http-remote/outgoing-request\",-1149828572),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"body\",\"com.fulcrologic.fulcro.networking.http-remote/body\",1774671039),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-code\",\"com.fulcrologic.fulcro.networking.http-remote/status-code\",-319905462),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-text\",\"com.fulcrologic.fulcro.networking.http-remote/status-text\",1990262342),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error\",\"com.fulcrologic.fulcro.networking.http-remote/error\",-1451658604),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error-text\",\"com.fulcrologic.fulcro.networking.http-remote/error-text\",1688434090)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transaction\",\"com.fulcrologic.fulcro.networking.http-remote/transaction\",-2045447007),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-phase\",\"com.fulcrologic.fulcro.networking.http-remote/progress-phase\",490506134),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-event\",\"com.fulcrologic.fulcro.networking.http-remote/progress-event\",-929487957)], null),null,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__56778){\r\nreturn cljs.core.map_QMARK_(G__56778);\r\n}),(function (G__56778){\r\nreturn cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"outgoing-request\",\"outgoing-request\",256391368));\r\n}),(function (G__56778){\r\nreturn cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\n}),(function (G__56778){\r\nreturn cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130));\r\n}),(function (G__56778){\r\nreturn cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478));\r\n}),(function (G__56778){\r\nreturn cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\r\n}),(function (G__56778){\r\nreturn cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"error-text\",\"error-text\",2021893718));\r\n})], null),(function (G__56778){\r\nreturn ((cljs.core.map_QMARK_(G__56778)) && (((cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"outgoing-request\",\"outgoing-request\",256391368))) && (((cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669))) && (((cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130))) && (((cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478))) && (((cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"error\",\"error\",-978969032))) && (cljs.core.contains_QMARK_(G__56778,new cljs.core.Keyword(null,\"error-text\",\"error-text\",2021893718))))))))))))));\r\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"transaction\",\"transaction\",1777321997),new cljs.core.Keyword(null,\"progress-phase\",\"progress-phase\",186626618),new cljs.core.Keyword(null,\"progress-event\",\"progress-event\",1690048087)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"outgoing-request\",\"com.fulcrologic.fulcro.networking.http-remote/outgoing-request\",-1149828572),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"body\",\"com.fulcrologic.fulcro.networking.http-remote/body\",1774671039),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-code\",\"com.fulcrologic.fulcro.networking.http-remote/status-code\",-319905462),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"status-text\",\"com.fulcrologic.fulcro.networking.http-remote/status-text\",1990262342),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error\",\"com.fulcrologic.fulcro.networking.http-remote/error\",-1451658604),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"error-text\",\"com.fulcrologic.fulcro.networking.http-remote/error-text\",1688434090)], null),null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"outgoing-request\",\"outgoing-request\",256391368),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130),new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"error-text\",\"error-text\",2021893718)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transaction\",\"com.fulcrologic.fulcro.networking.http-remote/transaction\",-2045447007),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-phase\",\"com.fulcrologic.fulcro.networking.http-remote/progress-phase\",490506134),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"progress-event\",\"com.fulcrologic.fulcro.networking.http-remote/progress-event\",-929487957)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"outgoing-request\",\"outgoing-request\",256391368))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"error-text\",\"error-text\",2021893718)))], null),null])));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"xhrio-event\",\"com.fulcrologic.fulcro.networking.http-remote/xhrio-event\",2068632880),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/xhrio\",1735058914),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"make-xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/make-xhrio\",1348622897),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),cljs.core.fn_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response-middleware\",\"com.fulcrologic.fulcro.networking.http-remote/response-middleware\",-2107912072),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),cljs.core.fn_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request-middleware\",\"com.fulcrologic.fulcro.networking.http-remote/request-middleware\",-2030599211),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),cljs.core.fn_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"active-requests\",\"com.fulcrologic.fulcro.networking.http-remote/active-requests\",741863701),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__56779#\",\"p1__56779#\",-241974583,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",1901963335,null),new cljs.core.Symbol(null,\"p1__56779#\",\"p1__56779#\",-241974583,null)))),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__56780#\",\"p1__56780#\",1054549242,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),new cljs.core.Symbol(\"cljs.core\",\"set?\",\"cljs.core/set?\",-1176684971,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"vals\",\"cljs.core/vals\",1473678353,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",1901963335,null),new cljs.core.Symbol(null,\"p1__56780#\",\"p1__56780#\",1054549242,null)))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",1901963335,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),new cljs.core.Symbol(\"cljs.core\",\"set?\",\"cljs.core/set?\",-1176684971,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"vals\",\"cljs.core/vals\",1473678353,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",1901963335,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (p1__56779_SHARP_){\r\nreturn cljs.core.map_QMARK_(cljs.core.deref(p1__56779_SHARP_));\r\n}),(function (p1__56780_SHARP_){\r\nreturn cljs.core.every_QMARK_(cljs.core.set_QMARK_,cljs.core.vals(cljs.core.deref(p1__56780_SHARP_)));\r\n})], null),null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transmit!\",\"com.fulcrologic.fulcro.networking.http-remote/transmit!\",226901405),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),cljs.core.fn_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"abort!\",\"com.fulcrologic.fulcro.networking.http-remote/abort!\",-554522445),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),cljs.core.fn_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"fulcro-remote\",\"com.fulcrologic.fulcro.networking.http-remote/fulcro-remote\",1282855379),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transmit!\",\"com.fulcrologic.fulcro.networking.http-remote/transmit!\",226901405)], null),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"abort!\",\"com.fulcrologic.fulcro.networking.http-remote/abort!\",-554522445)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transmit!\",\"com.fulcrologic.fulcro.networking.http-remote/transmit!\",226901405)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"abort!\",\"com.fulcrologic.fulcro.networking.http-remote/abort!\",-554522445)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__56781){\r\nreturn cljs.core.map_QMARK_(G__56781);\r\n}),(function (G__56781){\r\nreturn cljs.core.contains_QMARK_(G__56781,new cljs.core.Keyword(null,\"transmit!\",\"transmit!\",-107149039));\r\n})], null),(function (G__56781){\r\nreturn ((cljs.core.map_QMARK_(G__56781)) && (cljs.core.contains_QMARK_(G__56781,new cljs.core.Keyword(null,\"transmit!\",\"transmit!\",-107149039))));\r\n}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"abort!\",\"abort!\",-220883953)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"transmit!\",\"com.fulcrologic.fulcro.networking.http-remote/transmit!\",226901405)], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"transmit!\",\"transmit!\",-107149039)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"abort!\",\"com.fulcrologic.fulcro.networking.http-remote/abort!\",-554522445)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"transmit!\",\"transmit!\",-107149039)))], null),null])));\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_error_states = cljs.core.PersistentHashMap.fromArrays([goog.net.ErrorCode.FILE_NOT_FOUND,goog.net.ErrorCode.NO_ERROR,goog.net.ErrorCode.HTTP_ERROR,goog.net.ErrorCode.EXCEPTION,goog.net.ErrorCode.TIMEOUT,goog.net.ErrorCode.CUSTOM_ERROR,goog.net.ErrorCode.ACCESS_DENIED,goog.net.ErrorCode.OFFLINE,goog.net.ErrorCode.ABORT,goog.net.ErrorCode.FF_SILENT_ERROR],[new cljs.core.Keyword(null,\"not-found\",\"not-found\",-629079980),new cljs.core.Keyword(null,\"none\",\"none\",1333468478),new cljs.core.Keyword(null,\"http-error\",\"http-error\",-1040049553),new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318),new cljs.core.Keyword(null,\"custom\",\"custom\",340151948),new cljs.core.Keyword(null,\"access-denied\",\"access-denied\",959449406),new cljs.core.Keyword(null,\"offline\",\"offline\",-107631935),new cljs.core.Keyword(null,\"abort\",\"abort\",521193198),new cljs.core.Keyword(null,\"silent\",\"silent\",-1142977785)]);\r\ncom.fulcrologic.fulcro.networking.http_remote.make_xhrio = (function com$fulcrologic$fulcro$networking$http_remote$make_xhrio(){\r\nreturn (new goog.net.XhrIo());\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_dispose = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_dispose(xhrio){\r\nreturn xhrio.dispose();\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_enable_progress_events = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_enable_progress_events(xhrio){\r\nreturn xhrio.setProgressEventsEnabled(true);\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_abort = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_abort(xhrio){\r\nreturn xhrio.abort();\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_send = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_send(xhrio,url,verb,body,headers){\r\nreturn xhrio.send(url,verb,body,(function (){var G__56782 = headers;\r\nif((G__56782 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.clj__GT_js(G__56782);\r\n}\r\n})());\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_status_code = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_status_code(xhrio){\r\nreturn xhrio.getStatus();\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_status_text = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_status_text(xhrio){\r\nreturn xhrio.getStatusText();\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_raw_error = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_raw_error(xhrio){\r\nreturn xhrio.getLastErrorCode();\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_error_code = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_error_code(xhrio){\r\nvar status = com.fulcrologic.fulcro.networking.http_remote.xhrio_status_code(xhrio);\r\nvar error = cljs.core.get.cljs$core$IFn$_invoke$arity$3(com.fulcrologic.fulcro.networking.http_remote.xhrio_error_states,com.fulcrologic.fulcro.networking.http_remote.xhrio_raw_error(xhrio),new cljs.core.Keyword(null,\"unknown\",\"unknown\",-935977881));\r\nvar error__$1 = ((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),status)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(error,new cljs.core.Keyword(null,\"http-error\",\"http-error\",-1040049553)))))?new cljs.core.Keyword(null,\"network-error\",\"network-error\",-1095989517):error);\r\nreturn error__$1;\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_error_text = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_error_text(xhrio){\r\nreturn xhrio.getLastError();\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_response = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_response(xhrio){\r\nreturn xhrio.getResponse();\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_response_headers = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_response_headers(xhrio){\r\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(xhrio.getResponseHeaders());\r\n});\r\n/**\r\n * Given an xhrio progress event, returns a map with keys :loaded and :total, where loaded is the\r\n *   number of bytes transferred in the given phase (upload/download) and total is the total number\r\n *   of bytes to transfer (if known). \r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_progress = (function com$fulcrologic$fulcro$networking$http_remote$xhrio_progress(event){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"loaded\",\"loaded\",-1246482293),event.loaded,new cljs.core.Keyword(null,\"total\",\"total\",1916810418),event.total], null);\r\n});\r\n/**\r\n * Takes the progress report from the progress network event\r\n *   and returns a number between 0 and 100. `phase` can be `:overall`, `:sending`, or `:receiving`. When\r\n *   set to `:overall` then the send phase will count for progress points between 0 and 49, and receiving phase\r\n *   will account for 50 to 100. When set to :sending or :receiving the entire range will count for that phase only\r\n *   (i.e. once sending is complete this function would return 100 throughout the receiving phase.)\r\n * \r\n *   If total is unknown, then this function returns 0.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_ = (function com$fulcrologic$fulcro$networking$http_remote$progress_PERCENT_(var_args){\r\nvar G__56784 = arguments.length;\r\nswitch (G__56784) {\r\ncase 1:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$1 = (function (progress){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$2(progress,new cljs.core.Keyword(null,\"overall\",\"overall\",-704031008));\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$2 = (function (progress,phase){\r\nvar current_phase = (function (){var G__56789 = progress;\r\nif((G__56789 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"progress-phase\",\"progress-phase\",186626618).cljs$core$IFn$_invoke$arity$1(G__56789);\r\n}\r\n})();\r\nvar map__56785 = (function (){var G__56790 = progress;\r\nvar G__56790__$1 = (((G__56790 == null))?null:new cljs.core.Keyword(null,\"progress-event\",\"progress-event\",1690048087).cljs$core$IFn$_invoke$arity$1(G__56790));\r\nif((G__56790__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn com.fulcrologic.fulcro.networking.http_remote.xhrio_progress(G__56790__$1);\r\n}\r\n})();\r\nvar map__56785__$1 = cljs.core.__destructure_map(map__56785);\r\nvar loaded = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__56785__$1,new cljs.core.Keyword(null,\"loaded\",\"loaded\",-1246482293),(0));\r\nvar total = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__56785__$1,new cljs.core.Keyword(null,\"total\",\"total\",1916810418),(0));\r\nvar vec__56786 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"complete\",\"complete\",-500388775)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(100)], null):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"overall\",\"overall\",-704031008),phase))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(49)], null):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"overall\",\"overall\",-704031008),phase))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(50),(100)], null):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862),phase))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(100)], null):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862),phase))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(100)], null):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724),phase))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_phase,new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724),phase))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(100)], null):null))))))));\r\nvar base = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56786,(0),null);\r\nvar max_pct = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56786,(1),null);\r\nvar slope = (max_pct - base);\r\nvar x = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),total))?(1):(loaded / total));\r\nif((slope === (0))){\r\nreturn (100);\r\n} else {\r\nreturn Math.floor((base + (x * slope)));\r\n}\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$lang$maxFixedArity = 2);\r\n\r\ncom.fulcrologic.fulcro.networking.http_remote.response_types = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),\"\",new cljs.core.Keyword(null,\"array-buffer\",\"array-buffer\",519008380),\"arraybuffer\",new cljs.core.Keyword(null,\"blob\",\"blob\",1636965233),\"blob\",new cljs.core.Keyword(null,\"document\",\"document\",-1329188687),\"document\",new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),\"text\"], null);\r\ncom.fulcrologic.fulcro.networking.http_remote.legal_response_types = cljs.core.set(cljs.core.keys(com.fulcrologic.fulcro.networking.http_remote.response_types));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response-type\",\"com.fulcrologic.fulcro.networking.http-remote/response-type\",-1295274878),new cljs.core.Symbol(\"com.fulcrologic.fulcro.networking.http-remote\",\"legal-response-types\",\"com.fulcrologic.fulcro.networking.http-remote/legal-response-types\",-126573155,null),com.fulcrologic.fulcro.networking.http_remote.legal_response_types);\r\ncom.fulcrologic.fulcro.networking.http_remote.desired_response_type = (function com$fulcrologic$fulcro$networking$http_remote$desired_response_type(p__56792){\r\nvar map__56793 = p__56792;\r\nvar map__56793__$1 = cljs.core.__destructure_map(map__56793);\r\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56793__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\nvar nodes = (function (){var G__56794 = body;\r\nvar G__56794__$1 = (((G__56794 == null))?null:edn_query_language.core.query__GT_ast(G__56794));\r\nif((G__56794__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__56794__$1);\r\n}\r\n})();\r\nvar cnt = cljs.core.count(nodes);\r\nvar alt = cljs.core.some((function (p1__56791_SHARP_){\r\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response-type\",\"com.fulcrologic.fulcro.networking.http-remote/response-type\",-1295274878).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(p1__56791_SHARP_));\r\n}),nodes);\r\nif(cljs.core.truth_((function (){var and__5043__auto__ = alt;\r\nif(cljs.core.truth_(and__5043__auto__)){\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((1),cnt);\r\n} else {\r\nreturn and__5043__auto__;\r\n}\r\n})())){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,122,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Attempt to request alternate response from HTTP remote from multiple items in a single transaction. This could mean more than one transaction got combined into a single request. See https://book.fulcrologic.com/#err-httpr-multiple-items\"], null);\r\n}),null)),null,-1032549075);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__5043__auto__ = alt;\r\nif(cljs.core.truth_(and__5043__auto__)){\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cnt)) && (cljs.core.contains_QMARK_(com.fulcrologic.fulcro.networking.http_remote.legal_response_types,alt)));\r\n} else {\r\nreturn and__5043__auto__;\r\n}\r\n})())){\r\nvar node = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.first(nodes),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),cljs.core.dissoc,new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response-type\",\"com.fulcrologic.fulcro.networking.http-remote/response-type\",-1295274878));\r\nvar updated_body = com.fulcrologic.fulcro.algorithms.do_not_use.ast__GT_query(node);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_body,alt], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [body,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328)], null);\r\n}\r\n});\r\n/**\r\n * Client Remote Middleware to add transit encoding for normal Fulcro requests. Sets the content type and transforms an EDN\r\n *   body to a transit+json encoded body. addl-transit-handlers is a map from data type to transit handler (like\r\n *   you would pass using the `:handlers` option of transit). The additional handlers are used to encode new data types\r\n *   into transit. transit-transformation is a function of one argument returning a transformed transit value (like you\r\n *   would pass using the `:transform` option of transit). See transit documentation for more details.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request = (function com$fulcrologic$fulcro$networking$http_remote$wrap_fulcro_request(var_args){\r\nvar G__56796 = arguments.length;\r\nswitch (G__56796) {\r\ncase 3:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 1:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 0:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$3 = (function (handler,addl_transit_handlers,transit_transformation){\r\nvar writer = com.fulcrologic.fulcro.algorithms.transit.writer.cljs$core$IFn$_invoke$arity$1((function (){var G__56797 = cljs.core.PersistentArrayMap.EMPTY;\r\nvar G__56797__$1 = (cljs.core.truth_(addl_transit_handlers)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__56797,new cljs.core.Keyword(null,\"handlers\",\"handlers\",79528781),addl_transit_handlers):G__56797);\r\nif(cljs.core.truth_(transit_transformation)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__56797__$1,new cljs.core.Keyword(null,\"transform\",\"transform\",1381301764),transit_transformation);\r\n} else {\r\nreturn G__56797__$1;\r\n}\r\n})());\r\nreturn (function (p__56798){\r\nvar map__56799 = p__56798;\r\nvar map__56799__$1 = cljs.core.__destructure_map(map__56799);\r\nvar request = map__56799__$1;\r\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56799__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\r\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56799__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\nvar vec__56800 = com.fulcrologic.fulcro.networking.http_remote.desired_response_type(request);\r\nvar body__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56800,(0),null);\r\nvar response_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56800,(1),null);\r\nvar body__$2 = cognitect.transit.write(writer,body__$1);\r\nvar headers__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(headers,\"Content-Type\",\"application/transit+json\");\r\nvar G__56803 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([request,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),body__$2,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),headers__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"response-type\",\"response-type\",-1493770458),response_type], null)], 0));\r\nreturn (handler.cljs$core$IFn$_invoke$arity$1 ? handler.cljs$core$IFn$_invoke$arity$1(G__56803) : handler.call(null,G__56803));\r\n});\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$2 = (function (handler,addl_transit_handlers){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$3(handler,addl_transit_handlers,null);\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$1 = (function (handler){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$3(handler,null,null);\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$3(cljs.core.identity,null,null);\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Client remote request middleware. This middleware can be added to add an X-CSRF-Token header to the request.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token = (function com$fulcrologic$fulcro$networking$http_remote$wrap_csrf_token(var_args){\r\nvar G__56805 = arguments.length;\r\nswitch (G__56805) {\r\ncase 1:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token.cljs$core$IFn$_invoke$arity$1 = (function (csrf_token){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,csrf_token);\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token.cljs$core$IFn$_invoke$arity$2 = (function (handler,csrf_token){\r\nreturn (function (request){\r\nvar G__56806 = cljs.core.update.cljs$core$IFn$_invoke$arity$5(request,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.assoc,\"X-CSRF-Token\",csrf_token);\r\nreturn (handler.cljs$core$IFn$_invoke$arity$1 ? handler.cljs$core$IFn$_invoke$arity$1(G__56806) : handler.call(null,G__56806));\r\n});\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Client remote middleware to transform a network response to a standard Fulcro form.\r\n * \r\n *   This returns a function that will decode a transit response iff the resulting status code is 200 and the\r\n *   body is not empty. For errant status codes and empty body: the response body will become an empty map.\r\n * \r\n *   No arguments: Returns a function that can process responses, that is not further chained.\r\n *   handler: If supplied, the result of this transformation will be passed through the `handler`.\r\n *   addl-transit-handlers is equivalent to the :handlers option in transit: a map from data type to handler.\r\n *   \r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response = (function com$fulcrologic$fulcro$networking$http_remote$wrap_fulcro_response(var_args){\r\nvar G__56808 = arguments.length;\r\nswitch (G__56808) {\r\ncase 0:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$1(cljs.core.identity);\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$1 = (function (handler){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$2(handler,null);\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$2 = (function (handler,addl_transit_handlers){\r\nvar base_handlers = cljs.core.PersistentArrayMap.EMPTY;\r\nvar handlers = ((cljs.core.map_QMARK_(addl_transit_handlers))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([base_handlers,addl_transit_handlers], 0)):base_handlers);\r\nvar reader = com.fulcrologic.fulcro.algorithms.transit.reader.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handlers\",\"handlers\",79528781),handlers], null));\r\nreturn (function com$fulcrologic$fulcro$networking$http_remote$fulcro_response_handler(p__56809){\r\nvar map__56810 = p__56809;\r\nvar map__56810__$1 = cljs.core.__destructure_map(map__56810);\r\nvar response = map__56810__$1;\r\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56810__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\nvar error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56810__$1,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\r\nvar outgoing_request = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56810__$1,new cljs.core.Keyword(null,\"outgoing-request\",\"outgoing-request\",256391368));\r\nvar G__56811 = (function (){var map__56812 = outgoing_request;\r\nvar map__56812__$1 = cljs.core.__destructure_map(map__56812);\r\nvar response_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56812__$1,new cljs.core.Keyword(null,\"response-type\",\"response-type\",-1493770458));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),response_type)){\r\ntry{if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"network-error\",\"network-error\",-1095989517),error)){\r\nreturn response;\r\n} else {\r\nvar new_body = ((clojure.string.blank_QMARK_(body))?cljs.core.PersistentArrayMap.EMPTY:cognitect.transit.read(reader,body));\r\nvar response__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(response,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new_body);\r\nreturn response__$1;\r\n}\r\n}catch (e56813){var e = e56813;\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"com.fulcrologic.fulcro.networking.http-remote\",null,184,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Transit decode failed! See https://book.fulcrologic.com/#warn-transit-decode-failed\"], null);\r\n}),null)),null,-1285624182);\r\n\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(response,new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130),(417),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478),\"body was either not transit or you have not installed the correct transit read/write handlers.\"], 0));\r\n}} else {\r\nreturn response;\r\n}\r\n})();\r\nreturn (handler.cljs$core$IFn$_invoke$arity$1 ? handler.cljs$core$IFn$_invoke$arity$1(G__56811) : handler.call(null,G__56811));\r\n});\r\n}));\r\n\r\n(com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Generate a response map from the status of the given xhrio object, which could be in a complete or error state.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.extract_response = (function com$fulcrologic$fulcro$networking$http_remote$extract_response(tx,request,xhrio){\r\nnew cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request\",\"com.fulcrologic.fulcro.networking.http-remote/request\",2101891015),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/xhrio\",1735058914),com.fulcrologic.guardrails.core._EQ__GT_,new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response\",\"com.fulcrologic.fulcro.networking.http-remote/response\",1950226596)], null);\r\n\r\ntry{return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"outgoing-request\",\"outgoing-request\",256391368),request,new cljs.core.Keyword(null,\"original-transaction\",\"original-transaction\",-338007083),tx,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),com.fulcrologic.fulcro.networking.http_remote.xhrio_response_headers(xhrio),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),com.fulcrologic.fulcro.networking.http_remote.xhrio_response(xhrio),new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130),com.fulcrologic.fulcro.networking.http_remote.xhrio_status_code(xhrio),new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478),com.fulcrologic.fulcro.networking.http_remote.xhrio_status_text(xhrio),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),com.fulcrologic.fulcro.networking.http_remote.xhrio_error_code(xhrio),new cljs.core.Keyword(null,\"error-text\",\"error-text\",2021893718),com.fulcrologic.fulcro.networking.http_remote.xhrio_error_text(xhrio)], null);\r\n}catch (e56814){var e = e56814;\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,202,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to extract response from XhrIO Object\",e,\"See https://book.fulcrologic.com/#err-httpr-response-extract-fail\"], null);\r\n}),null)),null,1428549911);\r\n\r\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"outgoing-request\",\"outgoing-request\",256391368),request,new cljs.core.Keyword(null,\"original-transaction\",\"original-transaction\",-338007083),tx,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"\",new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130),(0),new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478),\"Internal Exception\",new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),new cljs.core.Keyword(null,\"error-text\",\"error-text\",2021893718),\"Internal Exception from XHRIO\"], null);\r\n}});\r\n/**\r\n * Returns true if the given response looks like a low-level network error.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.was_network_error_QMARK_ = (function com$fulcrologic$fulcro$networking$http_remote$was_network_error_QMARK_(p__56815){\r\nvar map__56816 = p__56815;\r\nvar map__56816__$1 = cljs.core.__destructure_map(map__56816);\r\nvar status_code = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56816__$1,new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130));\r\nvar error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56816__$1,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\r\nnew cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response\",\"com.fulcrologic.fulcro.networking.http-remote/response\",1950226596),com.fulcrologic.guardrails.core._EQ__GT_,cljs.core.boolean_QMARK_], null);\r\n\r\nreturn cljs.core.boolean$(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),status_code)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"http-error\",\"http-error\",-1040049553),error))));\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.clear_request_STAR_ = (function com$fulcrologic$fulcro$networking$http_remote$clear_request_STAR_(active_requests,id,xhrio){\r\nnew cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"active-requests\",\"com.fulcrologic.fulcro.networking.http-remote/active-requests\",741863701),cljs.core.any_QMARK_,new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/xhrio\",1735058914),com.fulcrologic.guardrails.core._EQ__GT_,cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null),new cljs.core.Symbol(null,\"set?\",\"set?\",1636014792,null)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Symbol(\"cljs.core\",\"set?\",\"cljs.core/set?\",-1176684971,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,cljs.core.set_QMARK_], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),(function (i__34624__auto__,v__34625__auto__){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__34625__auto__,(0));\r\n}),new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Symbol(\"cljs.core\",\"set?\",\"cljs.core/set?\",-1176684971,null)),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__56818){\r\nreturn cljs.core.map_QMARK_(G__56818);\r\n})], null),null)], null);\r\n\r\nif(cljs.core.every_QMARK_((function (p1__56817_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(xhrio,p1__56817_SHARP_);\r\n}),cljs.core.get.cljs$core$IFn$_invoke$arity$2(active_requests,id))){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(active_requests,id);\r\n} else {\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(active_requests,id,cljs.core.disj,xhrio);\r\n}\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.response_extractor_STAR_ = (function com$fulcrologic$fulcro$networking$http_remote$response_extractor_STAR_(response_middleware,edn,real_request,xhrio){\r\nnew cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response-middleware\",\"com.fulcrologic.fulcro.networking.http-remote/response-middleware\",-2107912072),cljs.core.any_QMARK_,new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request\",\"com.fulcrologic.fulcro.networking.http-remote/request\",2101891015),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/xhrio\",1735058914),com.fulcrologic.guardrails.core._EQ__GT_,new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response\",\"com.fulcrologic.fulcro.networking.http-remote/response\",1950226596)], null);\r\n\r\nreturn (function (){\r\nvar r = com.fulcrologic.fulcro.networking.http_remote.extract_response(edn,real_request,xhrio);\r\ntry{return (response_middleware.cljs$core$IFn$_invoke$arity$1 ? response_middleware.cljs$core$IFn$_invoke$arity$1(r) : response_middleware.call(null,r));\r\n}catch (e56819){var e = e56819;\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,233,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Client response middleware threw an exception. \",e,\". Defaulting to raw response. See https://book.fulcrologic.com/#err-httpr-resp-middleware-exc\"], null);\r\n}),null)),null,93688954);\r\n\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),((cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [null,null,new cljs.core.Keyword(null,\"none\",\"none\",1333468478),null], null), null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032).cljs$core$IFn$_invoke$arity$1(r)))?new cljs.core.Keyword(null,\"middleware-failure\",\"middleware-failure\",-1809927973):new cljs.core.Keyword(null,\"error\",\"error\",-978969032).cljs$core$IFn$_invoke$arity$1(r)),new cljs.core.Keyword(null,\"middleware-exception\",\"middleware-exception\",1033843204),e], null)], 0));\r\n}});\r\n});\r\ncom.fulcrologic.fulcro.networking.http_remote.cleanup_routine_STAR_ = (function com$fulcrologic$fulcro$networking$http_remote$cleanup_routine_STAR_(abort_id,active_requests,xhrio){\r\nnew cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"abort-id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/abort-id\",2068829184),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"active-requests\",\"com.fulcrologic.fulcro.networking.http-remote/active-requests\",741863701),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/xhrio\",1735058914),com.fulcrologic.guardrails.core._EQ__GT_,cljs.core.fn_QMARK_], null);\r\n\r\nreturn (function (){\r\nif(cljs.core.truth_(abort_id)){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(active_requests,com.fulcrologic.fulcro.networking.http_remote.clear_request_STAR_,abort_id,xhrio);\r\n} else {\r\n}\r\n\r\nreturn com.fulcrologic.fulcro.networking.http_remote.xhrio_dispose(xhrio);\r\n});\r\n});\r\n/**\r\n * Returns a (fn [evt] ) that pulls the response, runs it through middleware, and reports\r\n * the appropriate results to the raw-ok-handler, and progress-routine. If the middleware fails,\r\n * it will instaed report to the error-routine (which in turn will report to the raw error handler)\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.ok_routine_STAR_ = (function com$fulcrologic$fulcro$networking$http_remote$ok_routine_STAR_(progress_routine,get_response_fn,raw_ok_handler,error_routine){\r\nnew cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,com.fulcrologic.guardrails.core._EQ__GT_,cljs.core.any_QMARK_], null);\r\n\r\nreturn (function (evt){\r\nvar map__56820 = (get_response_fn.cljs$core$IFn$_invoke$arity$0 ? get_response_fn.cljs$core$IFn$_invoke$arity$0() : get_response_fn.call(null));\r\nvar map__56820__$1 = cljs.core.__destructure_map(map__56820);\r\nvar r = map__56820__$1;\r\nvar error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56820__$1,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\r\nvar middleware_exception = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56820__$1,new cljs.core.Keyword(null,\"middleware-exception\",\"middleware-exception\",1033843204));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(error,new cljs.core.Keyword(null,\"middleware-failure\",\"middleware-failure\",-1809927973))){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,255,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Client middleware threw an exception\",middleware_exception,\"See https://book.fulcrologic.com/#err-httpr-middleware-exc\"], null);\r\n}),null)),null,537397900);\r\n\r\n(progress_routine.cljs$core$IFn$_invoke$arity$2 ? progress_routine.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),evt) : progress_routine.call(null,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),evt));\r\n\r\nreturn (error_routine.cljs$core$IFn$_invoke$arity$1 ? error_routine.cljs$core$IFn$_invoke$arity$1(r) : error_routine.call(null,r));\r\n} else {\r\n(progress_routine.cljs$core$IFn$_invoke$arity$2 ? progress_routine.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"complete\",\"complete\",-500388775),evt) : progress_routine.call(null,new cljs.core.Keyword(null,\"complete\",\"complete\",-500388775),evt));\r\n\r\nreturn (raw_ok_handler.cljs$core$IFn$_invoke$arity$1 ? raw_ok_handler.cljs$core$IFn$_invoke$arity$1(r) : raw_ok_handler.call(null,r));\r\n}\r\n});\r\n});\r\n/**\r\n * Return a (fn [phase progress-event]) that calls the raw update function with progress and response data merged\r\n *   together as a response.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.progress_routine_STAR_ = (function com$fulcrologic$fulcro$networking$http_remote$progress_routine_STAR_(get_response_fn,raw_update_fn){\r\nnew cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,com.fulcrologic.guardrails.core._EQ__GT_,cljs.core.fn_QMARK_], null);\r\n\r\nreturn (function com$fulcrologic$fulcro$networking$http_remote$progress_routine_STAR__$_progress_fn(phase,evt){\r\nif(cljs.core.truth_(raw_update_fn)){\r\nvar G__56821 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"progress-phase\",\"progress-phase\",186626618),phase,new cljs.core.Keyword(null,\"progress-event\",\"progress-event\",1690048087),evt], null),(get_response_fn.cljs$core$IFn$_invoke$arity$0 ? get_response_fn.cljs$core$IFn$_invoke$arity$0() : get_response_fn.call(null))], 0));\r\nreturn (raw_update_fn.cljs$core$IFn$_invoke$arity$1 ? raw_update_fn.cljs$core$IFn$_invoke$arity$1(G__56821) : raw_update_fn.call(null,G__56821));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n});\r\n/**\r\n * Returns a (fn [xhrio-evt]) that pulls the progress and reports it to the progress routine and the raw\r\n *   error handler.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.error_routine_STAR_ = (function com$fulcrologic$fulcro$networking$http_remote$error_routine_STAR_(get_response,ok_routine,progress_routine,raw_error_handler){\r\nnew cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,com.fulcrologic.guardrails.core._EQ__GT_,cljs.core.fn_QMARK_], null);\r\n\r\nreturn (function (evt){\r\nvar r = (get_response.cljs$core$IFn$_invoke$arity$0 ? get_response.cljs$core$IFn$_invoke$arity$0() : get_response.call(null));\r\n(progress_routine.cljs$core$IFn$_invoke$arity$2 ? progress_routine.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),evt) : progress_routine.call(null,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),evt));\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((200),new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130).cljs$core$IFn$_invoke$arity$1(r))){\r\nreturn (ok_routine.cljs$core$IFn$_invoke$arity$1 ? ok_routine.cljs$core$IFn$_invoke$arity$1(evt) : ok_routine.call(null,evt));\r\n} else {\r\nreturn (raw_error_handler.cljs$core$IFn$_invoke$arity$1 ? raw_error_handler.cljs$core$IFn$_invoke$arity$1(r) : raw_error_handler.call(null,r));\r\n}\r\n});\r\n});\r\n/**\r\n * Create a remote that (by default) communicates with the given url (which defaults to `/api`).\r\n * \r\n *   The options map can contain:\r\n * \r\n *   * `:url` - The URL to contact\r\n *   * `:request-middleware` - See below\r\n *   * `:response-middleware` - See below\r\n *   * `:make-xhrio` - A constructor function to build a goog.net.XhrIo object, initialized however you see fit.\r\n * \r\n *   The request middleware is a `(fn [request] modified-request)`. The `request` will have `:url`, `:body`, `:method`, and `:headers`. The\r\n *   request middleware defaults to `wrap-fulcro-request` (which encodes the request in transit+json). The result of this\r\n *   middleware chain on the outgoing request becomes the real outgoing request. It is allowed to modify the `url`.\r\n *   If the the request middleware returns a corrupt request or throws an exception then the remote code\r\n *   will immediately abort the request. The return value of the middleware will be used to generate a request to `:url`,\r\n *   with `:method` (e.g. :post), and the given headers. The body will be sent as-is without further translation.\r\n * \r\n *   `response-middleware` is a function that returns a function `(fn [response] mod-response)` and\r\n *   defaults to `wrap-fulcro-response` which decodes the raw response and transforms it back to a response that Fulcro can merge.\r\n * \r\n *   The response will be a map containing the `:outgoing-request` which is the exact request sent on the network; `:body`, which\r\n *   is the raw data of the response. Additionally, there will be one or more of the following to indicate low-level\r\n *   details of the result: `:status-code`, `:status-text`, `:error-code` (one of :none, :exception, :http-error, :abort, or :timeout),\r\n *   and `:error-text`.  Middleware is allowed to morph any of this to suit its needs.\r\n * \r\n *   DEPRECATED: If the response middleware includes a `:transaction` key in the response with EQL, then that EQL will be\r\n *   used in the resulting Fulcro merge steps. This can seriously screw up built-in behaviors. You are much better off ensuring\r\n *   that your query matches the shape of the desired response in most cases.\r\n * \r\n *   The definition of `remote-error?` in the application will deterimine if happy-path or error handling will\r\n *   be applied to the response.  The default setting in Fulcro will cause\r\n *   a result with a 200 status code to cause whatever happy-path logic is configured for that specific\r\n *   response's processing.\r\n *   For example, see `m/default-result-action!` for mutations, and `df/internal-load` for loads. The `:body` key\r\n *   will be considered the response to use, and the optional `:transaction` key an override to the EQL query used\r\n *   for any merges.\r\n * \r\n *   See the top-level application configuration and Developer's Guide for more details.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.fulcro_http_remote = (function com$fulcrologic$fulcro$networking$http_remote$fulcro_http_remote(p__56824){\r\nvar map__56825 = p__56824;\r\nvar map__56825__$1 = cljs.core.__destructure_map(map__56825);\r\nvar options = map__56825__$1;\r\nvar url = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__56825__$1,new cljs.core.Keyword(null,\"url\",\"url\",276297046),\"/api\");\r\nvar request_middleware = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__56825__$1,new cljs.core.Keyword(null,\"request-middleware\",\"request-middleware\",589056817),com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request.cljs$core$IFn$_invoke$arity$0());\r\nvar response_middleware = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__56825__$1,new cljs.core.Keyword(null,\"response-middleware\",\"response-middleware\",-1502080044),com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response.cljs$core$IFn$_invoke$arity$0());\r\nvar make_xhrio = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__56825__$1,new cljs.core.Keyword(null,\"make-xhrio\",\"make-xhrio\",1145513365),com.fulcrologic.fulcro.networking.http_remote.make_xhrio);\r\nnew cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"url\",\"com.fulcrologic.fulcro.networking.http-remote/url\",-1403244238),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request-middleware\",\"com.fulcrologic.fulcro.networking.http-remote/request-middleware\",-2030599211),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response-middleware\",\"com.fulcrologic.fulcro.networking.http-remote/response-middleware\",-2107912072),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"make-xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/make-xhrio\",1348622897)], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__56826){\r\nreturn cljs.core.map_QMARK_(G__56826);\r\n})], null),(function (G__56826){\r\nreturn cljs.core.map_QMARK_(G__56826);\r\n}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"request-middleware\",\"request-middleware\",589056817),new cljs.core.Keyword(null,\"response-middleware\",\"response-middleware\",-1502080044),new cljs.core.Keyword(null,\"make-xhrio\",\"make-xhrio\",1145513365)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"url\",\"com.fulcrologic.fulcro.networking.http-remote/url\",-1403244238),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"request-middleware\",\"com.fulcrologic.fulcro.networking.http-remote/request-middleware\",-2030599211),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"response-middleware\",\"com.fulcrologic.fulcro.networking.http-remote/response-middleware\",-2107912072),new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"make-xhrio\",\"com.fulcrologic.fulcro.networking.http-remote/make-xhrio\",1348622897)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))], null),null])),com.fulcrologic.guardrails.core._EQ__GT_,new cljs.core.Keyword(\"com.fulcrologic.fulcro.networking.http-remote\",\"fulcro-remote\",\"com.fulcrologic.fulcro.networking.http-remote/fulcro-remote\",1282855379)], null);\r\n\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([options,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"active-requests\",\"active-requests\",1354177961),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"transmit!\",\"transmit!\",-107149039),(function com$fulcrologic$fulcro$networking$http_remote$fulcro_http_remote_$_transmit_BANG_(p__56827,p__56828){\r\nvar map__56829 = p__56827;\r\nvar map__56829__$1 = cljs.core.__destructure_map(map__56829);\r\nvar active_requests = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56829__$1,new cljs.core.Keyword(null,\"active-requests\",\"active-requests\",1354177961));\r\nvar map__56830 = p__56828;\r\nvar map__56830__$1 = cljs.core.__destructure_map(map__56830);\r\nvar send_node = map__56830__$1;\r\nvar ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56830__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"ast\",\"com.fulcrologic.fulcro.algorithms.tx-processing/ast\",1718830373));\r\nvar result_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56830__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"result-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/result-handler\",-114902209));\r\nvar update_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56830__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"update-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/update-handler\",-1256285755));\r\nvar edn = com.fulcrologic.fulcro.algorithms.do_not_use.ast__GT_query(ast);\r\nvar ok_handler = (function (result){\r\ntry{return (result_handler.cljs$core$IFn$_invoke$arity$1 ? result_handler.cljs$core$IFn$_invoke$arity$1(result) : result_handler.call(null,result));\r\n}catch (e56831){var e = e56831;\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,336,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Result handler for remote\",url,\"failed with an exception. See https://book.fulcrologic.com/#err-httpr-result-handler-exc\"], null);\r\n}),null)),null,33697443);\r\n}});\r\nvar progress_handler = (function (update_msg){\r\nvar msg = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130),(200),new cljs.core.Keyword(null,\"raw-progress\",\"raw-progress\",-329574415),cljs.core.select_keys(update_msg,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"progress-phase\",\"progress-phase\",186626618),new cljs.core.Keyword(null,\"progress-event\",\"progress-event\",1690048087)], null)),new cljs.core.Keyword(null,\"overall-progress\",\"overall-progress\",-1283185891),com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$2(update_msg,new cljs.core.Keyword(null,\"overall\",\"overall\",-704031008)),new cljs.core.Keyword(null,\"receive-progress\",\"receive-progress\",246867556),com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$2(update_msg,new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724)),new cljs.core.Keyword(null,\"send-progress\",\"send-progress\",1473116309),com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_.cljs$core$IFn$_invoke$arity$2(update_msg,new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862))], null);\r\nif(cljs.core.truth_(update_handler)){\r\ntry{return (update_handler.cljs$core$IFn$_invoke$arity$1 ? update_handler.cljs$core$IFn$_invoke$arity$1(msg) : update_handler.call(null,msg));\r\n}catch (e56832){var e = e56832;\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,347,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Update handler for remote\",url,\"failed with an exception. See https://book.fulcrologic.com/#err-httpr-update-handler-exc\"], null);\r\n}),null)),null,-1179473346);\r\n}} else {\r\nreturn null;\r\n}\r\n});\r\nvar error_handler = (function (error_result){\r\ntry{var error = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([error_result,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130),(500)], null)], 0));\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,351,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Remote Error\",error),\"See https://book.fulcrologic.com/#err-httpr-remote-err\"], null);\r\n}),null)),null,1859466809);\r\n\r\nreturn (result_handler.cljs$core$IFn$_invoke$arity$1 ? result_handler.cljs$core$IFn$_invoke$arity$1(error) : result_handler.call(null,error));\r\n}catch (e56833){var e = e56833;\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,354,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Error handler for remote\",url,\"failed with an exception. See https://book.fulcrologic.com/#err-httpr-err-handler-exc\"], null);\r\n}),null)),null,-226474150);\r\n}});\r\nvar temp__5802__auto__ = (function (){try{var G__56835 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),edn,new cljs.core.Keyword(null,\"url\",\"url\",276297046),url,new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687)], null);\r\nreturn (request_middleware.cljs$core$IFn$_invoke$arity$1 ? request_middleware.cljs$core$IFn$_invoke$arity$1(G__56835) : request_middleware.call(null,G__56835));\r\n}catch (e56834){var e = e56834;\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.networking.http-remote\",null,358,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Send aborted due to middleware failure. See https://book.fulcrologic.com/#err-httpr-send-abort\"], null);\r\n}),null)),null,2099552359);\r\n\r\nreturn null;\r\n}})();\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar real_request = temp__5802__auto__;\r\nvar abort_id = (function (){var or__5045__auto__ = new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"abort-id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/abort-id\",2068829184).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420).cljs$core$IFn$_invoke$arity$1(send_node));\r\nif(cljs.core.truth_(or__5045__auto__)){\r\nreturn or__5045__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420).cljs$core$IFn$_invoke$arity$1(send_node));\r\n}\r\n})();\r\nvar xhrio = (make_xhrio.cljs$core$IFn$_invoke$arity$0 ? make_xhrio.cljs$core$IFn$_invoke$arity$0() : make_xhrio.call(null));\r\nvar map__56836 = real_request;\r\nvar map__56836__$1 = cljs.core.__destructure_map(map__56836);\r\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56836__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56836__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\r\nvar url__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56836__$1,new cljs.core.Keyword(null,\"url\",\"url\",276297046));\r\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56836__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\r\nvar response_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56836__$1,new cljs.core.Keyword(null,\"response-type\",\"response-type\",-1493770458));\r\nvar http_verb = clojure.string.upper_case(cljs.core.name((function (){var or__5045__auto__ = method;\r\nif(cljs.core.truth_(or__5045__auto__)){\r\nreturn or__5045__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"post\",\"post\",269697687);\r\n}\r\n})()));\r\nvar extract_response = (function (){\r\nreturn com.fulcrologic.fulcro.networking.http_remote.extract_response(body,real_request,xhrio);\r\n});\r\nvar extract_response_mw = com.fulcrologic.fulcro.networking.http_remote.response_extractor_STAR_(response_middleware,edn,real_request,xhrio);\r\nvar gc_network_resources = com.fulcrologic.fulcro.networking.http_remote.cleanup_routine_STAR_(abort_id,active_requests,xhrio);\r\nvar progress_routine = com.fulcrologic.fulcro.networking.http_remote.progress_routine_STAR_(extract_response,progress_handler);\r\nvar ok_routine = com.fulcrologic.fulcro.networking.http_remote.ok_routine_STAR_(progress_routine,extract_response_mw,ok_handler,error_handler);\r\nvar error_routine = com.fulcrologic.fulcro.networking.http_remote.error_routine_STAR_(extract_response_mw,ok_routine,progress_routine,error_handler);\r\nvar with_cleanup = (function (f){\r\nreturn (function (evt){\r\ntry{return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(evt) : f.call(null,evt));\r\n}finally {gc_network_resources();\r\n}});\r\n});\r\nif(cljs.core.truth_(abort_id)){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(active_requests,cljs.core.update,abort_id,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([xhrio], 0));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__5043__auto__ = (com.fulcrologic.fulcro.networking.http_remote.legal_response_types.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.networking.http_remote.legal_response_types.cljs$core$IFn$_invoke$arity$1(response_type) : com.fulcrologic.fulcro.networking.http_remote.legal_response_types.call(null,response_type));\r\nif(cljs.core.truth_(and__5043__auto__)){\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),response_type);\r\n} else {\r\nreturn and__5043__auto__;\r\n}\r\n})())){\r\nxhrio.setResponseType(cljs.core.get.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.networking.http_remote.response_types,response_type));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(progress_handler)){\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_enable_progress_events(xhrio);\r\n\r\ngoog.events.listen(xhrio,goog.net.EventType.DOWNLOAD_PROGRESS,(function (p1__56822_SHARP_){\r\nreturn progress_routine(new cljs.core.Keyword(null,\"receiving\",\"receiving\",829203724),p1__56822_SHARP_);\r\n}));\r\n\r\ngoog.events.listen(xhrio,goog.net.EventType.UPLOAD_PROGRESS,(function (p1__56823_SHARP_){\r\nreturn progress_routine(new cljs.core.Keyword(null,\"sending\",\"sending\",-1806704862),p1__56823_SHARP_);\r\n}));\r\n} else {\r\n}\r\n\r\ngoog.events.listen(xhrio,goog.net.EventType.SUCCESS,with_cleanup(ok_routine));\r\n\r\ngoog.events.listen(xhrio,goog.net.EventType.ABORT,with_cleanup((function (){\r\nreturn ok_handler(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478),\"Cancelled\",new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"aborted?\",\"com.fulcrologic.fulcro.algorithms.tx-processing/aborted?\",2086149958),true], null));\r\n})));\r\n\r\ngoog.events.listen(xhrio,goog.net.EventType.ERROR,with_cleanup(error_routine));\r\n\r\nreturn com.fulcrologic.fulcro.networking.http_remote.xhrio_send(xhrio,url__$1,http_verb,body,headers);\r\n} else {\r\nreturn error_handler(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"abort\",\"abort\",521193198),new cljs.core.Keyword(null,\"error-text\",\"error-text\",2021893718),\"Transmission was aborted because the request middleware returned nil or threw an exception\"], null));\r\n}\r\n}),new cljs.core.Keyword(null,\"abort!\",\"abort!\",-220883953),(function com$fulcrologic$fulcro$networking$http_remote$fulcro_http_remote_$_abort_BANG_(this$,id){\r\nvar temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(new cljs.core.Keyword(null,\"active-requests\",\"active-requests\",1354177961).cljs$core$IFn$_invoke$arity$1(this$)),id);\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar xhrios = temp__5802__auto__;\r\nvar seq__56837 = cljs.core.seq(xhrios);\r\nvar chunk__56838 = null;\r\nvar count__56839 = (0);\r\nvar i__56840 = (0);\r\nwhile(true){\r\nif((i__56840 < count__56839)){\r\nvar xhrio = chunk__56838.cljs$core$IIndexed$_nth$arity$2(null,i__56840);\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_abort(xhrio);\r\n\r\n\r\nvar G__56848 = seq__56837;\r\nvar G__56849 = chunk__56838;\r\nvar G__56850 = count__56839;\r\nvar G__56851 = (i__56840 + (1));\r\nseq__56837 = G__56848;\r\nchunk__56838 = G__56849;\r\ncount__56839 = G__56850;\r\ni__56840 = G__56851;\r\ncontinue;\r\n} else {\r\nvar temp__5804__auto__ = cljs.core.seq(seq__56837);\r\nif(temp__5804__auto__){\r\nvar seq__56837__$1 = temp__5804__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56837__$1)){\r\nvar c__5568__auto__ = cljs.core.chunk_first(seq__56837__$1);\r\nvar G__56852 = cljs.core.chunk_rest(seq__56837__$1);\r\nvar G__56853 = c__5568__auto__;\r\nvar G__56854 = cljs.core.count(c__5568__auto__);\r\nvar G__56855 = (0);\r\nseq__56837 = G__56852;\r\nchunk__56838 = G__56853;\r\ncount__56839 = G__56854;\r\ni__56840 = G__56855;\r\ncontinue;\r\n} else {\r\nvar xhrio = cljs.core.first(seq__56837__$1);\r\ncom.fulcrologic.fulcro.networking.http_remote.xhrio_abort(xhrio);\r\n\r\n\r\nvar G__56856 = cljs.core.next(seq__56837__$1);\r\nvar G__56857 = null;\r\nvar G__56858 = (0);\r\nvar G__56859 = (0);\r\nseq__56837 = G__56856;\r\nchunk__56838 = G__56857;\r\ncount__56839 = G__56858;\r\ni__56840 = G__56859;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.networking.http-remote\",null,391,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to abort. No active request with abort id:\",id], null);\r\n}),null)),null,451428742);\r\n}\r\n})], null)], 0));\r\n});\r\n/**\r\n * Returns a number between 0 and 100 for the overall progress.  Use in a `progress-action` section of your mutation\r\n *   when using the http-remote to monitor network progress.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.overall_progress = (function com$fulcrologic$fulcro$networking$http_remote$overall_progress(mutation_env){\r\nvar G__56841 = mutation_env;\r\nvar G__56841__$1 = (((G__56841 == null))?null:new cljs.core.Keyword(null,\"progress\",\"progress\",244323547).cljs$core$IFn$_invoke$arity$1(G__56841));\r\nif((G__56841__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"overall-progress\",\"overall-progress\",-1283185891).cljs$core$IFn$_invoke$arity$1(G__56841__$1);\r\n}\r\n});\r\n/**\r\n * Returns a number between 0 and 100 for the receive progress.  Use in a `progress-action` section of your mutation\r\n *   when using the http-remote to monitor network progress.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.receive_progress = (function com$fulcrologic$fulcro$networking$http_remote$receive_progress(mutation_env){\r\nvar G__56842 = mutation_env;\r\nvar G__56842__$1 = (((G__56842 == null))?null:new cljs.core.Keyword(null,\"progress\",\"progress\",244323547).cljs$core$IFn$_invoke$arity$1(G__56842));\r\nif((G__56842__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"receive-progress\",\"receive-progress\",246867556).cljs$core$IFn$_invoke$arity$1(G__56842__$1);\r\n}\r\n});\r\n/**\r\n * Returns a number between 0 and 100 for the send progress.  Use in a `progress-action` section of your mutation\r\n *   when using the http-remote to monitor network progress.\r\n */\r\ncom.fulcrologic.fulcro.networking.http_remote.send_progress = (function com$fulcrologic$fulcro$networking$http_remote$send_progress(mutation_env){\r\nvar G__56843 = mutation_env;\r\nvar G__56843__$1 = (((G__56843 == null))?null:new cljs.core.Keyword(null,\"progress\",\"progress\",244323547).cljs$core$IFn$_invoke$arity$1(G__56843));\r\nif((G__56843__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"send-progress\",\"send-progress\",1473116309).cljs$core$IFn$_invoke$arity$1(G__56843__$1);\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","com/fulcrologic/fulcro/networking/http_remote.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",50],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$>defn","~$com.fulcrologic.guardrails.core","~$>def","^F"],"~:excludes",["~#set",["~$send"]],"~:name","~$com.fulcrologic.fulcro.networking.http-remote","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",["^ ","~$XhrIo","~$goog.net.XhrIo","~$EventType","~$goog.net.EventType","~$ErrorCode","~$goog.net.ErrorCode"],"~:requires",["^ ","~$t","~$com.fulcrologic.fulcro.algorithms.transit","~$edn-query-language.core","^Y","^>","^?","^F","^F","~$log","~$taoensso.timbre","~$ct","~$cognitect.transit","^R","^R","~$eql","^Y","^U","^V","^S","^T","~$cljs.core","^13","~$goog","^14","^X","^X","^11","^11","^T","^T","~$events","~$goog.events","~$txn","~$com.fulcrologic.fulcro.algorithms.tx-processing","~$s","^?","^Q","^R","^18","^18","^[","^[","~$str","~$clojure.string","^1:","^1:","~$futil","~$com.fulcrologic.fulcro.algorithms.do-not-use","^?","^?","^16","^16","^V","^V","^1<","^1<"],"~:seen",["^I",["~:require"]],"~:uses",["^ ","^E","^F","~$=>","^F","^G","^F"],"~:require-macros",["^ ","^13","^13","^>","^?","^F","^F","^Z","^[","~$s","^?","^[","^[","^?","^?"],"~:form",["~#list",["~$ns","^L",["^1C",["~:refer-clojure","~:exclude",["^J"]]],["^1C",["^1>",["^>","~:as","~$s"],["^1:","^1G","^19"],["^11","^1G","^10"],["^X","^1G","~$t"],["^18","^1G","^17"],["^Y","^1G","^12"],["^F","~:refer",["^E","^1@","^G"]],["^16","^1G","^15"],["^[","^1G","^Z"],["^1<","^1G","^1;"]]],["^1C",["~:import",["~$goog.net","^Q","^S","^U"]]]]],"~:flags",["^ ","^1>",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^?","^1:","^11","^X","^18","^Y","^F","^16","^[","^1<","^R","^T","^V"]],"^O","^L","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/networking/http_remote.cljs"],"~:compiled-at",1675135951181,"^M",["^ ","~$t","^X","^Y","^Y","^>","^?","^F","^F","^Z","^[","^10","^11","^R","^R","^12","^Y","^U","^V","^S","^T","^13","^13","^14","^14","^X","^X","^11","^11","^T","^T","^15","^16","^17","^18","~$s","^?","^Q","^R","^18","^18","^[","^[","^19","^1:","^1:","^1:","^1;","^1<","^?","^?","^16","^16","^V","^V","^1<","^1<"],"~:resource-name","com/fulcrologic/fulcro/networking/http_remote.cljs","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.networking.http-remote\n  (:refer-clojure :exclude [send])\n  (:require\n    [clojure.spec.alpha :as s]\n    [clojure.string :as str]\n    [cognitect.transit :as ct]\n    [com.fulcrologic.fulcro.algorithms.transit :as t]\n    [com.fulcrologic.fulcro.algorithms.tx-processing :as txn]\n    [edn-query-language.core :as eql]\n    [com.fulcrologic.guardrails.core :refer [>defn => >def]]\n    [goog.events :as events]\n    [taoensso.timbre :as log]\n    [com.fulcrologic.fulcro.algorithms.do-not-use :as futil])\n  (:import [goog.net XhrIo EventType ErrorCode]))\n\n(>def ::method #{:post :get :delete :put :head :connect :options :trace :patch})\n(>def ::url string?)\n(>def ::headers (s/map-of string? string?))\n(>def ::body any?)\n(>def ::request (s/keys :req-un [::method ::body ::url ::headers]))\n(>def ::error #{:none :exception :http-error :network-error :abort\n                :middleware-failure :access-denied :not-found :silent :custom :offline\n                :timeout})\n(>def ::error-text string?)\n(>def ::status-code pos-int?)\n(>def ::status-text string?)\n(>def ::outgoing-request ::request)\n(>def ::transaction vector?)\n(>def ::progress-phase #{:sending :receiving :complete :failed})\n(>def ::progress-event any?)\n(>def ::response (s/keys :req-un [::outgoing-request ::body ::status-code ::status-text ::error ::error-text]\n                   :opt-un [::transaction ::progress-phase ::progress-event]))\n(>def ::xhrio-event any?)\n(>def ::xhrio any?)\n(>def ::make-xhrio fn?)\n\n(>def ::response-middleware fn?)\n(>def ::request-middleware fn?)\n(>def ::active-requests (s/and\n                          #(map? (deref %))\n                          #(every? set? (vals (deref %)))))\n\n(>def ::transmit! fn?)\n(>def ::abort! fn?)\n(>def ::fulcro-remote (s/keys :req-un [::transmit!] :opt-un [::abort!]))\n\n(def xhrio-error-states {(.-NO_ERROR ^js ErrorCode)        :none\n                         (.-EXCEPTION ^js ErrorCode)       :exception\n                         (.-HTTP_ERROR ^js ErrorCode)      :http-error\n                         (.-ABORT ^js ErrorCode)           :abort\n                         (.-ACCESS_DENIED ^js ErrorCode)   :access-denied\n                         (.-FILE_NOT_FOUND ^js ErrorCode)  :not-found\n                         (.-FF_SILENT_ERROR ^js ErrorCode) :silent\n                         (.-CUSTOM_ERROR ^js ErrorCode)    :custom\n                         (.-OFFLINE ^js ErrorCode)         :offline\n                         (.-TIMEOUT ^js ErrorCode)         :timeout})\n\n(defn make-xhrio [] (XhrIo.))\n(defn xhrio-dispose [^js xhrio] (.dispose xhrio))\n(defn xhrio-enable-progress-events [^js xhrio] (.setProgressEventsEnabled xhrio true))\n(defn xhrio-abort [^js xhrio] (.abort xhrio))\n(defn xhrio-send [^js xhrio url verb body headers] (.send xhrio url verb body (some-> headers clj->js)))\n(defn xhrio-status-code [^js xhrio] (.getStatus xhrio))\n(defn xhrio-status-text [^js xhrio] (.getStatusText xhrio))\n(defn xhrio-raw-error [^js xhrio] (.getLastErrorCode xhrio))\n(defn xhrio-error-code [^js xhrio]\n  (let [status (xhrio-status-code xhrio)\n        error  (get xhrio-error-states (xhrio-raw-error xhrio) :unknown)\n        error  (if (and (= 0 status) (= error :http-error)) :network-error error)]\n    error))\n(defn xhrio-error-text [^js xhrio] (.getLastError xhrio))\n(defn xhrio-response [^js xhrio] (.getResponse xhrio))\n(defn xhrio-response-headers [^js xhrio] (js->clj (.getResponseHeaders xhrio)))\n\n(defn xhrio-progress\n  \"Given an xhrio progress event, returns a map with keys :loaded and :total, where loaded is the\n  number of bytes transferred in the given phase (upload/download) and total is the total number\n  of bytes to transfer (if known). \"\n  [^js event]\n  {:loaded (.-loaded event) :total (.-total event)})\n\n(defn progress%\n  \"Takes the progress report from the progress network event\n  and returns a number between 0 and 100. `phase` can be `:overall`, `:sending`, or `:receiving`. When\n  set to `:overall` then the send phase will count for progress points between 0 and 49, and receiving phase\n  will account for 50 to 100. When set to :sending or :receiving the entire range will count for that phase only\n  (i.e. once sending is complete this function would return 100 throughout the receiving phase.)\n\n  If total is unknown, then this function returns 0.\"\n  ([progress] (progress% progress :overall))\n  ([progress phase]\n   (let [current-phase (some-> progress :progress-phase)\n         {:keys [loaded total] :or {total 0 loaded 0}} (some-> progress :progress-event xhrio-progress)\n         [base max-pct] (cond\n                          (= current-phase :complete) [100 100]\n                          (= current-phase :failed) [0 0]\n                          (and (= current-phase :sending) (= :overall phase)) [0 49]\n                          (and (= current-phase :receiving) (= :overall phase)) [50 100]\n                          (and (= current-phase :sending) (= :sending phase)) [0 100]\n                          (and (= current-phase :receiving) (= :sending phase)) [100 100]\n                          (and (= current-phase :sending) (= :receiving phase)) [0 0]\n                          (and (= current-phase :receiving) (= :receiving phase)) [0 100])\n         slope         (- max-pct base)\n         x             (if (= 0 total) 1 (/ loaded total))]\n     (if (zero? slope)\n       100\n       (js/Math.floor (+ base (* x slope)))))))\n\n(def response-types {:default      \"\"\n                     :array-buffer \"arraybuffer\"\n                     :blob         \"blob\"\n                     :document     \"document\"\n                     :text         \"text\"})\n(def legal-response-types (set (keys response-types)))\n(>def ::response-type legal-response-types)\n\n(defn desired-response-type [{:keys [body]}]\n  (let [nodes (some-> body eql/query->ast :children)\n        cnt   (count nodes)\n        alt   (some #(-> % :params ::response-type) nodes)]\n    (when (and alt (not= 1 cnt))\n      (log/error \"Attempt to request alternate response from HTTP remote from multiple items in a single transaction. This could mean more than one transaction got combined into a single request. See https://book.fulcrologic.com/#err-httpr-multiple-items\"))\n    (if (and alt (= 1 cnt) (contains? legal-response-types alt))\n      (let [node         (update-in (first nodes) [:params] dissoc ::response-type)\n            updated-body (futil/ast->query node)]\n        [updated-body alt])\n      [body :default])))\n\n(defn wrap-fulcro-request\n  \"Client Remote Middleware to add transit encoding for normal Fulcro requests. Sets the content type and transforms an EDN\n  body to a transit+json encoded body. addl-transit-handlers is a map from data type to transit handler (like\n  you would pass using the `:handlers` option of transit). The additional handlers are used to encode new data types\n  into transit. transit-transformation is a function of one argument returning a transformed transit value (like you\n  would pass using the `:transform` option of transit). See transit documentation for more details.\"\n  ([handler addl-transit-handlers transit-transformation]\n   (let [writer (t/writer (cond-> {}\n                            addl-transit-handlers (assoc :handlers addl-transit-handlers)\n                            transit-transformation (assoc :transform transit-transformation)))]\n     (fn [{:keys [headers body] :as request}]\n       (let [[body response-type] (desired-response-type request)\n             body    (ct/write writer body)\n             headers (assoc headers \"Content-Type\" \"application/transit+json\")]\n         (handler (merge request {:body body :headers headers :method :post :response-type response-type}))))))\n  ([handler addl-transit-handlers] (wrap-fulcro-request handler addl-transit-handlers nil))\n  ([handler] (wrap-fulcro-request handler nil nil))\n  ([] (wrap-fulcro-request identity nil nil)))\n\n(defn wrap-csrf-token\n  \"Client remote request middleware. This middleware can be added to add an X-CSRF-Token header to the request.\"\n  ([csrf-token] (wrap-csrf-token identity csrf-token))\n  ([handler csrf-token]\n   (fn [request]\n     (handler (update request :headers assoc \"X-CSRF-Token\" csrf-token)))))\n\n(defn wrap-fulcro-response\n  \"Client remote middleware to transform a network response to a standard Fulcro form.\n\n  This returns a function that will decode a transit response iff the resulting status code is 200 and the\n  body is not empty. For errant status codes and empty body: the response body will become an empty map.\n\n  No arguments: Returns a function that can process responses, that is not further chained.\n  handler: If supplied, the result of this transformation will be passed through the `handler`.\n  addl-transit-handlers is equivalent to the :handlers option in transit: a map from data type to handler.\n  \"\n  ([] (wrap-fulcro-response identity))\n  ([handler] (wrap-fulcro-response handler nil))\n  ([handler addl-transit-handlers]\n   (let [base-handlers {}\n         handlers      (if (map? addl-transit-handlers) (merge base-handlers addl-transit-handlers) base-handlers)\n         reader        (t/reader {:handlers handlers})]\n     (fn fulcro-response-handler [{:keys [body error outgoing-request] :as response}]\n       (handler\n         (let [{:keys [response-type]} outgoing-request]\n           (if (= :default response-type)\n             (try\n               (if (= :network-error error)\n                 response\n                 (let [new-body (if (str/blank? body)\n                                  {}\n                                  (ct/read reader body))\n                       response (assoc response :body new-body)]\n                   response))\n               (catch :default e\n                 (log/warn \"Transit decode failed! See https://book.fulcrologic.com/#warn-transit-decode-failed\")\n                 (assoc response :status-code 417 :status-text \"body was either not transit or you have not installed the correct transit read/write handlers.\")))\n             response)))))))\n\n(defn extract-response\n  \"Generate a response map from the status of the given xhrio object, which could be in a complete or error state.\"\n  [tx request xhrio]\n  [any? ::request ::xhrio => ::response]\n  (try\n    {:outgoing-request     request\n     :original-transaction tx\n     :headers              (xhrio-response-headers xhrio)\n     :body                 (xhrio-response xhrio)\n     :status-code          (xhrio-status-code xhrio)\n     :status-text          (xhrio-status-text xhrio)\n     :error                (xhrio-error-code xhrio)\n     :error-text           (xhrio-error-text xhrio)}\n    (catch :default e\n      (log/error \"Unable to extract response from XhrIO Object\" e \"See https://book.fulcrologic.com/#err-httpr-response-extract-fail\")\n      {:outgoing-request     request\n       :original-transaction tx\n       :body                 \"\"\n       :headers              {}\n       :status-code          0\n       :status-text          \"Internal Exception\"\n       :error                :exception\n       :error-text           \"Internal Exception from XHRIO\"})))\n\n(defn was-network-error?\n  \"Returns true if the given response looks like a low-level network error.\"\n  [{:keys [status-code error]}]\n  [::response => boolean?]\n  (boolean (and (= 0 status-code) (= :http-error error))))\n\n(defn clear-request*\n  [active-requests id xhrio]\n  [::active-requests any? ::xhrio => (s/map-of any? set?)]\n  (if (every? #(= xhrio %) (get active-requests id))\n    (dissoc active-requests id)\n    (update active-requests id disj xhrio)))\n\n(defn response-extractor*\n  [response-middleware edn real-request xhrio]\n  [::response-middleware any? ::request ::xhrio => ::response]\n  (fn []\n    (let [r (extract-response edn real-request xhrio)]\n      (try\n        (response-middleware r)\n        (catch :default e\n          (log/error \"Client response middleware threw an exception. \" e \". Defaulting to raw response. See https://book.fulcrologic.com/#err-httpr-resp-middleware-exc\")\n          (merge r {:error                (if (contains? #{nil :none} (:error r)) :middleware-failure (:error r))\n                    :middleware-exception e}))))))\n\n(defn cleanup-routine*\n  [abort-id active-requests xhrio]\n  [::txn/abort-id ::active-requests ::xhrio => fn?]\n  (fn []\n    (when abort-id\n      (swap! active-requests clear-request* abort-id xhrio))\n    (xhrio-dispose xhrio)))\n\n(defn ok-routine*\n  \"Returns a (fn [evt] ) that pulls the response, runs it through middleware, and reports\n   the appropriate results to the raw-ok-handler, and progress-routine. If the middleware fails,\n   it will instaed report to the error-routine (which in turn will report to the raw error handler)\"\n  [progress-routine get-response-fn raw-ok-handler error-routine]\n  [fn? fn? fn? fn? => any?]\n  (fn [evt]\n    (let [{:keys [error middleware-exception] :as r} (get-response-fn)]\n      (if (= error :middleware-failure)\n        (do\n          (log/error \"Client middleware threw an exception\" middleware-exception \"See https://book.fulcrologic.com/#err-httpr-middleware-exc\")\n          (progress-routine :failed evt)\n          (error-routine r))\n        (do\n          (progress-routine :complete evt)\n          (raw-ok-handler r))))))\n\n(defn progress-routine*\n  \"Return a (fn [phase progress-event]) that calls the raw update function with progress and response data merged\n  together as a response.\"\n  [get-response-fn raw-update-fn]\n  [fn? fn? => fn?]\n  (fn progress-fn\n    [phase evt]\n    (when raw-update-fn\n      (raw-update-fn (merge {:progress-phase phase\n                             :progress-event evt} (get-response-fn))))))\n\n(defn error-routine*\n  \"Returns a (fn [xhrio-evt]) that pulls the progress and reports it to the progress routine and the raw\n  error handler.\"\n  [get-response ok-routine progress-routine raw-error-handler]\n  [fn? fn? fn? fn? => fn?]\n  (fn [evt]\n    (let [r (get-response)]                                 ; middleware can rewrite to be ok...\n      (progress-routine :failed evt)\n      (if (= 200 (:status-code r))\n        (ok-routine evt)\n        (raw-error-handler r)))))\n\n(defn fulcro-http-remote\n  \"Create a remote that (by default) communicates with the given url (which defaults to `/api`).\n\n  The options map can contain:\n\n  * `:url` - The URL to contact\n  * `:request-middleware` - See below\n  * `:response-middleware` - See below\n  * `:make-xhrio` - A constructor function to build a goog.net.XhrIo object, initialized however you see fit.\n\n  The request middleware is a `(fn [request] modified-request)`. The `request` will have `:url`, `:body`, `:method`, and `:headers`. The\n  request middleware defaults to `wrap-fulcro-request` (which encodes the request in transit+json). The result of this\n  middleware chain on the outgoing request becomes the real outgoing request. It is allowed to modify the `url`.\n  If the the request middleware returns a corrupt request or throws an exception then the remote code\n  will immediately abort the request. The return value of the middleware will be used to generate a request to `:url`,\n  with `:method` (e.g. :post), and the given headers. The body will be sent as-is without further translation.\n\n  `response-middleware` is a function that returns a function `(fn [response] mod-response)` and\n  defaults to `wrap-fulcro-response` which decodes the raw response and transforms it back to a response that Fulcro can merge.\n\n  The response will be a map containing the `:outgoing-request` which is the exact request sent on the network; `:body`, which\n  is the raw data of the response. Additionally, there will be one or more of the following to indicate low-level\n  details of the result: `:status-code`, `:status-text`, `:error-code` (one of :none, :exception, :http-error, :abort, or :timeout),\n  and `:error-text`.  Middleware is allowed to morph any of this to suit its needs.\n\n  DEPRECATED: If the response middleware includes a `:transaction` key in the response with EQL, then that EQL will be\n  used in the resulting Fulcro merge steps. This can seriously screw up built-in behaviors. You are much better off ensuring\n  that your query matches the shape of the desired response in most cases.\n\n  The definition of `remote-error?` in the application will deterimine if happy-path or error handling will\n  be applied to the response.  The default setting in Fulcro will cause\n  a result with a 200 status code to cause whatever happy-path logic is configured for that specific\n  response's processing.\n  For example, see `m/default-result-action!` for mutations, and `df/internal-load` for loads. The `:body` key\n  will be considered the response to use, and the optional `:transaction` key an override to the EQL query used\n  for any merges.\n\n  See the top-level application configuration and Developer's Guide for more details.\"\n  [{:keys [url request-middleware response-middleware make-xhrio] :or {url                 \"/api\"\n                                                                       response-middleware (wrap-fulcro-response)\n                                                                       request-middleware  (wrap-fulcro-request)\n                                                                       make-xhrio          make-xhrio} :as options}]\n  [(s/keys :opt-un [::url ::request-middleware ::response-middleware ::make-xhrio]) => ::fulcro-remote]\n  (merge options\n    {:active-requests (atom {})\n     :transmit!       (fn transmit! [{:keys [active-requests]} {::txn/keys [ast result-handler update-handler] :as send-node}]\n                        (let [edn              (futil/ast->query ast)\n                              ok-handler       (fn [result]\n                                                 (try\n                                                   (result-handler result)\n                                                   (catch :default e\n                                                     (log/error e \"Result handler for remote\" url \"failed with an exception. See https://book.fulcrologic.com/#err-httpr-result-handler-exc\"))))\n                              progress-handler (fn [update-msg]\n                                                 (let [msg {:status-code      200\n                                                            :raw-progress     (select-keys update-msg [:progress-phase :progress-event])\n                                                            :overall-progress (progress% update-msg :overall)\n                                                            :receive-progress (progress% update-msg :receiving)\n                                                            :send-progress    (progress% update-msg :sending)}]\n                                                   (when update-handler\n                                                     (try\n                                                       (update-handler msg)\n                                                       (catch :default e\n                                                         (log/error e \"Update handler for remote\" url \"failed with an exception. See https://book.fulcrologic.com/#err-httpr-update-handler-exc\"))))))\n                              error-handler    (fn [error-result]\n                                                 (try\n                                                   (let [error (merge error-result {:status-code 500})]\n                                                     (log/error (ex-info \"Remote Error\" error) \"See https://book.fulcrologic.com/#err-httpr-remote-err\")\n                                                     (result-handler error))\n                                                   (catch :default e\n                                                     (log/error e \"Error handler for remote\" url \"failed with an exception. See https://book.fulcrologic.com/#err-httpr-err-handler-exc\"))))]\n                          (if-let [real-request (try\n                                                  (request-middleware {:headers {} :body edn :url url :method :post})\n                                                  (catch :default e\n                                                    (log/error e \"Send aborted due to middleware failure. See https://book.fulcrologic.com/#err-httpr-send-abort\")\n                                                    nil))]\n                            (let [abort-id             (or\n                                                         (-> send-node ::txn/options ::txn/abort-id)\n                                                         (-> send-node ::txn/options :abort-id))\n                                  xhrio                (make-xhrio)\n                                  {:keys [body headers url method response-type]} real-request\n                                  http-verb            (-> (or method :post) name str/upper-case)\n                                  extract-response     #(extract-response body real-request xhrio)\n                                  extract-response-mw  (response-extractor* response-middleware edn real-request xhrio)\n                                  gc-network-resources (cleanup-routine* abort-id active-requests xhrio)\n                                  progress-routine     (progress-routine* extract-response progress-handler)\n                                  ok-routine           (ok-routine* progress-routine extract-response-mw ok-handler error-handler)\n                                  error-routine        (error-routine* extract-response-mw ok-routine progress-routine error-handler)\n                                  with-cleanup         (fn [f] (fn [evt] (try (f evt) (finally (gc-network-resources)))))]\n                              (when abort-id\n                                (swap! active-requests update abort-id (fnil conj #{}) xhrio))\n                              (when (and (legal-response-types response-type) (not= :default response-type))\n                                (.setResponseType ^js xhrio (get response-types response-type)))\n                              (when progress-handler\n                                (xhrio-enable-progress-events xhrio)\n                                (events/listen xhrio (.-DOWNLOAD_PROGRESS ^js EventType) #(progress-routine :receiving %))\n                                (events/listen xhrio (.-UPLOAD_PROGRESS ^js EventType) #(progress-routine :sending %)))\n                              (events/listen xhrio (.-SUCCESS ^js EventType) (with-cleanup ok-routine))\n                              (events/listen xhrio (.-ABORT ^js EventType) (with-cleanup #(ok-handler {:status-text   \"Cancelled\"\n                                                                                                       ::txn/aborted? true})))\n                              (events/listen xhrio (.-ERROR ^js EventType) (with-cleanup error-routine))\n                              (xhrio-send xhrio url http-verb body headers))\n                            (error-handler {:error :abort :error-text \"Transmission was aborted because the request middleware returned nil or threw an exception\"}))))\n     :abort!          (fn abort! [this id]\n                        (if-let [xhrios (get @(:active-requests this) id)]\n                          (doseq [xhrio xhrios]\n                            (xhrio-abort xhrio))\n                          (log/info \"Unable to abort. No active request with abort id:\" id)))}))\n\n(defn overall-progress\n  \"Returns a number between 0 and 100 for the overall progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress.\"\n  [mutation-env]\n  (some-> mutation-env :progress :overall-progress))\n\n(defn receive-progress\n  \"Returns a number between 0 and 100 for the receive progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress.\"\n  [mutation-env]\n  (some-> mutation-env :progress :receive-progress))\n\n(defn send-progress\n  \"Returns a number between 0 and 100 for the send progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress.\"\n  [mutation-env]\n  (some-> mutation-env :progress :send-progress))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs.spec.alpha/def-impl","cljs.core/string?","cljs.spec.alpha.every_impl","cljs.spec.alpha.tuple_impl","i__34624__auto__","v__34625__auto__","cljs.core.nth","cljs.core/map?","G__56776","cljs.core/any?","cljs.spec.alpha/map-spec-impl","G__56777","cljs.core/contains?","cljs.core/pos-int?","cljs.core/vector?","G__56778","cljs.core/fn?","cljs.spec.alpha/and-spec-impl","p1__56779#","p1__56780#","cljs.core/deref","cljs.core/every?","cljs.core/set?","cljs.core/vals","G__56781","com.fulcrologic.fulcro.networking.http-remote/xhrio-error-states","js/goog.net.ErrorCode","com.fulcrologic.fulcro.networking.http-remote/make-xhrio","js/goog.net.XhrIo","com.fulcrologic.fulcro.networking.http-remote/xhrio-dispose","xhrio","com.fulcrologic.fulcro.networking.http-remote/xhrio-enable-progress-events","com.fulcrologic.fulcro.networking.http-remote/xhrio-abort","com.fulcrologic.fulcro.networking.http-remote/xhrio-send","url","verb","body","headers","G__56782","cljs.core/clj->js","com.fulcrologic.fulcro.networking.http-remote/xhrio-status-code","com.fulcrologic.fulcro.networking.http-remote/xhrio-status-text","com.fulcrologic.fulcro.networking.http-remote/xhrio-raw-error","com.fulcrologic.fulcro.networking.http-remote/xhrio-error-code","status","error","cljs.core.get","cljs.core._EQ_","com.fulcrologic.fulcro.networking.http-remote/xhrio-error-text","com.fulcrologic.fulcro.networking.http-remote/xhrio-response","com.fulcrologic.fulcro.networking.http-remote/xhrio-response-headers","cljs.core.js__GT_clj","com.fulcrologic.fulcro.networking.http-remote/xhrio-progress","event","var_args","G__56784","com.fulcrologic.fulcro.networking.http-remote/progress%","js/Error","progress","com.fulcrologic.fulcro.networking.http_remote.progress_PERCENT_","phase","map__56785","cljs.core/--destructure-map","vec__56786","current-phase","G__56789","loaded","total","G__56790","base","max-pct","slope","x","js/Math.floor","com.fulcrologic.fulcro.networking.http-remote/response-types","com.fulcrologic.fulcro.networking.http-remote/legal-response-types","cljs.core/set","cljs.core/keys","p__56792","map__56793","com.fulcrologic.fulcro.networking.http-remote/desired-response-type","nodes","G__56794","edn-query-language.core/query->ast","cnt","cljs.core/count","alt","p1__56791#","cljs.core/some","and__5043__auto__","cljs.core.not_EQ_","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","node","cljs.core.update_in","cljs.core/first","cljs.core/dissoc","updated-body","com.fulcrologic.fulcro.algorithms.do-not-use/ast->query","G__56796","com.fulcrologic.fulcro.networking.http-remote/wrap-fulcro-request","handler","addl-transit-handlers","transit-transformation","writer","com.fulcrologic.fulcro.algorithms.transit.writer","G__56797","cljs.core.assoc","p__56798","map__56799","request","vec__56800","response-type","cognitect.transit/write","G__56803","cljs.core.merge","com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_request","cljs.core/identity","G__56805","com.fulcrologic.fulcro.networking.http-remote/wrap-csrf-token","csrf-token","com.fulcrologic.fulcro.networking.http_remote.wrap_csrf_token","G__56806","cljs.core.update","cljs.core/assoc","G__56808","com.fulcrologic.fulcro.networking.http-remote/wrap-fulcro-response","com.fulcrologic.fulcro.networking.http_remote.wrap_fulcro_response","base-handlers","handlers","reader","com.fulcrologic.fulcro.algorithms.transit.reader","p__56809","map__56810","outgoing-request","response","G__56811","map__56812","e56813","new-body","clojure.string/blank?","cognitect.transit/read","e","com.fulcrologic.fulcro.networking.http-remote/extract-response","tx","com.fulcrologic.guardrails.core/=>","e56814","p__56815","map__56816","com.fulcrologic.fulcro.networking.http-remote/was-network-error?","status-code","cljs.core/boolean?","cljs.core/boolean","com.fulcrologic.fulcro.networking.http-remote/clear-request*","active-requests","id","G__56818","p1__56817#","cljs.core.dissoc","cljs.core/disj","com.fulcrologic.fulcro.networking.http-remote/response-extractor*","response-middleware","edn","real-request","r","e56819","com.fulcrologic.fulcro.networking.http-remote/cleanup-routine*","abort-id","cljs.core.swap_BANG_","com.fulcrologic.fulcro.networking.http-remote/ok-routine*","progress-routine","get-response-fn","raw-ok-handler","error-routine","evt","map__56820","middleware-exception","com.fulcrologic.fulcro.networking.http-remote/progress-routine*","raw-update-fn","G__56821","com.fulcrologic.fulcro.networking.http-remote/error-routine*","get-response","ok-routine","raw-error-handler","p__56824","map__56825","com.fulcrologic.fulcro.networking.http-remote/fulcro-http-remote","request-middleware","make-xhrio","options","G__56826","cljs.core.atom","p__56827","p__56828","map__56829","map__56830","ast","result-handler","update-handler","send-node","ok-handler","result","e56831","progress-handler","update-msg","msg","cljs.core/select-keys","e56832","error-handler","error-result","e56833","cljs.core.ex_info","temp__5802__auto__","e56834","G__56835","map__56836","or__5045__auto__","method","http-verb","cljs.core/name","clojure.string/upper-case","extract-response","extract-response-mw","gc-network-resources","with-cleanup","f","cljs.core/update","cljs.core.fnil","cljs.core/conj","p1__56822#","goog.events/listen","js/goog.net.EventType","p1__56823#","this","xhrios","seq__56837","cljs.core/seq","chunk__56838","count__56839","i__56840","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/next","com.fulcrologic.fulcro.networking.http-remote/overall-progress","mutation-env","G__56841","com.fulcrologic.fulcro.networking.http-remote/receive-progress","G__56842","com.fulcrologic.fulcro.networking.http-remote/send-progress","G__56843"]],"~:used-vars",["^I",["~$cljs.core/--destructure-map","~$js/Math.floor","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-raw-error","~$com.fulcrologic.fulcro.networking.http-remote/desired-response-type","~$cljs.core/boolean?","~$cljs.core/pos-int?","~$clojure.string/upper-case","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-enable-progress-events","~$edn-query-language.core/query->ast","~$cljs.spec.alpha/every-impl","~$com.fulcrologic.fulcro.algorithms.do-not-use/ast->query","~$com.fulcrologic.fulcro.networking.http-remote/was-network-error?","~$cljs.core/vector?","~$clojure.string/blank?","~$cljs.core/=","~$cljs.core/keys","~$taoensso.timbre/-log!","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-response-headers","~$com.fulcrologic.fulcro.networking.http-remote/progress%","~$com.fulcrologic.guardrails.core/=>","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-progress","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/seq","~$cljs.core/chunk-first","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-dispose","~$cljs.core/identity","~$com.fulcrologic.fulcro.networking.http-remote/wrap-fulcro-request","~$com.fulcrologic.fulcro.networking.http-remote/wrap-fulcro-response","~$cljs.spec.alpha/def-impl","~$com.fulcrologic.fulcro.networking.http-remote/overall-progress","~$cljs.core/not=","~$cljs.core/string?","~$cljs.core/dissoc","~$js/goog.net.EventType","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$cljs.core/atom","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-error-text","~$cljs.spec.alpha/tuple-impl","~$cognitect.transit/read","~$cljs.core/js->clj","~$cljs.core/set","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-response","~$cljs.core/fnil","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-error-code","~$cljs.core/contains?","~$cljs.core/map?","~$cljs.spec.alpha/map-spec-impl","~$cljs.core/conj","~$taoensso.timbre/*config*","~$cljs.core/update","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-error-states","~$com.fulcrologic.fulcro.networking.http-remote/receive-progress","~$cljs.core/fn?","~$com.fulcrologic.fulcro.algorithms.transit/writer","~$cognitect.transit/write","~$com.fulcrologic.fulcro.algorithms.transit/reader","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-send","~$cljs.core/vals","~$cljs.core/swap!","~$cljs.core/get","~$js/goog.net.XhrIo","~$com.fulcrologic.fulcro.networking.http-remote/wrap-csrf-token","~$cljs.core/-nth","~$com.fulcrologic.fulcro.networking.http-remote/clear-request*","~$goog.events/listen","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-status-code","~$cljs.core/clj->js","~$com.fulcrologic.fulcro.networking.http-remote/extract-response","~$js/goog.net.ErrorCode","~$cljs.core/set?","~$cljs.core/nth","~$cljs.core/ex-info","~$com.fulcrologic.fulcro.networking.http-remote/error-routine*","~$cljs.core/next","~$com.fulcrologic.fulcro.networking.http-remote/make-xhrio","~$cljs.core/select-keys","~$com.fulcrologic.fulcro.networking.http-remote/fulcro-http-remote","~$com.fulcrologic.fulcro.networking.http-remote/send-progress","~$com.fulcrologic.fulcro.networking.http-remote/ok-routine*","~$cljs.core/disj","~$cljs.core/assoc","~$com.fulcrologic.fulcro.networking.http-remote/cleanup-routine*","~$cljs.spec.alpha/and-spec-impl","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-status-text","~$com.fulcrologic.fulcro.networking.http-remote/xhrio-abort","~$com.fulcrologic.fulcro.networking.http-remote/response-extractor*","~$cljs.core/first","~$com.fulcrologic.fulcro.networking.http-remote/progress-routine*","~$com.fulcrologic.fulcro.networking.http-remote/legal-response-types","~$com.fulcrologic.fulcro.networking.http-remote/response-types","~$cljs.core/name","~$cljs.core/merge","~$cljs.core/every?","~$cljs.core/update-in","~$js/Error","~$cljs.core/any?","~$cljs.core/boolean","~$cljs.core/some","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1O","com/fulcrologic/fulcro/algorithms/normalize.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^14","^13","^1<","^Y","^[","~$com.fulcrologic.fulcro.components"]]],["^1O","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.dom.HtmlElement"]]],["^1O","goog/async/freelist.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","cljs/core/async/impl/ioc_helpers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$cljs.core.async.impl.protocols"]]],["^1O","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^1O","expound/util.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^?"]]],["^1O","goog/crypt/crypt.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.asserts"]]],["^1O","cljs/core/async.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4D","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1O","goog/timer/timer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^1O","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^["]]],["^1O","cljs/spec/gen/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$goog.Uri"]]],["^1O","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^1:","~$goog.string"]]],["^1O","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G"]]],["^1O","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4R"]]],["^1O","goog/events/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1O","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","~$goog.object","^4F","^4E"]]],["^1O","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4E"]]],["^1O","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G"]]],["^1O","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^[","^1:","^Y","^4U","~$goog.crypt","~$goog.crypt.base64","^?"]]],["^1O","expound/problems.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$expound.paths","^?"]]],["^1O","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4F","~$goog.reflect","^4E"]]],["^1O","goog/structs/prioritypool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1O","goog/events/eventlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.events.Event","~$goog.events.EventId"]]],["^1O","goog/async/run.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1O","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1O","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/async/workqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.async.FreeList","^4G"]]],["^1O","com/fulcrologic/fulcro/dom/events.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13"]]],["^1O","goog/events/events.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^4S","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","^5:","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1O","goog/promise/resolver.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4N"]]],["^1O","goog/events/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^4R","~$goog.string.StringBuffer"]]],["^1O","goog/structs/priorityqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.structs.Heap"]]],["^1O","goog/net/xhrio.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.Timer","^4M","^4G","~$goog.collections.maps","^5A","^4O","~$goog.json.hybrid","~$goog.log","^V","^T","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^4U","^4R","~$goog.uri.utils","^4T","^4Q","^5E","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1O","goog/promise/thenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4N"]]],["^1O","goog/collections/iters.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","com/fulcrologic/fulcro/algorithms/transit.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^11","^F","^?","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1O","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","com/fulcrologic/guardrails/utils.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$clojure.walk"]]],["^1O","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13"]]],["^1O","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4U"]]],["^1O","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^1:","^4R","^5O"]]],["^1O","com/fulcrologic/fulcro/algorithms/data_targeting.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$clojure.set","^?","^F","^Y","^["]]],["^1O","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^5K","^5L","^5M","^5J","^4M","^4R","^5O"]]],["^1O","expound/alpha.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$expound.problems","^?","^1:","^60","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1O","goog/net/wrapperxmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^5X","^5Y"]]],["^1O","goog/events/eventtarget.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.Disposable","^4G","^16","^59","^5C","^5D","^4U","^5:","^5F","^5H"]]],["^1O","com/fulcrologic/guardrails/core.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^A","^?","^1:","~$expound.alpha"]]],["^1O","goog/disposable/disposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1O","expound/ansi.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^1:"]]],["^1O","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["e966149d24edb843cd9990d50bde318950295405","b9e4054dc3d1f7c15c7653496daf5d4cb3758fcf","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1O","shadow/js.js"],["f32612897c2b8f2b2ec0c16de95649d84b8ff548","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G"]]],["^1O","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^1:","^60","~$cljs.reader","~$cljs.tools.reader.edn","^4U","^4M","^4R","~$goog.string.format","^5O","^16","^R","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^T","^V","~$taoensso.truss"]]],["^1O","goog/structs/set.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1674589626000,1674589626000,1674589626000],["^6<","node_modules/react/cjs/react.development.js"],["e966149d24edb843cd9990d50bde318950295405","b9e4054dc3d1f7c15c7653496daf5d4cb3758fcf","1df918e8981877c2759388dfae58a059e089860d","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^6="]]],["^1O","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","^56"]]],["^1O","goog/events/listener.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^5H","^5C"]]],["^1O","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","~$goog.fs.blob","^4V","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4X","^4Y","^4Z","^4["]]],["^1O","cljs/core/async/impl/channels.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4D","^4K","^4I"]]],["^1O","goog/events/listenermap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","^5I","^4U","^5:","^5C","^5H"]]],["^1O","goog/events/eventid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$taoensso.truss.impl"]]],["^1O","com/fulcrologic/guardrails/registry.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13"]]],["^1O","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/events/eventwrapper.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1O","com/fulcrologic/fulcro/algorithms/merge.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$com.fulcrologic.fulcro.algorithms.data-targeting","^4B","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.fulcro.algorithms.normalize","~$com.fulcrologic.fulcro.algorithms.denormalize","^1<","^Y","^[","^5Z"]]],["^1O","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^?"]]],["^1O","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","cljs/core/async/impl/dispatch.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4I","^5<"]]],["^1O","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4Z","~$goog.html.SafeUrl","^4[","^4G","^4E"]]],["^1O","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^6L","~$goog.html.SafeStyle","^6U","^4W","~$goog.html.uncheckedconversions","^4Z","^4E"]]],["^1O","expound/paths.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^?","^63"]]],["^1O","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^60"]]],["^1O","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13"]]],["^1O","goog/useragent/product.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^53","^55","^4T"]]],["^1O","cljs/core/async/impl/protocols.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13"]]],["^1O","goog/net/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/structs/map.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.collections.iters","^6I","~$goog.iter.StopIteration","~$goog.iter.es6"]]],["^1O","goog/net/xhriopool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^R","~$goog.structs.PriorityPool","^6H"]]],["^1O","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4Z","^4X","^4Y","^6L","^6Y","~$goog.html.SafeStyleSheet","^6U","~$goog.dom.TagName","^4W","^4[","^4G","^53","^4M","^4U","^4E","~$goog.dom.tags","^6M"]]],["^1O","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4U"]]],["^1O","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","com/fulcrologic/fulcro/raw/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4U","^60","^1:","^5[","^6T","^1<","^6R","^X","^Y","~$taoensso.encore","^["]]],["^1O","goog/structs/queue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M"]]],["^1O","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","^4E","^4F"]]],["^1O","com/fulcrologic/fulcro/inspect/transit.cljs"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^11","~$com.cognitect.transit.types","^X","^["]]],["^1O","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^5?","^77"]]],["^1O","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^1:","^76"]]],["^1O","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4U","^5N","^6A","^5O"]]],["^1O","com/fulcrologic/fulcro/mutations.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$com.fulcrologic.fulcro.raw.components","~$com.fulcrologic.fulcro.dom.events","^F","^Y","^[","^76","^?","^1<","^6Q","~$com.fulcrologic.fulcro.algorithms.merge","^6R","^5Z","^1:"]]],["^1O","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","^4G","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^74","~$goog.dom.safe","^6X","^6Z","~$goog.math.Coordinate","~$goog.math.Size","^4U","^4R","^4Z","~$goog.string.Unicode","^4T"]]],["^1O","com/fulcrologic/guardrails/impl/externs.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","~$com.fulcrologic.guardrails.registry","^67"]]],["^1O","com/fulcrologic/fulcro/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4U","~$module$node_modules$react$index","^Y","^?","^[","^5[","^1:","^1<","^6T","^6R","^7:","^F","^60"]]],["^1O","com/fulcrologic/fulcro/specs.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^?","^F","^1<","^Y"]]],["^1O","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.debug.Error","^7>"]]],["^1O","cljs/core/async/impl/buffers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4D"]]],["^1O","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","^4G","^5R","^4R","^6F","^5W","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1O","goog/net/errorcode.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/iter/es6.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.iter.Iterable","^6I","^70"]]],["^1O","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/debug/errorhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^65","^4G","~$goog.debug.EntryPointMonitor","^7E"]]],["^1O","goog/disposable/idisposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/promise/promise.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4P","^4G","^5@","~$goog.async.run","^5=","^7E","~$goog.promise.Resolver"]]],["^1O","cljs/core/async/impl/timers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4D","^4H","^4K"]]],["^1O","cljs/spec/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4U","^5[","~$cljs.spec.gen.alpha","^1:"]]],["^1O","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",[]]],["^1O","goog/json/hybrid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","~$goog.json"]]],["^1O","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","^4U"]]],["^1O","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^5K","^1:","~$cljs.tools.reader.impl.inspect"]]],["^1O","com/fulcrologic/fulcro/algorithms/scheduling.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^F","^A","^["]]],["^1O","goog/disposable/dispose.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^4R","^5O"]]],["^1O","com/fulcrologic/fulcro/networking/http_remote.cljs"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^?","^1:","^11","^X","^18","^Y","^F","^16","^[","^1<","^R","^T","^V"]]],["^1O","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^[","^5["]]],["^1O","goog/structs/pool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^65","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1O","com/fulcrologic/fulcro/inspect/diff.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^?"]]],["^6<","node_modules/react/cjs/react.production.min.js"],["e966149d24edb843cd9990d50bde318950295405","b9e4054dc3d1f7c15c7653496daf5d4cb3758fcf","f5f2e0db62a5ce44eafff60d4f3577b8796734e4","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^6="]]],["^1O","goog/net/httpstatus.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^78","^77","~$goog.math.Long"]]],["^1O","goog/structs/heap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","^4U","~$goog.structs.Node"]]],["^1O","goog/debug/entrypointregistry.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G"]]],["^1O","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^7?","^6Z","^4Z","^4E"]]],["^1O","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^78","~$com.cognitect.transit.eq","^7Q"]]],["^1O","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.labs.userAgent","^4E"]]],["^1O","expound/printer.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^1:","^?","^C","^60","^63","^64","^52","^5[","^6B","^4R"]]],["^1O","com/fulcrologic/fulcro/algorithms/tx_processing.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^60","^?","^6R","^5Z","^6T","^1<","~$com.fulcrologic.fulcro.algorithms.scheduling","~$com.fulcrologic.fulcro.mutations","^4B","~$com.fulcrologic.fulcro.specs","~$com.fulcrologic.fulcro.inspect.inspect-client","^F","^Y","^76","^["]]],["^1O","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^78"]]],["^1O","goog/debug/debug.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","~$goog.debug.errorcontext"]]],["^1O","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","~$goog.math"]]],["^1O","goog/debug/errorcontext.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^5L","^4R","^5O"]]],["^1O","goog/iter/iter.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4M","^4G","~$goog.debug","^6W","^7Z"]]],["^1O","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/async/nexttick.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^5A","~$goog.dom","^74","^6W","^53","^54"]]],["^1O","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","^6X","^6L","^6Y","^73","^6U","^4W","^4Z","^4E","^4X"]]],["^1O","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^79"]]],["^1O","goog/events/event.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^65","^5:"]]],["^1O","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^5J","^5K","^5L"]]],["^1O","goog/events/eventhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^65","^16","^4U","^59","^5:","^4O","^5G"]]],["^1O","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^7Q","~$goog.math.Integer","^4R","^4U","^4M","^4Q","^5O"]]],["^1O","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^78","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^77","^7S","^5>","^5?"]]],["^1O","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4Z","^4[","^6M","^4G"]]],["^1O","goog/log/log.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","^7["]]],["^1O","goog/async/throwexception.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4Z","^6Y","^4[","^4U","^4G","^4E"]]],["^1O","goog/structs/collection.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/events/browserevent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^7[","^59","~$goog.events.EventType","^56","^4T"]]],["^1O","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^56"]]],["^1O","goog/structs/node.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4T"]]],["^1O","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13"]]],["^1O","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","^4R"]]],["^1O","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","^4["]]],["^1O","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^1:","^76","~$taoensso.timbre.appenders.core"]]],["^1O","goog/disposable/disposeall.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^6:"]]],["^1O","goog/json/json.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","goog/events/listenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^5:","^5F","^5H"]]],["^1O","goog/events/listenablekey.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^5C"]]],["^1O","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^78","^5?","~$com.cognitect.transit.handlers","^77","^79","^7Q"]]],["^1O","goog/net/xmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^5X"]]],["^1O","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^60","^Y","^["]]],["^1O","goog/net/xmlhttp.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","~$goog.net.WrapperXmlHttpFactory","^5Y","^5X"]]],["^1O","com/fulcrologic/fulcro/inspect/inspect_client.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^Y","^6R","^4U","~$com.fulcrologic.fulcro.inspect.diff","~$com.fulcrologic.fulcro.inspect.transit","^A","^76","^["]]],["^1O","goog/net/xhrlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14"]]],["^1O","cognitect/transit.cljs"],["98d11d81caee82f97b9417025750b785fb6ecb16","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^13","^60","~$com.cognitect.transit","^77","^7S","^4U","^7Q"]]],["^1O","goog/crypt/base64.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4>",["^ ","^4?",null,"^4@",["^I",[]],"^4A",["^14","^4G","^50","^4E","^4T","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1674925397000,"jar:file:/C:/Users/nikof/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1674925397000,"jar:file:/C:/Users/nikof/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/ansi.cljc",1674589625000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/timers.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/merge.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/main.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async/impl/ioc_macros.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/registry.cljc",1674587848000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1674925397000,"jar:file:/C:/Users/nikof/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/alpha.cljc",1674589625000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/alpha.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1674925397000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/dom/events.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1674587848000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/inspect/inspect_client.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/mutex.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/parser.clj",1674587848000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm/utils.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/normalize.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/ioc_macros.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/alpha.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/edn-query-language/eql/1.0.1/eql-1.0.1.jar!/edn_query_language/core.cljc",1674587849000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/utils.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/exec/threadpool.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/utils.cljc",1674587848000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/config.cljc",1674587848000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/reflect.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/env.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1674925397000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/core.cljc",1674587848000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/channels.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/cognitect/transit-clj/1.0.329/transit-clj-1.0.329.jar!/cognitect/transit.clj",1674589625000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/printer.cljc",1674589625000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/components.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/concurrent.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/ast.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/buffers.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/paths.cljc",1674589625000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/gen/alpha.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/stacktrace.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/util.cljc",1674589625000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/problems.cljc",1674589625000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/gen/alpha.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/protocols.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/mutations.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1674925397000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/transit.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/dispatch.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1674587849000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/raw/components.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/data_targeting.cljc",1674587850000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1673714009000,"jar:file:/C:/Users/nikof/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1674587848000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer.clj",1673714009000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",1,"^8",5,"^9",1,"^:",50],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F","^G","^F"],"^H",["^I",["^J"]],"~:shadow/js-access-properties",["^I",["getStatusText","floor","SUCCESS","EXCEPTION","getResponse","getStatus","DOWNLOAD_PROGRESS","dispose","UPLOAD_PROGRESS","ERROR","ACCESS_DENIED","FILE_NOT_FOUND","CUSTOM_ERROR","getLastError","getResponseHeaders","FF_SILENT_ERROR","OFFLINE","setProgressEventsEnabled","setResponseType","ABORT","getLastErrorCode","HTTP_ERROR"]],"^K","^L","^M",["^ "],"^P",["^ ","^Q","^R","^S","^T","^U","^V"],"^W",["^ ","~$t","^X","^Y","^Y","^>","^?","^F","^F","^Z","^[","^10","^11","^R","^R","^12","^Y","^U","^V","^S","^T","^13","^13","^14","^14","^X","^X","^11","^11","^T","^T","^15","^16","^17","^18","~$s","^?","^Q","^R","^18","^18","^[","^[","^19","^1:","^1:","^1:","^1;","^1<","^?","^?","^16","^16","^V","^V","^1<","^1<"],"^1=",["^I",["^1>"]],"~:shadow/js-access-global",["^I",["Math","Error"]],"^1?",["^ ","^E","^F","^1@","^F","^G","^F"],"~:defs",["^ ","~$was-network-error?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",212,"^8",7,"^9",212,"^:",25,"~:arglists",["^1C",["~$quote",["^1C",[[["^ ","~:keys",["~$status-code","~$error"]]]]]]],"~:doc","Returns true if the given response looks like a low-level network error."],"^K","^2:","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",25,"~:method-params",["^1C",[["~$p__56815"]]],"~:protocol-impl",null,"~:arglists-meta",["^1C",[null,null]],"^8",1,"~:variadic?",false,"^7",212,"~:ret-tag","~$boolean","^9",212,"~:max-fixed-arity",1,"~:fn-var",true,"^:P",["^1C",["^:Q",["^1C",[[["^ ","^:R",["^:S","^:T"]]]]]]],"^:U","Returns true if the given response looks like a low-level network error."],"~$xhrio-status-text",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",64,"^8",7,"^9",64,"^:",24,"^:P",["^1C",["^:Q",["^1C",[["~$xhrio"]]]]]],"^K","^3X","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",24,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",64,"^:[","~$js","^9",64,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$legal-response-types",["^ ","^K","^41","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",114,"^8",1,"^9",114,"^:",26,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",114,"^8",6,"^9",114,"^:",26],"~:tag",["^I",["~$clj","~$any","~$cljs.core/ISet","~$cljs.core/MetaFn","~$clj-nil"]]],"~$progress%",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",82,"^8",7,"^9",82,"^:",16,"^:P",["^1C",["^:Q",["^1C",[["~$progress"],["^;>","~$phase"]]]]],"^:U","Takes the progress report from the progress network event\n  and returns a number between 0 and 100. `phase` can be `:overall`, `:sending`, or `:receiving`. When\n  set to `:overall` then the send phase will count for progress points between 0 and 49, and receiving phase\n  will account for 50 to 100. When set to :sending or :receiving the entire range will count for that phase only\n  (i.e. once sending is complete this function would return 100 throughout the receiving phase.)\n\n  If total is unknown, then this function returns 0.","~:top-fn",["^ ","^:Z",false,"~:fixed-arity",2,"^;1",2,"^:V",[["^;>"],["^;>","^;?"]],"^:P",["^1C",[["^;>"],["^;>","^;?"]]],"^:Y",["^1C",[null,null]]]],"^K","^2A","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",16,"^;@",["^ ","^:Z",false,"^;A",2,"^;1",2,"^:V",[["^;>"],["^;>","^;?"]],"^:P",["^1C",[["^;>"],["^;>","^;?"]]],"^:Y",["^1C",[null,null]]],"^:V",[["^;>"],["^;>","^;?"]],"^:X",null,"^;A",2,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"~:methods",[["^ ","^;A",1,"^:Z",false,"^;7","^;9"],["^ ","^;A",2,"^:Z",false,"^;7",["^I",["^;5","~$number"]]]],"^7",82,"^9",82,"^;1",2,"^;2",true,"^:P",["^1C",[["^;>"],["^;>","^;?"]]],"^:U","Takes the progress report from the progress network event\n  and returns a number between 0 and 100. `phase` can be `:overall`, `:sending`, or `:receiving`. When\n  set to `:overall` then the send phase will count for progress points between 0 and 49, and receiving phase\n  will account for 50 to 100. When set to :sending or :receiving the entire range will count for that phase only\n  (i.e. once sending is complete this function would return 100 throughout the receiving phase.)\n\n  If total is unknown, then this function returns 0."],"~$xhrio-progress",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",75,"^8",7,"^9",75,"^:",21,"^:P",["^1C",["^:Q",["^1C",[["~$event"]]]]],"^:U","Given an xhrio progress event, returns a map with keys :loaded and :total, where loaded is the\n  number of bytes transferred in the given phase (upload/download) and total is the total number\n  of bytes to transfer (if known). "],"^K","^2C","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",21,"^:V",["^1C",[["^;E"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",75,"^:[","~$cljs.core/IMap","^9",75,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;E"]]]]],"^:U","Given an xhrio progress event, returns a map with keys :loaded and :total, where loaded is the\n  number of bytes transferred in the given phase (upload/download) and total is the total number\n  of bytes to transfer (if known). "],"~$xhrio-response-headers",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",73,"^8",7,"^9",73,"^:",29,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^2@","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",29,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",73,"^:[","^;9","^9",73,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$overall-progress",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",393,"^8",7,"^9",393,"^:",23,"^:P",["^1C",["^:Q",["^1C",[["~$mutation-env"]]]]],"^:U","Returns a number between 0 and 100 for the overall progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress."],"^K","^2M","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",23,"^:V",["^1C",[["^;I"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",393,"^:[",["^I",["^;9","^;<"]],"^9",393,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;I"]]]]],"^:U","Returns a number between 0 and 100 for the overall progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress."],"~$wrap-fulcro-response",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",155,"^8",7,"^9",155,"^:",27,"^:P",["^1C",["^:Q",["^1C",[[],["~$handler"],["^;K","~$addl-transit-handlers"]]]]],"^:U","Client remote middleware to transform a network response to a standard Fulcro form.\n\n  This returns a function that will decode a transit response iff the resulting status code is 200 and the\n  body is not empty. For errant status codes and empty body: the response body will become an empty map.\n\n  No arguments: Returns a function that can process responses, that is not further chained.\n  handler: If supplied, the result of this transformation will be passed through the `handler`.\n  addl-transit-handlers is equivalent to the :handlers option in transit: a map from data type to handler.\n  ","^;@",["^ ","^:Z",false,"^;A",2,"^;1",2,"^:V",[[],["^;K"],["^;K","^;L"]],"^:P",["^1C",[[],["^;K"],["^;K","^;L"]]],"^:Y",["^1C",[null,null,null]]]],"^K","^2K","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",27,"^;@",["^ ","^:Z",false,"^;A",2,"^;1",2,"^:V",[[],["^;K"],["^;K","^;L"]],"^:P",["^1C",[[],["^;K"],["^;K","^;L"]]],"^:Y",["^1C",[null,null,null]]],"^:V",[[],["^;K"],["^;K","^;L"]],"^:X",null,"^;A",2,"^:Y",["^1C",[null,null,null]],"^8",1,"^:Z",false,"^;B",[["^ ","^;A",0,"^:Z",false,"^;7","^;9"],["^ ","^;A",1,"^:Z",false,"^;7","^;9"],["^ ","^;A",2,"^:Z",false,"^;7","~$function"]],"^7",155,"^9",155,"^;1",2,"^;2",true,"^:P",["^1C",[[],["^;K"],["^;K","^;L"]]],"^:U","Client remote middleware to transform a network response to a standard Fulcro form.\n\n  This returns a function that will decode a transit response iff the resulting status code is 200 and the\n  body is not empty. For errant status codes and empty body: the response body will become an empty map.\n\n  No arguments: Returns a function that can process responses, that is not further chained.\n  handler: If supplied, the result of this transformation will be passed through the `handler`.\n  addl-transit-handlers is equivalent to the :handlers option in transit: a map from data type to handler.\n  "],"~$wrap-fulcro-request",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",129,"^8",7,"^9",129,"^:",26,"^:P",["^1C",["^:Q",["^1C",[["^;K","^;L","~$transit-transformation"],["^;K","^;L"],["^;K"],[]]]]],"^:U","Client Remote Middleware to add transit encoding for normal Fulcro requests. Sets the content type and transforms an EDN\n  body to a transit+json encoded body. addl-transit-handlers is a map from data type to transit handler (like\n  you would pass using the `:handlers` option of transit). The additional handlers are used to encode new data types\n  into transit. transit-transformation is a function of one argument returning a transformed transit value (like you\n  would pass using the `:transform` option of transit). See transit documentation for more details.","^;@",["^ ","^:Z",false,"^;A",3,"^;1",3,"^:V",[["^;K","^;L","^;O"],["^;K","^;L"],["^;K"],[]],"^:P",["^1C",[["^;K","^;L","^;O"],["^;K","^;L"],["^;K"],[]]],"^:Y",["^1C",[null,null,null,null]]]],"^K","^2J","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",26,"^;@",["^ ","^:Z",false,"^;A",3,"^;1",3,"^:V",[["^;K","^;L","^;O"],["^;K","^;L"],["^;K"],[]],"^:P",["^1C",[["^;K","^;L","^;O"],["^;K","^;L"],["^;K"],[]]],"^:Y",["^1C",[null,null,null,null]]],"^:V",[["^;K","^;L","^;O"],["^;K","^;L"],["^;K"],[]],"^:X",null,"^;A",3,"^:Y",["^1C",[null,null,null,null]],"^8",1,"^:Z",false,"^;B",[["^ ","^;A",3,"^:Z",false,"^;7","^;M"],["^ ","^;A",2,"^:Z",false,"^;7","^;M"],["^ ","^;A",1,"^:Z",false,"^;7","^;M"],["^ ","^;A",0,"^:Z",false,"^;7","^;M"]],"^7",129,"^9",129,"^;1",3,"^;2",true,"^:P",["^1C",[["^;K","^;L","^;O"],["^;K","^;L"],["^;K"],[]]],"^:U","Client Remote Middleware to add transit encoding for normal Fulcro requests. Sets the content type and transforms an EDN\n  body to a transit+json encoded body. addl-transit-handlers is a map from data type to transit handler (like\n  you would pass using the `:handlers` option of transit). The additional handlers are used to encode new data types\n  into transit. transit-transformation is a function of one argument returning a transformed transit value (like you\n  would pass using the `:transform` option of transit). See transit documentation for more details."],"~$xhrio-raw-error",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",65,"^8",7,"^9",65,"^:",22,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^21","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",22,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",65,"^:[","^;5","^9",65,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$desired-response-type",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",117,"^8",7,"^9",117,"^:",28,"^:P",["^1C",["^:Q",["^1C",[[["^ ","^:R",["~$body"]]]]]]]],"^K","^22","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",28,"^:V",["^1C",[["~$p__56792"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",117,"^:[","~$cljs.core/IVector","^9",117,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[[["^ ","^:R",["^;R"]]]]]]]],"~$xhrio-error-text",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",71,"^8",7,"^9",71,"^:",23,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^2U","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",23,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",71,"^:[","^;5","^9",71,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$cleanup-routine*",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",237,"^8",7,"^9",237,"^:",23,"^:P",["^1C",["^:Q",["^1C",[["~$abort-id","~$active-requests","^;4"]]]]]],"^K","^3V","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",23,"^:V",["^1C",[["^;W","^;X","^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",237,"^:[","^;M","^9",237,"^;1",3,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;W","^;X","^;4"]]]]]],"~$xhrio-enable-progress-events",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",60,"^8",7,"^9",60,"^:",35,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^26","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",35,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",60,"^:[","^;5","^9",60,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$xhrio-response",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^2Z","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",21,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",72,"^:[","^;5","^9",72,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$receive-progress",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",399,"^8",7,"^9",399,"^:",23,"^:P",["^1C",["^:Q",["^1C",[["^;I"]]]]],"^:U","Returns a number between 0 and 100 for the receive progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress."],"^K","^38","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",23,"^:V",["^1C",[["^;I"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",399,"^:[",["^I",["^;9","^;<"]],"^9",399,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;I"]]]]],"^:U","Returns a number between 0 and 100 for the receive progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress."],"~$xhrio-send",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",62,"^8",7,"^9",62,"^:",17,"^:P",["^1C",["^:Q",["^1C",[["^;4","~$url","~$verb","^;R","~$headers"]]]]]],"^K","^3=","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",17,"^:V",["^1C",[["^;4","^<1","^<2","^;R","^<3"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",62,"^:[","^;5","^9",62,"^;1",5,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4","^<1","^<2","^;R","^<3"]]]]]],"~$xhrio-abort",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",61,"^8",7,"^9",61,"^:",18,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^3Y","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",18,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",61,"^:[","^;5","^9",61,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$xhrio-error-code",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",66,"^8",7,"^9",66,"^:",23,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^30","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",23,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",66,"^:[",["^I",[null,"^;9","~$cljs.core/Keyword"]],"^9",66,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$xhrio-error-states",["^ ","^K","^37","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",47,"^8",1,"^9",47,"^:",24,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",47,"^8",6,"^9",47,"^:",24],"^;7","^;F"],"~$ok-routine*",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",245,"^8",7,"^9",245,"^:",18,"^:P",["^1C",["^:Q",["^1C",[["~$progress-routine","~$get-response-fn","~$raw-ok-handler","~$error-routine"]]]]],"^:U","Returns a (fn [evt] ) that pulls the response, runs it through middleware, and reports\n   the appropriate results to the raw-ok-handler, and progress-routine. If the middleware fails,\n   it will instaed report to the error-routine (which in turn will report to the raw error handler)"],"^K","^3S","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",18,"^:V",["^1C",[["^<9","^<:","^<;","^<<"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",245,"^:[","^;M","^9",245,"^;1",4,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^<9","^<:","^<;","^<<"]]]]],"^:U","Returns a (fn [evt] ) that pulls the response, runs it through middleware, and reports\n   the appropriate results to the raw-ok-handler, and progress-routine. If the middleware fails,\n   it will instaed report to the error-routine (which in turn will report to the raw error handler)"],"~$clear-request*",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",218,"^8",7,"^9",218,"^:",21,"^:P",["^1C",["^:Q",["^1C",[["^;X","~$id","^;4"]]]]]],"^K","^3D","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",21,"^:V",["^1C",[["^;X","^<>","^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",218,"^:[",["^I",["^;8","^;9","^;<"]],"^9",218,"^;1",3,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;X","^<>","^;4"]]]]]],"~$xhrio-status-code",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",63,"^8",7,"^9",63,"^:",24,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^3F","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",24,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",63,"^:[","^;5","^9",63,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$extract-response",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",188,"^8",7,"^9",188,"^:",23,"^:P",["^1C",["^:Q",["^1C",[["~$tx","~$request","^;4"]]]]],"^:U","Generate a response map from the status of the given xhrio object, which could be in a complete or error state."],"^K","^3H","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",23,"^:V",["^1C",[["^<A","^<B","^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",188,"^9",188,"^;1",3,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^<A","^<B","^;4"]]]]],"^:U","Generate a response map from the status of the given xhrio object, which could be in a complete or error state."],"~$progress-routine*",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",262,"^8",7,"^9",262,"^:",24,"^:P",["^1C",["^:Q",["^1C",[["^<:","~$raw-update-fn"]]]]],"^:U","Return a (fn [phase progress-event]) that calls the raw update function with progress and response data merged\n  together as a response."],"^K","^40","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",24,"^:V",["^1C",[["^<:","^<D"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",262,"^:[","^;M","^9",262,"^;1",2,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^<:","^<D"]]]]],"^:U","Return a (fn [phase progress-event]) that calls the raw update function with progress and response data merged\n  together as a response."],"~$response-extractor*",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",225,"^8",7,"^9",225,"^:",26,"^:P",["^1C",["^:Q",["^1C",[["~$response-middleware","~$edn","~$real-request","^;4"]]]]]],"^K","^3Z","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",26,"^:V",["^1C",[["^<F","^<G","^<H","^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",225,"^:[","^;M","^9",225,"^;1",4,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^<F","^<G","^<H","^;4"]]]]]],"~$error-routine*",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",273,"^8",7,"^9",273,"^:",21,"^:P",["^1C",["^:Q",["^1C",[["~$get-response","~$ok-routine","^<9","~$raw-error-handler"]]]]],"^:U","Returns a (fn [xhrio-evt]) that pulls the progress and reports it to the progress routine and the raw\n  error handler."],"^K","^3M","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",21,"^:V",["^1C",[["^<J","^<K","^<9","^<L"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",273,"^:[","^;M","^9",273,"^;1",4,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^<J","^<K","^<9","^<L"]]]]],"^:U","Returns a (fn [xhrio-evt]) that pulls the progress and reports it to the progress routine and the raw\n  error handler."],"~$response-types",["^ ","^K","^42","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",109,"^8",1,"^9",109,"^:",20,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",109,"^8",6,"^9",109,"^:",20],"^;7","^;F"],"~$xhrio-dispose",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",59,"^8",7,"^9",59,"^:",20,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"^K","^2H","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",20,"^:V",["^1C",[["^;4"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",59,"^:[","^;5","^9",59,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;4"]]]]]],"~$fulcro-http-remote",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",285,"^8",7,"^9",285,"^:",25,"^:P",["^1C",["^:Q",["^1C",[[["^ ","^:R",["^<1","~$request-middleware","^<F","~$make-xhrio"],"~:or",["^ ","^<1","/api","^<F",["^1C",["^;J"]],"^<P",["^1C",["^;N"]],"^<Q","^<Q"],"^1G","~$options"]]]]]],"^:U","Create a remote that (by default) communicates with the given url (which defaults to `/api`).\n\n  The options map can contain:\n\n  * `:url` - The URL to contact\n  * `:request-middleware` - See below\n  * `:response-middleware` - See below\n  * `:make-xhrio` - A constructor function to build a goog.net.XhrIo object, initialized however you see fit.\n\n  The request middleware is a `(fn [request] modified-request)`. The `request` will have `:url`, `:body`, `:method`, and `:headers`. The\n  request middleware defaults to `wrap-fulcro-request` (which encodes the request in transit+json). The result of this\n  middleware chain on the outgoing request becomes the real outgoing request. It is allowed to modify the `url`.\n  If the the request middleware returns a corrupt request or throws an exception then the remote code\n  will immediately abort the request. The return value of the middleware will be used to generate a request to `:url`,\n  with `:method` (e.g. :post), and the given headers. The body will be sent as-is without further translation.\n\n  `response-middleware` is a function that returns a function `(fn [response] mod-response)` and\n  defaults to `wrap-fulcro-response` which decodes the raw response and transforms it back to a response that Fulcro can merge.\n\n  The response will be a map containing the `:outgoing-request` which is the exact request sent on the network; `:body`, which\n  is the raw data of the response. Additionally, there will be one or more of the following to indicate low-level\n  details of the result: `:status-code`, `:status-text`, `:error-code` (one of :none, :exception, :http-error, :abort, or :timeout),\n  and `:error-text`.  Middleware is allowed to morph any of this to suit its needs.\n\n  DEPRECATED: If the response middleware includes a `:transaction` key in the response with EQL, then that EQL will be\n  used in the resulting Fulcro merge steps. This can seriously screw up built-in behaviors. You are much better off ensuring\n  that your query matches the shape of the desired response in most cases.\n\n  The definition of `remote-error?` in the application will deterimine if happy-path or error handling will\n  be applied to the response.  The default setting in Fulcro will cause\n  a result with a 200 status code to cause whatever happy-path logic is configured for that specific\n  response's processing.\n  For example, see `m/default-result-action!` for mutations, and `df/internal-load` for loads. The `:body` key\n  will be considered the response to use, and the optional `:transaction` key an override to the EQL query used\n  for any merges.\n\n  See the top-level application configuration and Developer's Guide for more details."],"^K","^3Q","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",25,"^:V",["^1C",[["~$p__56824"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",285,"^:[",["^I",["^;9","^;<"]],"^9",285,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[[["^ ","^:R",["^<1","^<P","^<F","^<Q"],"^<R",["^ ","^<1","/api","^<F",["^1C",["^;J"]],"^<P",["^1C",["^;N"]],"^<Q","^<Q"],"^1G","^<S"]]]]]],"^:U","Create a remote that (by default) communicates with the given url (which defaults to `/api`).\n\n  The options map can contain:\n\n  * `:url` - The URL to contact\n  * `:request-middleware` - See below\n  * `:response-middleware` - See below\n  * `:make-xhrio` - A constructor function to build a goog.net.XhrIo object, initialized however you see fit.\n\n  The request middleware is a `(fn [request] modified-request)`. The `request` will have `:url`, `:body`, `:method`, and `:headers`. The\n  request middleware defaults to `wrap-fulcro-request` (which encodes the request in transit+json). The result of this\n  middleware chain on the outgoing request becomes the real outgoing request. It is allowed to modify the `url`.\n  If the the request middleware returns a corrupt request or throws an exception then the remote code\n  will immediately abort the request. The return value of the middleware will be used to generate a request to `:url`,\n  with `:method` (e.g. :post), and the given headers. The body will be sent as-is without further translation.\n\n  `response-middleware` is a function that returns a function `(fn [response] mod-response)` and\n  defaults to `wrap-fulcro-response` which decodes the raw response and transforms it back to a response that Fulcro can merge.\n\n  The response will be a map containing the `:outgoing-request` which is the exact request sent on the network; `:body`, which\n  is the raw data of the response. Additionally, there will be one or more of the following to indicate low-level\n  details of the result: `:status-code`, `:status-text`, `:error-code` (one of :none, :exception, :http-error, :abort, or :timeout),\n  and `:error-text`.  Middleware is allowed to morph any of this to suit its needs.\n\n  DEPRECATED: If the response middleware includes a `:transaction` key in the response with EQL, then that EQL will be\n  used in the resulting Fulcro merge steps. This can seriously screw up built-in behaviors. You are much better off ensuring\n  that your query matches the shape of the desired response in most cases.\n\n  The definition of `remote-error?` in the application will deterimine if happy-path or error handling will\n  be applied to the response.  The default setting in Fulcro will cause\n  a result with a 200 status code to cause whatever happy-path logic is configured for that specific\n  response's processing.\n  For example, see `m/default-result-action!` for mutations, and `df/internal-load` for loads. The `:body` key\n  will be considered the response to use, and the optional `:transaction` key an override to the EQL query used\n  for any merges.\n\n  See the top-level application configuration and Developer's Guide for more details."],"~$send-progress",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",405,"^8",7,"^9",405,"^:",20,"^:P",["^1C",["^:Q",["^1C",[["^;I"]]]]],"^:U","Returns a number between 0 and 100 for the send progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress."],"^K","^3R","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",20,"^:V",["^1C",[["^;I"]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",405,"^:[",["^I",["^;9","^;<"]],"^9",405,"^;1",1,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[["^;I"]]]]],"^:U","Returns a number between 0 and 100 for the send progress.  Use in a `progress-action` section of your mutation\n  when using the http-remote to monitor network progress."],"^<Q",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",58,"^8",7,"^9",58,"^:",17,"^:P",["^1C",["^:Q",["^1C",[[]]]]]],"^K","^3O","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",17,"^:V",["^1C",[[]]],"^:X",null,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^7",58,"^:[","^3A","^9",58,"^;1",0,"^;2",true,"^:P",["^1C",["^:Q",["^1C",[[]]]]]],"~$wrap-csrf-token",["^ ","^:O",null,"^5",["^ ","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^7",148,"^8",7,"^9",148,"^:",22,"^:P",["^1C",["^:Q",["^1C",[["~$csrf-token"],["^;K","^<W"]]]]],"^:U","Client remote request middleware. This middleware can be added to add an X-CSRF-Token header to the request.","^;@",["^ ","^:Z",false,"^;A",2,"^;1",2,"^:V",[["^<W"],["^;K","^<W"]],"^:P",["^1C",[["^<W"],["^;K","^<W"]]],"^:Y",["^1C",[null,null]]]],"^K","^3B","^6","com/fulcrologic/fulcro/networking/http_remote.cljs","^:",22,"^;@",["^ ","^:Z",false,"^;A",2,"^;1",2,"^:V",[["^<W"],["^;K","^<W"]],"^:P",["^1C",[["^<W"],["^;K","^<W"]]],"^:Y",["^1C",[null,null]]],"^:V",[["^<W"],["^;K","^<W"]],"^:X",null,"^;A",2,"^:Y",["^1C",[null,null]],"^8",1,"^:Z",false,"^;B",[["^ ","^;A",1,"^:Z",false,"^;7","^;9"],["^ ","^;A",2,"^:Z",false,"^;7","^;M"]],"^7",148,"^9",148,"^;1",2,"^;2",true,"^:P",["^1C",[["^<W"],["^;K","^<W"]]],"^:U","Client remote request middleware. This middleware can be added to add an X-CSRF-Token header to the request."]],"^1A",["^ ","^13","^13","^>","^?","^F","^F","^Z","^[","~$s","^?","^[","^[","^?","^?"],"~:cljs.analyzer/constants",["^ ","^1=",["^I",["~:com.fulcrologic.fulcro.algorithms.tx-processing/abort-id","~:overall","~:req-un","~:opt-un","~:com.fulcrologic.fulcro.networking.http-remote/transaction","~:offline","^24","~:com.fulcrologic.fulcro.networking.http-remote/response-type","~:gfn","~:children","~:com.fulcrologic.fulcro.networking.http-remote/xhrio","~:sending","~:pred-exprs","~:com.fulcrologic.fulcro.networking.http-remote/headers","~:get","~:into","~:keys-pred","~$any?","~:com.fulcrologic.fulcro.networking.http-remote/response","^2;","~:middleware-exception","~:transform","~:com.fulcrologic.fulcro.networking.http-remote/outgoing-request","~:receive-progress","~:opt-keys","~:com.fulcrologic.fulcro.algorithms.tx-processing/ast","~:com.fulcrologic.fulcro.algorithms.tx-processing/update-handler","~:patch","~:com.fulcrologic.fulcro.networking.http-remote/status-text","~:response-type","~:com.fulcrologic.fulcro.algorithms.tx-processing/aborted?","^2E","~:unknown","~$cljs.spec.alpha/and","~:silent","~:cljs.spec.alpha/kind-form","~:com.fulcrologic.fulcro.networking.http-remote/request","~:method","~:outgoing-request","~:default","~$set?","~:warn","^2O","~:active-requests","~:trace","~$p1__56779#","~:req-specs","~:connect","~:com.fulcrologic.fulcro.networking.http-remote/status-code","~:status-text","~:com.fulcrologic.fulcro.networking.http-remote/error-text","~:loaded","~:params","~:com.fulcrologic.fulcro.networking.http-remote/progress-event","~:com.fulcrologic.fulcro.networking.http-remote/method","~:receiving","~$string?","~:custom","~:delete","~$cljs.spec.alpha/tuple","~:transaction","^31","^32","~:handlers","~:cljs.spec.alpha/cpred","~:status-code","~:abort","~$%","~:abort!","~:http-error","^39","~:headers","~:com.fulcrologic.fulcro.networking.http-remote/xhrio-event","~$cljs.spec.alpha/keys","^3>","~:document","~:transmit!","~:head","~:com.fulcrologic.fulcro.networking.http-remote/make-xhrio","~:request-middleware","~:req","~:blob","~:raw-progress","~:total","~:com.fulcrologic.fulcro.networking.http-remote/url","~:com.fulcrologic.fulcro.networking.http-remote/abort!","~:com.fulcrologic.fulcro.networking.http-remote/fulcro-remote","~$fn*","~:network-error","~:not-found","~:com.fulcrologic.fulcro.networking.http-remote/error","~:response-middleware","~:kind","~:send-progress","~:com.fulcrologic.fulcro.networking.http-remote/active-requests","~$cljs.spec.alpha/map-of","~:make-xhrio","^3J","~:req-keys","~:com.fulcrologic.fulcro.networking.http-remote/request-middleware","~:original-transaction","~$cljs.core/fn","~:info","~:url","~:error-text","~:opt-specs","~:com.fulcrologic.fulcro.networking.http-remote/progress-phase","~:progress-event","~:post","~:com.fulcrologic.fulcro.networking.http-remote/response-middleware","~:pred-forms","~:error","~:exception","~:complete","~:options","~:cljs.spec.alpha/kfn","~:put","~$p1__56780#","~:timeout","~:progress-phase","~:progress","~:middleware-failure","~:body","~:abort-id","~:array-buffer","~:com.fulcrologic.fulcro.algorithms.tx-processing/options","~:auto","~:p","^41","~:com.fulcrologic.fulcro.networking.http-remote/transmit!","~:cljs.spec.alpha/conform-all","~:overall-progress","^45","~:access-denied","~:none","~:failed","^48","~:com.fulcrologic.fulcro.networking.http-remote/body","~:cljs.spec.alpha/describe","~:opt","~:text","~:com.fulcrologic.fulcro.algorithms.tx-processing/result-handler"]],"~:order",["^>3","^=:","^=F","^=U","^=X","^>7","^>E","^?7","^?=","^??","^>L","^2O","^=9","^>W","^>8","^>5","^?>","^=;","^?K","^>T","^=M","^?Q","^>;","^32","^?P","^48","^=N","^>B","^<[","^=0","^=4","^=8","^=<","^=C","^=W","^>H","^>Y","^?4","^?9","^?R","^=O","^?E","^?2","^>@","^?0","~$%","^31","^>R","^=2","^=L","^>6","^>=","^>?","^>P","^>Q","^?;","^?A","^?D","^?M","^?N","^=[","^=Y","^24","^=G","^=A","^=1","^2;","^?5","^=7","^>4","^?<","^?O","^>2","^=>","^=P","^><","^=Z","^?:","^?3","^>9","^?B","^?6","^>A","^=6","^>F","^39","^?8","^>Z","^>V","^=K","^>O","^=V","^2E","^?@","^45","^3J","^3>","^?J","^>M","^>N","^>D","^>>","^=J","^>0","^>K","^<Z","^=Q","^?G","^>I","^>C","^?S","^=3","^41","^=5","^>1","~:p","^?I","^>:","^=@","^=H","^=S","^>[","^==","^=R","^=?","^<Y","^>G","^>S","^>X","^=T","^=D","^?T","^=E","^>J","^?L","^=B","^>U","^?H","^?F","^=I","^?1","^?C"]],"^1K",["^ ","^1>",["^I",[]]],"^1L",["^ "],"^1M",["^14","^13","^?","^1:","^11","^X","^18","^Y","^F","^16","^[","^1<","^R","^T","^V"]],"^O","^L","~:ns-specs",["^ ","^=1","^2;","^=3","^41","^=6","^48","^=9",["^1C",["^>W","^2O","^2O"]],"^=>",["^1C",["^>B","^<[",["^=A","^?P","^=Y","^=G","^>R","^=["],"^=0",["^=1","^?5","^>2"]]],"^=A","^=N","^=G","^2O","^=N",["^1C",["^>B","^<[",["^>3","^?P","^>L","^=9"]]],"^=Y","^24","^=[","^2O","^>2","^48","^>3",["^I",["^=:","^=F","^=U","^=X","^>7","^>E","^?7","^?=","^??"]],"^>A","^48","^>F","^39","^>L","^2O","^>M","^39","^>N",["^1C",["^>B","^<[",["^?J"],"^=0",["^>M"]]],"^>R",["^I",["^=2","^=L","^>6","^>=","^>?","^>P","^>Q","^?;","^?A","^?D","^?M","^?N"]],"^>V",["^1C",["^=K",["^1C",["^>O",["^=V"],["^1C",["^32",["^1C",["^2E","^=V"]]]]]],["^1C",["^>O",["^?@"],["^1C",["^45","^3J",["^1C",["^3>",["^1C",["^2E","^?@"]]]]]]]]]],"^>Z","^39","^?5",["^I",["^=7","^>4","^?<","^?O"]],"^?8","^39","^?J","^39","^?P","^48"],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^4=",[["^?X","~:static-fns"],true,["^?X","~:shadow-tweaks"],null,["^?X","~:source-map-inline"],null,["^?X","~:elide-asserts"],false,["^?X","~:optimize-constants"],null,["^?X","^1R"],null,["^?X","~:external-config"],null,["^?X","~:tooling-config"],null,["^?X","~:emit-constants"],null,["^?X","~:load-tests"],null,["^?X","~:form-size-threshold"],null,["^?X","~:global-goog-object&array"],null,["^?X","~:data-readers"],null,["^?X","~:infer-externs"],"^?I",["^?X","^1T"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^?X","~:fn-invoke-direct"],null,["^?X","~:source-map"],"/dev/null"]]]
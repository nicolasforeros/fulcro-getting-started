["^ ","~:output",["^ ","~:js","goog.provide('edn_query_language.core');\r\n/**\r\n * Dynamic var.  When bound to true in the current thread calls to query->ast will no go past the\r\n *   first level of children.  This is useful when you just want the AST for one layer of a query.\r\n */\r\nedn_query_language.core._STAR_shallow_conversion_STAR_ = false;\r\n/**\r\n * @define {boolean}\r\n */\r\nedn_query_language.core.INCLUDE_SPECS = goog.define(\"edn_query_language.core.INCLUDE_SPECS\",true);\r\nif(edn_query_language.core.INCLUDE_SPECS){\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),cljs.core.keyword_QMARK_);\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null),null], null), null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249)], null)));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666)], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761)], null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"into\",\"into\",-150836029),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911)],[cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),true,(function (G__33230){\r\nreturn ((cljs.core.map_QMARK_(G__33230)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.bounded_count((1),G__33230))));\r\n}),cljs.core.map_QMARK_,(1),(function (i__14734__auto__,v__14735__auto__){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__14735__auto__,(0));\r\n}),true,cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true)]),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"min-count\",\"min-count\",1594709013),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"into\",\"into\",-150836029),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),new cljs.core.Keyword(null,\"min-count\",\"min-count\",1594709013),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911)],[cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),true,(function (G__33244){\r\nreturn ((cljs.core.map_QMARK_(G__33244)) && (((((function (){var or__5045__auto__ = (1);\r\nif(cljs.core.truth_(or__5045__auto__)){\r\nreturn or__5045__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})() <= cljs.core.bounded_count((1)\r\n,G__33244))) && ((cljs.core.bounded_count((1)\r\n,G__33244) <= (function (){var or__5045__auto__ = null;\r\nif(cljs.core.truth_(or__5045__auto__)){\r\nreturn or__5045__auto__;\r\n} else {\r\nreturn (9007199254740991);\r\n}\r\n})())))));\r\n}),(1),cljs.core.map_QMARK_,(function (i__14734__auto__,v__14735__auto__){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__14735__auto__,(0));\r\n}),true,cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"min-count\",\"min-count\",1594709013),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true)]),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.Symbol(\"cljs.core\",\"nat-int?\",\"cljs.core/nat-int?\",-164364171,null),cljs.core.nat_int_QMARK_);\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"depth\",\"depth\",1768663640),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.Keyword(null,\"unbounded\",\"unbounded\",-2054589494),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null)),\"null\"], null), null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"depth\",\"depth\",1768663640),new cljs.core.Keyword(null,\"unbounded\",\"unbounded\",-2054589494)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null)),\"null\"], null), null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null], null), null)], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849)], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),cljs.core.map_QMARK_);\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),cljs.spec.alpha.maybe_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null))], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),cljs.spec.alpha.maybe_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null))], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.symbol_QMARK_);\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"mutate-key\",\"mutate-key\",-468386111),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"mutate-key\",\"mutate-key\",-468386111),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"mutate-key\",\"mutate-key\",-468386111),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),cljs.spec.alpha.maybe_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null))], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"into\",\"into\",-150836029),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911)],[cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),true,(function (G__33277){\r\nreturn ((cljs.core.map_QMARK_(G__33277)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.bounded_count((1),G__33277))));\r\n}),cljs.core.map_QMARK_,(1),(function (i__14734__auto__,v__14735__auto__){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__14735__auto__,(0));\r\n}),true,cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true)]),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(null,\"mutation-join\",\"mutation-join\",1363539465),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(null,\"mutation-join\",\"mutation-join\",1363539465)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671)], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(null,\"special\",\"special\",-1125941630),new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720),new cljs.core.Keyword(null,\"special\",\"special\",-1125941630)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506)], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__33285){\r\nreturn cljs.core.vector_QMARK_(G__33285);\r\n})], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),cljs.core.symbol_QMARK_], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),cljs.core.symbol_QMARK_], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__33286){\r\nreturn cljs.core.coll_QMARK_(G__33286);\r\n})], null),null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__33213#\",\"p1__33213#\",-699975461,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),cljs.core.list(new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Symbol(null,\"p1__33213#\",\"p1__33213#\",-699975461,null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__33214#\",\"p1__33214#\",-2019227463,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__33214#\",\"p1__33214#\",-2019227463,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),cljs.core.list(new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__33214#\",\"p1__33214#\",-2019227463,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__33214#\",\"p1__33214#\",-2019227463,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__33352){\r\nreturn cljs.core.map_QMARK_(G__33352);\r\n}),(function (G__33352){\r\nreturn cljs.core.contains_QMARK_(G__33352,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\n}),(function (G__33352){\r\nreturn cljs.core.contains_QMARK_(G__33352,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\n})], null),(function (G__33352){\r\nreturn ((cljs.core.map_QMARK_(G__33352)) && (((cljs.core.contains_QMARK_(G__33352,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (cljs.core.contains_QMARK_(G__33352,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))))));\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)))], null),null])),(function (p1__33213_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(p1__33213_SHARP_));\r\n}),(function (x){\r\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__33214_SHARP_){\r\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__33214_SHARP_);\r\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\r\n})], null),null));\r\n\r\nif((typeof edn_query_language !== 'undefined') && (typeof edn_query_language.core !== 'undefined') && (typeof edn_query_language.core.node_type !== 'undefined')){\r\n} else {\r\nedn_query_language.core.node_type = (function (){var method_table__5642__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar prefer_table__5643__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar method_cache__5644__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar cached_hierarchy__5645__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar hierarchy__5646__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__33407 = cljs.core.get_global_hierarchy;\r\nreturn (fexpr__33407.cljs$core$IFn$_invoke$arity$0 ? fexpr__33407.cljs$core$IFn$_invoke$arity$0() : fexpr__33407.call(null));\r\n})());\r\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"edn-query-language.core\",\"node-type\"),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__5646__auto__,method_table__5642__auto__,prefer_table__5643__auto__,method_cache__5644__auto__,cached_hierarchy__5645__auto__));\r\n})();\r\n}\r\n\r\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,null,(function (_){\r\nreturn cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__33410){\r\nreturn cljs.core.map_QMARK_(G__33410);\r\n}),(function (G__33410){\r\nreturn cljs.core.contains_QMARK_(G__33410,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\n}),(function (G__33410){\r\nreturn cljs.core.contains_QMARK_(G__33410,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\r\n})], null),(function (G__33410){\r\nreturn ((cljs.core.map_QMARK_(G__33410)) && (((cljs.core.contains_QMARK_(G__33410,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (cljs.core.contains_QMARK_(G__33410,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))))));\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)))], null),null]));\r\n}));\r\n\r\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),(function (_){\r\nreturn cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__33440){\r\nreturn cljs.core.map_QMARK_(G__33440);\r\n}),(function (G__33440){\r\nreturn cljs.core.contains_QMARK_(G__33440,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\n}),(function (G__33440){\r\nreturn cljs.core.contains_QMARK_(G__33440,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\n}),(function (G__33440){\r\nreturn cljs.core.contains_QMARK_(G__33440,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\r\n})], null),(function (G__33440){\r\nreturn ((cljs.core.map_QMARK_(G__33440)) && (((cljs.core.contains_QMARK_(G__33440,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (((cljs.core.contains_QMARK_(G__33440,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (cljs.core.contains_QMARK_(G__33440,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))))))));\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)))], null),null]));\r\n}));\r\n\r\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),(function (_){\r\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719)], null),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Symbol(\"cljs.core\",\"first\",\"cljs.core/first\",-752535972,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765))),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),cljs.core.list(new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),false))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__33216#\",\"p1__33216#\",1330653392,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"union\",\"union\",2142937499),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__33216#\",\"p1__33216#\",1330653392,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__33496){\r\nreturn cljs.core.map_QMARK_(G__33496);\r\n}),(function (G__33496){\r\nreturn cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\n}),(function (G__33496){\r\nreturn cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\n}),(function (G__33496){\r\nreturn cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\r\n}),(function (G__33496){\r\nreturn cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\n})], null),(function (G__33496){\r\nreturn ((cljs.core.map_QMARK_(G__33496)) && (((cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (((cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (((cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))) && (cljs.core.contains_QMARK_(G__33496,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))))))))));\r\n}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)))], null),null])),(function (p1__33215_SHARP_){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(new cljs.core.Keyword(null,\"query\",\"query\",-1288509510).cljs$core$IFn$_invoke$arity$1(p1__33215_SHARP_)),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765))){\r\nreturn p1__33215_SHARP_;\r\n} else {\r\nif(cljs.core.contains_QMARK_(p1__33215_SHARP_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))){\r\nreturn p1__33215_SHARP_;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n}),(function (x){\r\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__33216_SHARP_){\r\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"union\",\"union\",2142937499),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__33216_SHARP_);\r\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\r\n})], null),null);\r\n}));\r\n\r\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"union\",\"union\",2142937499),(function (_){\r\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),\"null\"], null), null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__33555){\r\nreturn cljs.core.map_QMARK_(G__33555);\r\n}),(function (G__33555){\r\nreturn cljs.core.contains_QMARK_(G__33555,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\n}),(function (G__33555){\r\nreturn cljs.core.contains_QMARK_(G__33555,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\n}),(function (G__33555){\r\nreturn cljs.core.contains_QMARK_(G__33555,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\n})], null),(function (G__33555){\r\nreturn ((cljs.core.map_QMARK_(G__33555)) && (((cljs.core.contains_QMARK_(G__33555,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (((cljs.core.contains_QMARK_(G__33555,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))) && (cljs.core.contains_QMARK_(G__33555,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))))))));\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)))], null),null])),(function (p1__33217_SHARP_){\r\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),null], null), null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(p1__33217_SHARP_));\r\n})], null),null);\r\n}));\r\n\r\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),(function (_){\r\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__33218#\",\"p1__33218#\",1531081119,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__33218#\",\"p1__33218#\",1531081119,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__33598){\r\nreturn cljs.core.map_QMARK_(G__33598);\r\n}),(function (G__33598){\r\nreturn cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\n}),(function (G__33598){\r\nreturn cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\r\n}),(function (G__33598){\r\nreturn cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\n}),(function (G__33598){\r\nreturn cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\n})], null),(function (G__33598){\r\nreturn ((cljs.core.map_QMARK_(G__33598)) && (((cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (((cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234))) && (((cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))) && (cljs.core.contains_QMARK_(G__33598,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))))))))));\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)))], null),null])),(function (x){\r\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__33218_SHARP_){\r\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__33218_SHARP_);\r\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\r\n})], null),null);\r\n}));\r\n\r\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),(function (_){\r\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)], null),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__33219#\",\"p1__33219#\",-1449462767,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__33219#\",\"p1__33219#\",-1449462767,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__33636){\r\nreturn cljs.core.map_QMARK_(G__33636);\r\n}),(function (G__33636){\r\nreturn cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\n}),(function (G__33636){\r\nreturn cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\n}),(function (G__33636){\r\nreturn cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\r\n}),(function (G__33636){\r\nreturn cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\r\n})], null),(function (G__33636){\r\nreturn ((cljs.core.map_QMARK_(G__33636)) && (((cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (((cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (((cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))) && (cljs.core.contains_QMARK_(G__33636,new cljs.core.Keyword(null,\"params\",\"params\",710516235))))))))));\r\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"params\",\"params\",710516235)))], null),null])),(function (x){\r\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__33219_SHARP_){\r\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__33219_SHARP_);\r\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\r\n})], null),null);\r\n}));\r\n\r\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"root\",\"root\",-448657453),(function (_){\r\nreturn cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),null,null);\r\n}));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"keys\",\"cljs.core/keys\",-927561820,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"methods\",\"cljs.core/methods\",-1793562622,null),new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null)))),cljs.core.set(cljs.core.keys(cljs.core.methods$(edn_query_language.core.node_type))));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"multi-spec\",\"cljs.spec.alpha/multi-spec\",175821274,null),new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null),new cljs.core.Var(function(){return edn_query_language.core.node_type;},new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"edn-query-language.core\",\"edn-query-language.core\",1253777601,null),new cljs.core.Symbol(null,\"node-type\",\"node-type\",1770023989,null),\"edn_query_language/core.cljc\",22,3,88,88,cljs.core.List.EMPTY,null,(cljs.core.truth_(edn_query_language.core.node_type)?edn_query_language.core.node_type.cljs$lang$test:null)])),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)));\r\n} else {\r\n}\r\nedn_query_language.core.mark_meta = (function edn_query_language$core$mark_meta(source,target){\r\nvar G__33658 = target;\r\nif(cljs.core.truth_(cljs.core.meta(source))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__33658,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.meta(source));\r\n} else {\r\nreturn G__33658;\r\n}\r\n});\r\nedn_query_language.core.symbol__GT_ast = (function edn_query_language$core$symbol__GT_ast(k){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),k,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),k], null);\r\n});\r\nedn_query_language.core.keyword__GT_ast = (function edn_query_language$core$keyword__GT_ast(k){\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),k,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),k], null);\r\n});\r\nedn_query_language.core.union_entry__GT_ast = (function edn_query_language$core$union_entry__GT_ast(p__33663){\r\nvar vec__33664 = p__33663;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33664,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33664,(1),null);\r\nvar component = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234),k,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),v,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast),v)], null),(((component == null))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component], null))], 0));\r\n});\r\nedn_query_language.core.union__GT_ast = (function edn_query_language$core$union__GT_ast(m){\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),m,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.union_entry__GT_ast),m)], null);\r\n});\r\nedn_query_language.core.call__GT_ast = (function edn_query_language$core$call__GT_ast(p__33709){\r\nvar vec__33714 = p__33709;\r\nvar f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33714,(0),null);\r\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33714,(1),null);\r\nvar call = vec__33714;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),f)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1(args) : edn_query_language.core.expr__GT_ast.call(null,args)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var or__5045__auto__ = new cljs.core.Keyword(null,\"target\",\"target\",253001721).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(call));\r\nif(cljs.core.truth_(or__5045__auto__)){\r\nreturn or__5045__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576);\r\n}\r\n})());\r\n} else {\r\nvar ast = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4((edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1(f) : edn_query_language.core.expr__GT_ast.call(null,f)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),cljs.core.merge,(function (){var or__5045__auto__ = args;\r\nif(cljs.core.truth_(or__5045__auto__)){\r\nreturn or__5045__auto__;\r\n} else {\r\nreturn cljs.core.PersistentArrayMap.EMPTY;\r\n}\r\n})());\r\nvar G__33718 = edn_query_language.core.mark_meta(call,ast);\r\nif((new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(ast) instanceof cljs.core.Symbol)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__33718,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"call\",\"call\",-519999866));\r\n} else {\r\nreturn G__33718;\r\n}\r\n}\r\n});\r\n/**\r\n * Convert a query to its AST representation.\r\n */\r\nedn_query_language.core.query__GT_ast = (function edn_query_language$core$query__GT_ast(query){\r\nvar component = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(query));\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([edn_query_language.core.mark_meta(query,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast),query)], null)),(((component == null))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component], null))], 0));\r\n});\r\n/**\r\n * Call query->ast and return the first children.\r\n */\r\nedn_query_language.core.query__GT_ast1 = (function edn_query_language$core$query__GT_ast1(query_expr){\r\nreturn cljs.core.first(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(edn_query_language.core.query__GT_ast(query_expr)));\r\n});\r\nedn_query_language.core.join__GT_ast = (function edn_query_language$core$join__GT_ast(join){\r\nvar query_root_QMARK_ = new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(join));\r\nvar vec__33720 = cljs.core.first(join);\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33720,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33720,(1),null);\r\nvar ast = (edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1(k) : edn_query_language.core.expr__GT_ast.call(null,k));\r\nvar type = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(ast)))?new cljs.core.Keyword(null,\"call\",\"call\",-519999866):new cljs.core.Keyword(null,\"join\",\"join\",-758861890));\r\nvar component = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ast,edn_query_language.core.mark_meta(join,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),v], null)),(((component == null))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component], null)),(cljs.core.truth_(query_root_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888),true], null):null),(cljs.core.truth_((function (){var or__5045__auto__ = typeof v === 'number';\r\nif(or__5045__auto__){\r\nreturn or__5045__auto__;\r\n} else {\r\nvar or__5045__auto____$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),v);\r\nif(or__5045__auto____$1){\r\nreturn or__5045__auto____$1;\r\n} else {\r\nreturn edn_query_language.core._STAR_shallow_conversion_STAR_;\r\n}\r\n}\r\n})())?null:((cljs.core.vector_QMARK_(v))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast),v)], null):((cljs.core.map_QMARK_(v))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [edn_query_language.core.union__GT_ast(v)], null)], null):(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Invalid join, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(join)].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"error\",\"invalid-join\",\"error/invalid-join\",1594073006)], null))})()\r\n)))], 0));\r\n});\r\nedn_query_language.core.ident__GT_ast = (function edn_query_language$core$ident__GT_ast(p__33723){\r\nvar vec__33724 = p__33723;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33724,(0),null);\r\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33724,(1),null);\r\nvar ref = vec__33724;\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),k,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),ref], null);\r\n});\r\n/**\r\n * Given a query expression convert it into an AST.\r\n */\r\nedn_query_language.core.expr__GT_ast = (function edn_query_language$core$expr__GT_ast(x){\r\nif((x instanceof cljs.core.Symbol)){\r\nreturn edn_query_language.core.symbol__GT_ast(x);\r\n} else {\r\nif((x instanceof cljs.core.Keyword)){\r\nreturn edn_query_language.core.keyword__GT_ast(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn edn_query_language.core.join__GT_ast(x);\r\n} else {\r\nif(cljs.core.vector_QMARK_(x)){\r\nreturn edn_query_language.core.ident__GT_ast(x);\r\n} else {\r\nif(cljs.core.seq_QMARK_(x)){\r\nreturn edn_query_language.core.call__GT_ast(x);\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Invalid expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"error\",\"invalid-expression\",\"error/invalid-expression\",-881565136)], null));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nedn_query_language.core.wrap_expr = (function edn_query_language$core$wrap_expr(root_QMARK_,expr){\r\nif(cljs.core.truth_(root_QMARK_)){\r\nreturn cljs.core.with_meta((function (){var G__33734 = expr;\r\nif((expr instanceof cljs.core.Keyword)){\r\nreturn (new cljs.core.List(null,G__33734,null,(1),null));\r\n} else {\r\nreturn G__33734;\r\n}\r\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888),true], null));\r\n} else {\r\nreturn expr;\r\n}\r\n});\r\nedn_query_language.core.parameterize = (function edn_query_language$core$parameterize(expr,params){\r\nif((!(cljs.core.empty_QMARK_(params)))){\r\nreturn (new cljs.core.List(null,expr,(new cljs.core.List(null,params,null,(1),null)),(2),null));\r\n} else {\r\nreturn (new cljs.core.List(null,expr,null,(1),null));\r\n}\r\n});\r\n/**\r\n * Given a query expression AST convert it back into a query expression.\r\n */\r\nedn_query_language.core.ast__GT_expr = (function edn_query_language$core$ast__GT_expr(var_args){\r\nvar G__33742 = arguments.length;\r\nswitch (G__33742) {\r\ncase 1:\r\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$1 = (function (ast){\r\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(ast,false);\r\n}));\r\n\r\n(edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2 = (function (p__33746,unparse_QMARK_){\r\nvar map__33748 = p__33746;\r\nvar map__33748__$1 = cljs.core.__destructure_map(map__33748);\r\nvar ast = map__33748__$1;\r\nvar ast_meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33748__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\r\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33748__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\nvar component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33748__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"root\",\"root\",-448657453),type)){\r\nvar G__33751 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,ast_meta),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33738_SHARP_){\r\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(p1__33738_SHARP_,unparse_QMARK_);\r\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast));\r\nif((!((component == null)))){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__33751,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component);\r\n} else {\r\nreturn G__33751;\r\n}\r\n} else {\r\nvar map__33755 = ast;\r\nvar map__33755__$1 = cljs.core.__destructure_map(map__33755);\r\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33755__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33755__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\nvar query_root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33755__$1,new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888));\r\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33755__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\r\nreturn edn_query_language.core.wrap_expr(query_root,(cljs.core.truth_((function (){var and__5043__auto__ = params;\r\nif(cljs.core.truth_(and__5043__auto__)){\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type);\r\n} else {\r\nreturn and__5043__auto__;\r\n}\r\n})())?(function (){var expr = edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"params\",\"params\",710516235)),unparse_QMARK_);\r\nreturn edn_query_language.core.parameterize(expr,params);\r\n})():(function (){var key__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type))?edn_query_language.core.parameterize(key,params):key);\r\nif(cljs.core.truth_((function (){var or__5045__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),type);\r\nif(or__5045__auto__){\r\nreturn or__5045__auto__;\r\n} else {\r\nvar and__5043__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type);\r\nif(and__5043__auto__){\r\nreturn new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast);\r\n} else {\r\nreturn and__5043__auto__;\r\n}\r\n}\r\n})())){\r\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),query)) && ((((!(typeof query === 'number'))) && (((unparse_QMARK_ === true) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type)))))))){\r\nvar map__33763 = ast;\r\nvar map__33763__$1 = cljs.core.__destructure_map(map__33763);\r\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33763__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\nvar query_meta = cljs.core.meta(query);\r\nif(((((1) === cljs.core.count(children))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(cljs.core.first(children)))))){\r\nreturn cljs.core.with_meta(cljs.core.PersistentArrayMap.createAsIfByAssoc([key__$1,cljs.core.into.cljs$core$IFn$_invoke$arity$3((function (){var G__33765 = cljs.core.with_meta(cljs.core.PersistentArrayMap.EMPTY,ast_meta);\r\nif(cljs.core.truth_(component)){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__33765,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component);\r\n} else {\r\nreturn G__33765;\r\n}\r\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__33768){\r\nvar map__33769 = p__33768;\r\nvar map__33769__$1 = cljs.core.__destructure_map(map__33769);\r\nvar union_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33769__$1,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\r\nvar children__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33769__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\nvar component__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33769__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [union_key,(function (){var G__33773 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33739_SHARP_){\r\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(p1__33739_SHARP_,unparse_QMARK_);\r\n})),children__$1);\r\nif((!((component__$1 == null)))){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__33773,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component__$1);\r\n} else {\r\nreturn G__33773;\r\n}\r\n})()], null);\r\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(cljs.core.first(children)))]),ast_meta);\r\n} else {\r\nreturn cljs.core.with_meta(cljs.core.PersistentArrayMap.createAsIfByAssoc([key__$1,(function (){var G__33778 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,query_meta),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33740_SHARP_){\r\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(p1__33740_SHARP_,unparse_QMARK_);\r\n})),children);\r\nif((!((component == null)))){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__33778,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component);\r\n} else {\r\nreturn G__33778;\r\n}\r\n})()]),ast_meta);\r\n}\r\n} else {\r\nreturn cljs.core.with_meta(cljs.core.PersistentArrayMap.createAsIfByAssoc([key__$1,query]),ast_meta);\r\n}\r\n} else {\r\nreturn key__$1;\r\n}\r\n})()));\r\n}\r\n}));\r\n\r\n(edn_query_language.core.ast__GT_expr.cljs$lang$maxFixedArity = 2);\r\n\r\nedn_query_language.core.ast__GT_query = (function edn_query_language$core$ast__GT_query(query_ast){\r\n\r\nvar _LT__GT_ = edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(query_ast,true);\r\nif(cljs.core.vector_QMARK_(_LT__GT_)){\r\nreturn _LT__GT_;\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT__GT_], null);\r\n}\r\n});\r\n/**\r\n * Check if x is a EQL ident.\r\n */\r\nedn_query_language.core.ident_QMARK_ = (function edn_query_language$core$ident_QMARK_(x){\r\nreturn ((cljs.core.vector_QMARK_(x)) && ((((cljs.core.first(x) instanceof cljs.core.Keyword)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(x))))));\r\n});\r\nedn_query_language.core.focus_subquery_union_STAR_ = (function edn_query_language$core$focus_subquery_union_STAR_(query_ast,sub_ast){\r\nvar s_index = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33790_SHARP_){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234).cljs$core$IFn$_invoke$arity$1(p1__33790_SHARP_),p1__33790_SHARP_],null));\r\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(sub_ast));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (children,p__33795){\r\nvar map__33797 = p__33795;\r\nvar map__33797__$1 = cljs.core.__destructure_map(map__33797);\r\nvar union_entry = map__33797__$1;\r\nvar union_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33797__$1,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\r\nvar temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s_index,union_key);\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar sub = temp__5802__auto__;\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,(edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2(union_entry,sub) : edn_query_language.core.focus_subquery_STAR_.call(null,union_entry,sub)));\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,union_entry);\r\n}\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(query_ast)));\r\n});\r\n/**\r\n * Internal implementation of focus-subquery, you can use this function directly if\r\n *   you want to send AST in and get AST out (instead of query in / query out).\r\n */\r\nedn_query_language.core.focus_subquery_STAR_ = (function edn_query_language$core$focus_subquery_STAR_(query_ast,sub_ast){\r\nvar q_index = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33800_SHARP_){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(p1__33800_SHARP_),p1__33800_SHARP_],null));\r\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(query_ast));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (children,p__33803){\r\nvar map__33804 = p__33803;\r\nvar map__33804__$1 = cljs.core.__destructure_map(map__33804);\r\nvar focus = map__33804__$1;\r\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33804__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33804__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\nvar temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(q_index,key);\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar source = temp__5802__auto__;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),type,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(source)], 0))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,(edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2(source,focus) : edn_query_language.core.focus_subquery_STAR_.call(null,source,focus)));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),type,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(source)], 0))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,edn_query_language.core.focus_subquery_union_STAR_(source,focus));\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,source);\r\n\r\n}\r\n}\r\n} else {\r\nreturn children;\r\n}\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(sub_ast)));\r\n});\r\n/**\r\n * Given a query, focus it along the specified query expression.\r\n * \r\n *   Examples:\r\n *  (focus-query [:foo :bar :baz] [:foo])\r\n *  => [:foo]\r\n * \r\n *  (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\r\n *  => [{:foo [:bar]} :woz]\r\n */\r\nedn_query_language.core.focus_subquery = (function edn_query_language$core$focus_subquery(query,sub_query){\r\nvar query_ast = edn_query_language.core.query__GT_ast(query);\r\nvar sub_ast = edn_query_language.core.query__GT_ast(sub_query);\r\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(edn_query_language.core.focus_subquery_STAR_(query_ast,sub_ast),true);\r\n});\r\n/**\r\n * Recursivelly transduce children on the AST, you can use this to apply filter/transformations\r\n *   on a whole AST. Each iteration of the transducer will get a single AST node to process.\r\n * \r\n *   ```\r\n *   (->> [:a {:b [:c :d]} :e]\r\n *     (p/query->ast)\r\n *     (p/transduce-children (remove (comp #{:a :c} :key)))\r\n *     (p/ast->query))\r\n *   ; => [{:b [:d]} :e]\r\n *   ```\r\n */\r\nedn_query_language.core.transduce_children = (function edn_query_language$core$transduce_children(xform,p__33814){\r\nvar map__33815 = p__33814;\r\nvar map__33815__$1 = cljs.core.__destructure_map(map__33815);\r\nvar node = map__33815__$1;\r\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33815__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\nvar G__33816 = node;\r\nif(cljs.core.seq(children)){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(G__33816,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),(function (children__$1){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(xform,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33811_SHARP_){\r\nreturn (edn_query_language.core.transduce_children.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.transduce_children.cljs$core$IFn$_invoke$arity$2(xform,p1__33811_SHARP_) : edn_query_language.core.transduce_children.call(null,xform,p1__33811_SHARP_));\r\n}))),children__$1);\r\n}));\r\n} else {\r\nreturn G__33816;\r\n}\r\n});\r\n/**\r\n * Given an AST point, check if the children is a union query type.\r\n */\r\nedn_query_language.core.union_children_QMARK_ = (function edn_query_language$core$union_children_QMARK_(ast){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),(function (){var G__33822 = ast;\r\nvar G__33822__$1 = (((G__33822 == null))?null:new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__33822));\r\nvar G__33822__$2 = (((G__33822__$1 == null))?null:cljs.core.first(G__33822__$1));\r\nif((G__33822__$2 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(G__33822__$2);\r\n}\r\n})());\r\n});\r\n/**\r\n * Add property param, eg:\r\n * \r\n *   ```\r\n *   (p/update-property-param :keyword assoc :foo \"bar\") => (:keyword {:foo \"bar\"})\r\n *   (p/update-property-param '(:keyword {:param \"prev\"}) assoc :foo \"bar\") => (:keyword {:foo \"bar\" :param \"prev\"})\r\n *   ```\r\n *   \r\n */\r\nedn_query_language.core.update_property_param = (function edn_query_language$core$update_property_param(var_args){\r\nvar args__5775__auto__ = [];\r\nvar len__5769__auto___34081 = arguments.length;\r\nvar i__5770__auto___34082 = (0);\r\nwhile(true){\r\nif((i__5770__auto___34082 < len__5769__auto___34081)){\r\nargs__5775__auto__.push((arguments[i__5770__auto___34082]));\r\n\r\nvar G__34083 = (i__5770__auto___34082 + (1));\r\ni__5770__auto___34082 = G__34083;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\r\nreturn edn_query_language.core.update_property_param.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\r\n});\r\n\r\n(edn_query_language.core.update_property_param.cljs$core$IFn$_invoke$arity$variadic = (function (x,f,args){\r\nif(cljs.core.seq_QMARK_(x)){\r\nvar vec__33836 = x;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33836,(0),null);\r\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33836,(1),null);\r\nreturn (new cljs.core.List(null,k,(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,p,args),null,(1),null)),(2),null));\r\n} else {\r\nreturn (new cljs.core.List(null,x,(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,cljs.core.PersistentArrayMap.EMPTY,args),null,(1),null)),(2),null));\r\n}\r\n}));\r\n\r\n(edn_query_language.core.update_property_param.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(edn_query_language.core.update_property_param.cljs$lang$applyTo = (function (seq33827){\r\nvar G__33828 = cljs.core.first(seq33827);\r\nvar seq33827__$1 = cljs.core.next(seq33827);\r\nvar G__33829 = cljs.core.first(seq33827__$1);\r\nvar seq33827__$2 = cljs.core.next(seq33827__$1);\r\nvar self__5754__auto__ = this;\r\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__33828,G__33829,seq33827__$2);\r\n}));\r\n\r\n/**\r\n * Merges two ast's.\r\n */\r\nedn_query_language.core.merge_asts = (function edn_query_language$core$merge_asts(qa,qb){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast,p__33855){\r\nvar map__33856 = p__33855;\r\nvar map__33856__$1 = cljs.core.__destructure_map(map__33856);\r\nvar item_b = map__33856__$1;\r\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33856__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33856__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33856__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\r\nvar temp__5802__auto__ = cljs.core.first(cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2((function (p1__33851_SHARP_,p2__33850_SHARP_){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(p2__33850_SHARP_),key)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__33851_SHARP_,p2__33850_SHARP_], null);\r\n} else {\r\nreturn null;\r\n}\r\n}),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)));\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar vec__33862 = temp__5802__auto__;\r\nvar idx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33862,(0),null);\r\nvar item = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33862,(1),null);\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(item),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([type], 0))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(item),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([type], 0))))){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(item),params)){\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),idx], null),edn_query_language.core.merge_asts,item_b);\r\n} else {\r\nreturn cljs.core.reduced(null);\r\n}\r\n} else {\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(item))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),type)))){\r\nreturn cljs.core.assoc_in(ast,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),idx], null),item_b);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type)){\r\nreturn cljs.core.reduced(null);\r\n} else {\r\nreturn ast;\r\n\r\n}\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.conj,item_b);\r\n}\r\n}),qa,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(qb));\r\n});\r\n/**\r\n * Merges two queries\r\n */\r\nedn_query_language.core.merge_queries = (function edn_query_language$core$merge_queries(qa,qb){\r\nvar G__33884 = edn_query_language.core.merge_asts(edn_query_language.core.query__GT_ast(qa),edn_query_language.core.query__GT_ast(qb));\r\nif((G__33884 == null)){\r\nreturn null;\r\n} else {\r\nreturn edn_query_language.core.ast__GT_query(G__33884);\r\n}\r\n});\r\nedn_query_language.core.mask_query_STAR_ = (function edn_query_language$core$mask_query_STAR_(p__33889,mask_ast){\r\nvar map__33890 = p__33889;\r\nvar map__33890__$1 = cljs.core.__destructure_map(map__33890);\r\nvar source_ast = map__33890__$1;\r\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33890__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast,p__33895){\r\nvar map__33896 = p__33895;\r\nvar map__33896__$1 = cljs.core.__destructure_map(map__33896);\r\nvar mask_node = map__33896__$1;\r\nvar mask_children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33896__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33896__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\nvar temp__5802__auto__ = cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.createAsIfByAssoc([key]),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587)),children));\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar source_node = temp__5802__auto__;\r\nif(((cljs.core.seq(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(source_node))) && (cljs.core.seq(mask_children)))){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.conj,(edn_query_language.core.mask_query_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.mask_query_STAR_.cljs$core$IFn$_invoke$arity$2(source_node,mask_node) : edn_query_language.core.mask_query_STAR_.call(null,source_node,mask_node)));\r\n} else {\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.conj,source_node);\r\n}\r\n} else {\r\nreturn ast;\r\n}\r\n}),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(source_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(mask_ast));\r\n});\r\n/**\r\n * Given a source EQL query, use a mask EQL query to filter which elements to pick from\r\n *   the source. Params will be maintaned from the source, params in mask are ignored.\r\n */\r\nedn_query_language.core.mask_query = (function edn_query_language$core$mask_query(source,mask){\r\nvar source_ast = edn_query_language.core.query__GT_ast(source);\r\nvar mask_ast = edn_query_language.core.query__GT_ast(mask);\r\nreturn edn_query_language.core.ast__GT_query(edn_query_language.core.mask_query_STAR_(source_ast,mask_ast));\r\n});\r\n/**\r\n * Converts ident values and param values to ::p/var.\r\n */\r\nedn_query_language.core.normalize_query_variables = (function edn_query_language$core$normalize_query_variables(query){\r\nreturn edn_query_language.core.ast__GT_query(edn_query_language.core.transduce_children(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (x){\r\nvar G__33912 = x;\r\nvar G__33912__$1 = ((edn_query_language.core.ident_QMARK_(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(x)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__33912,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(x)),new cljs.core.Keyword(\"edn-query-language.core\",\"var\",\"edn-query-language.core/var\",-1571169875)], null)):G__33912);\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(x))){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(G__33912__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (p1__33906_SHARP_){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__33914){\r\nvar vec__33915 = p__33914;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33915,(0),null);\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33915,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(\"edn-query-language.core\",\"var\",\"edn-query-language.core/var\",-1571169875)], null);\r\n})),p1__33906_SHARP_);\r\n}));\r\n} else {\r\nreturn G__33912__$1;\r\n}\r\n})),edn_query_language.core.query__GT_ast(query)));\r\n});\r\n/**\r\n * Generates a consistent hash from the query. The query first goes to a process to remove any\r\n *   variables from idents and params, then we get the Clojure hash of it. You can use this to save\r\n *   information about a query that can be used to correlate with the query later.\r\n */\r\nedn_query_language.core.query_id = (function edn_query_language$core$query_id(query){\r\nreturn cljs.core.hash(edn_query_language.core.normalize_query_variables(query));\r\n});\r\n/**\r\n * Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\r\n * a large query.\r\n */\r\nedn_query_language.core.query__GT_shallow_ast = (function edn_query_language$core$query__GT_shallow_ast(query){\r\nvar _STAR_shallow_conversion_STAR__orig_val__33924 = edn_query_language.core._STAR_shallow_conversion_STAR_;\r\nvar _STAR_shallow_conversion_STAR__temp_val__33925 = true;\r\n(edn_query_language.core._STAR_shallow_conversion_STAR_ = _STAR_shallow_conversion_STAR__temp_val__33925);\r\n\r\ntry{return edn_query_language.core.query__GT_ast(query);\r\n}finally {(edn_query_language.core._STAR_shallow_conversion_STAR_ = _STAR_shallow_conversion_STAR__orig_val__33924);\r\n}});\r\n\r\n/**\r\n * @interface\r\n */\r\nedn_query_language.core.IProvideEQLAst = function(){};\r\n\r\nvar edn_query_language$core$IProvideEQLAst$_eql_ast$dyn_34096 = (function (this$){\r\nvar x__5393__auto__ = (((this$ == null))?null:this$);\r\nvar m__5394__auto__ = (edn_query_language.core._eql_ast[goog.typeOf(x__5393__auto__)]);\r\nif((!((m__5394__auto__ == null)))){\r\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\r\n} else {\r\nvar m__5392__auto__ = (edn_query_language.core._eql_ast[\"_\"]);\r\nif((!((m__5392__auto__ == null)))){\r\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IProvideEQLAst.-eql-ast\",this$);\r\n}\r\n}\r\n});\r\nedn_query_language.core._eql_ast = (function edn_query_language$core$_eql_ast(this$){\r\nif((((!((this$ == null)))) && ((!((this$.edn_query_language$core$IProvideEQLAst$_eql_ast$arity$1 == null)))))){\r\nreturn this$.edn_query_language$core$IProvideEQLAst$_eql_ast$arity$1(this$);\r\n} else {\r\nreturn edn_query_language$core$IProvideEQLAst$_eql_ast$dyn_34096(this$);\r\n}\r\n});\r\n\r\n(cljs.core.PersistentVector.prototype.edn_query_language$core$IProvideEQLAst$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentVector.prototype.edn_query_language$core$IProvideEQLAst$_eql_ast$arity$1 = (function (this$){\r\nvar this$__$1 = this;\r\nreturn edn_query_language.core.query__GT_ast(this$__$1);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.edn_query_language$core$IProvideEQLAst$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentArrayMap.prototype.edn_query_language$core$IProvideEQLAst$_eql_ast$arity$1 = (function (this$){\r\nvar this$__$1 = this;\r\nreturn this$__$1;\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.edn_query_language$core$IProvideEQLAst$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentHashMap.prototype.edn_query_language$core$IProvideEQLAst$_eql_ast$arity$1 = (function (this$){\r\nvar this$__$1 = this;\r\nreturn this$__$1;\r\n}));\r\n/**\r\n * If param is a vector it assumes its an EEQL query and converts to AST. If its an map,\r\n *   it assumes its already and AST and returns as is. The implementation uses protocols\r\n *   for high performance dispatch.\r\n */\r\nedn_query_language.core.eql_ast = (function edn_query_language$core$eql_ast(eql_query_or_ast){\r\nreturn edn_query_language.core._eql_ast(eql_query_or_ast);\r\n});\r\nif(edn_query_language.core.INCLUDE_SPECS){\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"query->ast\",\"edn-query-language.core/query->ast\",1749339811,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),null,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"query->ast1\",\"edn-query-language.core/query->ast1\",-1127394108,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"ast->query\",\"edn-query-language.core/ast->query\",1361699420,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"ident?\",\"edn-query-language.core/ident?\",-1410852474,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"focus-subquery\",\"edn-query-language.core/focus-subquery\",167014332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"transduce-children\",\"edn-query-language.core/transduce-children\",966659322,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"node\",\"node\",581201198),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"node\",\"node\",581201198),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Keyword(null,\"node\",\"node\",581201198)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"node\",\"node\",581201198),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"union-children?\",\"edn-query-language.core/union-children?\",730690780,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"update-property-param\",\"edn-query-language.core/update-property-param\",213758125,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)], null),null),cljs.core.fn_QMARK_,cljs.spec.alpha.rep_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),null,null),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"merge-asts\",\"edn-query-language.core/merge-asts\",807253317,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),null,null,null));\r\n\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"merge-queries\",\"edn-query-language.core/merge-queries\",-229392415,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),null,null,null));\r\n} else {\r\n}\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","edn_query_language/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",null,"~:excludes",["~#set",["~$ident?"]],"~:name","~$edn-query-language.core","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","^>","^?","~$s","^?","~$cljs.core","^O","~$goog","^P","^?","^?"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O","^>","^?","~$s","^?","^?","^?"],"~:form",["~#list",["~$ns","^I",["^V",["~:refer-clojure","~:exclude",["^G"]]],["^V",["^R",["^>","~:as","~$s"]]]]],"~:flags",["^ ","^R",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^?"]],"^L","^I","~:resource-id",["~:shadow.build.classpath/resource","edn_query_language/core.cljc"],"~:compiled-at",1674589871554,"^J",["^ ","^>","^?","~$s","^?","^O","^O","^P","^P","^?","^?"],"~:resource-name","edn_query_language/core.cljc","~:warnings",[],"~:source","(ns edn-query-language.core\n  (:refer-clojure :exclude [ident?])\n  (:require [clojure.spec.alpha :as s])\n  #?(:clj (:import (clojure.lang PersistentVector\n                                 PersistentArrayMap\n                                 PersistentHashMap))))\n\n(def ^:dynamic *shallow-conversion*\n  \"Dynamic var.  When bound to true in the current thread calls to query->ast will no go past the\n  first level of children.  This is useful when you just want the AST for one layer of a query.\"\n  false)\n\n#?(:clj  (def INCLUDE_SPECS true)\n   :cljs (goog-define INCLUDE_SPECS true))\n\n(when INCLUDE_SPECS\n  ; tag::specs[]\n  (s/def ::property keyword?)\n  (s/def ::special-property #{'*})\n  (s/def ::ident-value any?)\n  (s/def ::ident (s/tuple ::property ::ident-value))\n  (s/def ::join-key (s/or :prop ::property, :ident ::ident, :param-exp ::join-key-param-expr))\n  (s/def ::join (s/map-of ::join-key ::join-query, :count 1, :conform-keys true))\n  (s/def ::union (s/map-of ::property ::query, :min-count 1, :conform-keys true))\n  (s/def ::recursion-depth nat-int?)\n  (s/def ::recursion (s/or :depth ::recursion-depth, :unbounded #{'...}))\n\n  (s/def ::join-query\n    (s/or :query ::query\n          :union ::union\n          :recursion ::recursion))\n\n  (s/def ::params\n    map?)\n\n  (s/def ::param-expr-key\n    (s/or :prop ::property\n          :join ::join\n          :ident ::ident))\n\n  (s/def ::param-expr\n    (s/and seq? (s/cat :expr ::param-expr-key :params (s/? ::params))))\n\n  (s/def ::join-key-param-key (s/or :prop ::property :ident ::ident))\n\n  (s/def ::join-key-param-expr\n    (s/and seq? (s/cat :expr ::join-key-param-key :params (s/? ::params))))\n\n  (s/def ::mutation-key symbol?)\n\n  (s/def ::mutation-expr\n    (s/and seq? (s/cat :mutate-key ::mutation-key :params (s/? ::params))))\n\n  (s/def ::mutation-join\n    (s/map-of ::mutation-expr ::query :count 1 :conform-keys true))\n\n  (s/def ::mutation\n    (s/or :mutation ::mutation-expr\n          :mutation-join ::mutation-join))\n\n  (s/def ::query-expr\n    (s/or :prop ::property\n          :join ::join\n          :ident ::ident\n          :mutation ::mutation\n          :param-exp ::param-expr\n          :special ::special-property))\n\n  (s/def ::query\n    (s/coll-of ::query-expr :kind vector?))\n  ; end::specs[]\n\n  ;; ast specs\n\n  (s/def :edn-query-language.ast/query ::join-query)\n  (s/def :edn-query-language.ast/key (s/or :prop ::property :ident ::ident :sym symbol?))\n  (s/def :edn-query-language.ast/dispatch-key (s/or :prop ::property :sym symbol?))\n  (s/def :edn-query-language.ast/union-key ::property)\n\n  (s/def :edn-query-language.ast/children\n    (s/coll-of :edn-query-language.ast/node))\n\n  (s/def :edn-query-language.ast/root\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/children])\n      #(= :root (:type %))\n      (fn [x] (every? (comp #(contains? #{:prop :join :call nil} %) :type) (:children x)))))\n\n  (defmulti node-type :type)\n\n  (defmethod node-type nil [_]\n    (s/keys :req-un [:edn-query-language.ast/key :edn-query-language.ast/dispatch-key]))\n\n  (defmethod node-type :prop [_]\n    (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/key :edn-query-language.ast/dispatch-key]))\n\n  (defmethod node-type :join [_]\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/key :edn-query-language.ast/dispatch-key :edn-query-language.ast/query] :opt-un [:edn-query-language.ast/children])\n      #(if (-> % :query first (= :recursion)) % (if (contains? % :children) % false))\n      (fn [x] (every? (comp #(contains? #{:prop :join :union :call nil} %) :type) (:children x)))))\n\n  (defmethod node-type :union [_]\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/query :edn-query-language.ast/children])\n      #(every? (comp #{:union-entry} :type) (:children %))))\n\n  (defmethod node-type :union-entry [_]\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/union-key :edn-query-language.ast/query :edn-query-language.ast/children])\n      (fn [x] (every? (comp #(contains? #{:prop :join :call nil} %) :type) (:children x)))))\n\n  (defmethod node-type :call [_]\n    (s/and (s/keys\n             :req-un [:edn-query-language.ast/type :edn-query-language.ast/key :edn-query-language.ast/dispatch-key ::params]\n             :opt-un [:edn-query-language.ast/query :edn-query-language.ast/children])\n      (fn [x] (every? (comp #(contains? #{:prop :join :call nil} %) :type) (:children x)))))\n\n  (defmethod node-type :root [_]\n    (s/spec :edn-query-language.ast/root))\n\n  (s/def :edn-query-language.ast/type (set (keys (methods node-type))))\n  (s/def :edn-query-language.ast/node (s/multi-spec node-type :type)))\n\n;; library\n\n(declare expr->ast)\n\n(defn- mark-meta [source target]\n  (cond-> target\n    (meta source) (assoc :meta (meta source))))\n\n(defn symbol->ast [k]\n  {:dispatch-key k\n   :key          k})\n\n(defn keyword->ast [k]\n  {:type         :prop\n   :dispatch-key k\n   :key          k})\n\n(defn union-entry->ast [[k v]]\n  (let [component (-> v meta :component)]\n    (merge\n      {:type      :union-entry\n       :union-key k\n       :query     v\n       :children  (into [] (map expr->ast) v)}\n      (when-not (nil? component)\n        {:component component}))))\n\n(defn union->ast [m]\n  {:type     :union\n   :query    m\n   :children (into [] (map union-entry->ast) m)})\n\n(defn call->ast [[f args :as call]]\n  (if (= 'quote f)\n    (assoc (expr->ast args) :target (or (-> call meta :target) :remote))\n    (let [ast (update-in (expr->ast f) [:params] merge (or args {}))]\n      (cond-> (mark-meta call ast)\n        (symbol? (:dispatch-key ast)) (assoc :type :call)))))\n\n(defn query->ast\n  \"Convert a query to its AST representation.\"\n  [query]\n  (let [component (-> query meta :component)]\n    (merge\n      (mark-meta query\n        {:type     :root\n         :children (into [] (map expr->ast) query)})\n      (when-not (nil? component)\n        {:component component}))))\n\n(defn query->ast1\n  \"Call query->ast and return the first children.\"\n  [query-expr]\n  (-> (query->ast query-expr) :children first))\n\n(defn join->ast [join]\n  (let [query-root? (-> join meta :query-root)\n        [k v] (first join)\n        ast         (expr->ast k)\n        type        (if (= :call (:type ast)) :call :join)\n        component   (-> v meta :component)]\n    (merge ast\n           (mark-meta join {:type type :query v})\n           (when-not (nil? component)\n             {:component component})\n           (when query-root?\n             {:query-root true})\n      (when-not (or (number? v) (= '... v) *shallow-conversion*)\n             (cond\n               (vector? v) {:children (into [] (map expr->ast) v)}\n               (map? v) {:children [(union->ast v)]}\n               :else (throw\n                       (ex-info (str \"Invalid join, \" join)\n                         {:type :error/invalid-join})))))))\n\n(defn ident->ast [[k id :as ref]]\n  {:type         :prop\n   :dispatch-key k\n   :key          ref})\n\n(defn expr->ast\n  \"Given a query expression convert it into an AST.\"\n  [x]\n  (cond\n    (symbol? x) (symbol->ast x)\n    (keyword? x) (keyword->ast x)\n    (map? x) (join->ast x)\n    (vector? x) (ident->ast x)\n    (seq? x) (call->ast x)\n    :else (throw\n            (ex-info (str \"Invalid expression \" x)\n              {:type :error/invalid-expression}))))\n\n(defn wrap-expr [root? expr]\n  (if root?\n    (with-meta\n      (cond-> expr (keyword? expr) list)\n      {:query-root true})\n    expr))\n\n(defn parameterize [expr params]\n  (if-not (empty? params)\n    (list expr params)\n    (list expr)))\n\n(defn ast->expr\n  \"Given a query expression AST convert it back into a query expression.\"\n  ([ast]\n   (ast->expr ast false))\n  ([{:keys [type component] ast-meta :meta :as ast} unparse?]\n   (if (= :root type)\n     (cond-> (into (with-meta [] ast-meta) (map #(ast->expr % unparse?)) (:children ast))\n       (not (nil? component)) (vary-meta assoc :component component))\n     (let [{:keys [key query query-root params]} ast]\n       (wrap-expr query-root\n         (if (and params (not= :call type))\n           (let [expr (ast->expr (dissoc ast :params) unparse?)]\n             (parameterize expr params))\n           (let [key (if (= :call type) (parameterize key params) key)]\n             (if (or (= :join type)\n                     (and (= :call type) (:children ast)))\n               (if (and (not= '... query) (not (number? query))\n                        (or (true? unparse?)\n                            (= :call type)))\n                 (let [{:keys [children]} ast\n                       query-meta (meta query)]\n                   (if (and (== 1 (count children))\n                            (= :union (:type (first children)))) ;; UNION\n                     (with-meta\n                       {key (into (cond-> (with-meta {} ast-meta)\n                                    component (vary-meta assoc :component component))\n                                  (map (fn [{:keys [union-key children component]}]\n                                         [union-key\n                                          (cond-> (into [] (map #(ast->expr % unparse?)) children)\n                                            (not (nil? component)) (vary-meta assoc :component component))]))\n                                  (:children (first children)))}\n                       ast-meta)\n                     (with-meta\n                       {key (cond-> (into (with-meta [] query-meta) (map #(ast->expr % unparse?)) children)\n                              (not (nil? component)) (vary-meta assoc :component component))}\n                       ast-meta)))\n                 (with-meta {key query} ast-meta))\n               key))))))))\n\n(defn ast->query [query-ast]\n  \"Given an AST convert it back into a query expression.\"\n  (as-> (ast->expr query-ast true) <>\n    (if (vector? <>)\n      <>\n      [<>])))\n\n(defn ident?\n  \"Check if x is a EQL ident.\"\n  [x]\n  (and (vector? x)\n       (keyword? (first x))\n       (= 2 (count x))))\n\n;; query processing helpers\n\n(declare focus-subquery*)\n\n(defn focus-subquery-union*\n  [query-ast sub-ast]\n  (let [s-index (into {} (map #(vector (:union-key %) %)) (:children sub-ast))]\n    (assoc query-ast\n      :children\n      (reduce\n        (fn [children {:keys [union-key] :as union-entry}]\n          (if-let [sub (get s-index union-key)]\n            (conj children (focus-subquery* union-entry sub))\n            (conj children union-entry)))\n        []\n        (:children query-ast)))))\n\n(defn focus-subquery*\n  \"Internal implementation of focus-subquery, you can use this function directly if\n  you want to send AST in and get AST out (instead of query in / query out).\"\n  [query-ast sub-ast]\n  (let [q-index (into {} (map #(vector (:key %) %)) (:children query-ast))]\n    (assoc query-ast\n      :children\n      (reduce\n        (fn [children {:keys [key type] :as focus}]\n          (if-let [source (get q-index key)]\n            (cond\n              (= :join type (:type source))\n              (conj children (focus-subquery* source focus))\n\n              (= :union type (:type source))\n              (conj children (focus-subquery-union* source focus))\n\n              :else\n              (conj children source))\n            children))\n        []\n        (:children sub-ast)))))\n\n(defn focus-subquery\n  \"Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]\"\n  [query sub-query]\n  (let [query-ast (query->ast query)\n        sub-ast   (query->ast sub-query)]\n    (ast->expr (focus-subquery* query-ast sub-ast) true)))\n\n(defn transduce-children\n  \"Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (->> [:a {:b [:c :d]} :e]\n       (p/query->ast)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast->query))\n  ; => [{:b [:d]} :e]\n  ```\"\n  [xform {:keys [children] :as node}]\n  (cond-> node\n    (seq children)\n    (update :children\n      (fn [children]\n        (into [] (comp xform (map #(transduce-children xform %))) children)))))\n\n(defn union-children?\n  \"Given an AST point, check if the children is a union query type.\"\n  [ast]\n  (= :union (some-> ast :children first :type)))\n\n(defn update-property-param\n  \"Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo \\\"bar\\\") => (:keyword {:foo \\\"bar\\\"})\n  (p/update-property-param '(:keyword {:param \\\"prev\\\"}) assoc :foo \\\"bar\\\") => (:keyword {:foo \\\"bar\\\" :param \\\"prev\\\"})\n  ```\n  \"\n  [x f & args]\n  (if (seq? x)\n    (let [[k p] x]\n      (list k (apply f p args)))\n\n    (list x (apply f {} args))))\n\n(defn merge-asts\n  \"Merges two ast's.\"\n  [qa qb]\n  (reduce (fn [ast {:keys [key type params] :as item-b}]\n            (if-let [[idx item] (->> ast :children\n                                     (keep-indexed #(if (-> %2 :key (= key)) [%1 %2]))\n                                     first)]\n              (cond\n                (or (= :join (:type item) type)\n                    (= :prop (:type item) type))\n                (if (= (:params item) params)\n                  (update-in ast [:children idx] merge-asts item-b)\n                  (reduced nil))\n\n                (and (= :prop (:type item))\n                     (= :join type))\n                (assoc-in ast [:children idx] item-b)\n\n                (= :call type)\n                (reduced nil)\n\n                :else ast)\n              (update ast :children conj item-b)))\n    qa\n    (:children qb)))\n\n(defn merge-queries\n  \"Merges two queries\"\n  [qa qb]\n  (some-> (merge-asts (query->ast qa) (query->ast qb))\n    (ast->query)))\n\n(defn mask-query* [{:keys [children] :as source-ast} mask-ast]\n  (reduce\n    (fn [ast {mask-children :children\n              :keys         [key]\n              :as           mask-node}]\n      (if-let [source-node (->> children (filter (comp #{key} :key)) first)]\n        (if (and (seq (:children source-node)) (seq mask-children))\n          (update ast :children conj (mask-query* source-node mask-node))\n          (update ast :children conj source-node))\n        ast))\n    (assoc source-ast :children [])\n    (:children mask-ast)))\n\n(defn mask-query\n  \"Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored.\"\n  [source mask]\n  (let [source-ast (query->ast source)\n        mask-ast   (query->ast mask)]\n    (ast->query (mask-query* source-ast mask-ast))))\n\n(defn normalize-query-variables\n  \"Converts ident values and param values to ::p/var.\"\n  [query]\n  (->> (query->ast query)\n       (transduce-children\n         (map (fn [x]\n                (cond-> x\n                  (ident? (:key x))\n                  (assoc :key [(first (:key x)) ::var])\n\n                  (:params x)\n                  (update :params #(into {} (map (fn [[k _]] [k ::var])) %))))))\n       (ast->query)))\n\n(defn query-id\n  \"Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later.\"\n  [query]\n  (hash (normalize-query-variables query)))\n\n(defn query->shallow-ast\n  \"Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query.\"\n  [query]\n  (binding [*shallow-conversion* true]\n    (query->ast query)))\n\n(defprotocol IProvideEQLAst\n  (-eql-ast [this]))\n\n(extend-protocol IProvideEQLAst\n  PersistentVector\n  (-eql-ast [this] (query->ast this))\n\n  PersistentArrayMap\n  (-eql-ast [this] this)\n\n  PersistentHashMap\n  (-eql-ast [this] this))\n\n(defn eql-ast\n  \"If param is a vector it assumes its an EEQL query and converts to AST. If its an map,\n  it assumes its already and AST and returns as is. The implementation uses protocols\n  for high performance dispatch.\"\n  [eql-query-or-ast]\n  (-eql-ast eql-query-or-ast))\n\n(when INCLUDE_SPECS\n  (s/fdef query->ast\n    :args (s/cat :query (s/nilable ::query))\n    :ret :edn-query-language.ast/root)\n\n  (s/fdef query->ast1\n    :args (s/cat :query ::query)\n    :ret (s/nilable :edn-query-language.ast/node))\n\n  (s/fdef ast->query\n    :args (s/cat :ast :edn-query-language.ast/node)\n    :ret ::query)\n\n  (s/fdef ident?\n    :args (s/cat :x any?)\n    :ret boolean?)\n\n  (s/fdef focus-subquery\n    :args (s/cat :query ::query :sub-query ::query)\n    :ret ::query)\n\n  (s/fdef transduce-children\n    :args (s/cat :xform fn? :node :edn-query-language.ast/node)\n    :ret :edn-query-language.ast/node)\n\n  (s/fdef union-children?\n    :args (s/cat :ast :edn-query-language.ast/node)\n    :ret boolean?)\n\n  (s/fdef update-property-param\n    :args (s/cat :x (s/or :property ::property\n                          :expr ::param-expr)\n                 :f fn?\n                 :args (s/* any?))\n    :ret ::param-expr)\n\n  (s/fdef merge-asts\n    :args (s/cat :qa :edn-query-language.ast/node, :qb :edn-query-language.ast/node)\n    :ret (s/nilable :edn-query-language.ast/node))\n\n  (s/fdef merge-queries\n    :args (s/cat :qa (s/nilable ::query), :qb (s/nilable ::query))\n    :ret (s/nilable ::query)))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["edn-query-language.core/*shallow-conversion*","js/goog.define","edn-query-language.core/INCLUDE_SPECS","cljs.spec.alpha/def-impl","cljs.core/keyword?","cljs.core/any?","cljs.spec.alpha.tuple_impl","cljs.spec.alpha/or-spec-impl","cljs.spec.alpha.every_impl","G__33230","cljs.core/map?","cljs.core._EQ_","cljs.core/bounded-count","i__14734__auto__","v__14735__auto__","cljs.core.nth","G__33244","or__5045__auto__","cljs.spec.alpha/MAX_INT","cljs.core/nat-int?","cljs.spec.alpha/and-spec-impl","cljs.core/seq?","cljs.spec.alpha/cat-impl","cljs.spec.alpha/maybe-impl","cljs.core/symbol?","G__33277","G__33285","cljs.core/vector?","G__33286","cljs.core/coll?","p1__33213#","cljs.spec.alpha/map-spec-impl","G__33352","cljs.core/contains?","x","cljs.core/every?","p1__33214#","cljs.core.comp","js/edn-query-language","js/edn-query-language.core","js/edn-query-language.core.node-type","method-table__5642__auto__","cljs.core.atom","prefer-table__5643__auto__","method-cache__5644__auto__","cached-hierarchy__5645__auto__","hierarchy__5646__auto__","cljs.core.get","fexpr__33407","cljs.core/MultiFn","cljs.core.symbol","edn-query-language.core/node-type","_","G__33410","G__33440","p1__33215#","G__33496","cljs.core/first","p1__33216#","p1__33217#","G__33555","G__33598","p1__33218#","G__33636","p1__33219#","cljs.spec.alpha.spec_impl","cljs.core/set","cljs.core/keys","cljs.core/methods","cljs.spec.alpha.multi_spec_impl","edn-query-language.core/mark-meta","source","target","G__33658","cljs.core/meta","cljs.core.assoc","edn-query-language.core/symbol->ast","k","edn-query-language.core/keyword->ast","p__33663","vec__33664","edn-query-language.core/union-entry->ast","v","component","cljs.core.merge","cljs.core.into","cljs.core.map","edn-query-language.core/expr->ast","edn-query-language.core/union->ast","m","p__33709","vec__33714","edn-query-language.core/call->ast","f","args","call","ast","cljs.core.update_in","cljs.core/merge","G__33718","cljs.core/Symbol","edn-query-language.core/query->ast","query","edn-query-language.core/query->ast1","query-expr","edn-query-language.core/join->ast","join","vec__33720","query-root?","type","cljs.core.ex_info","p__33723","vec__33724","edn-query-language.core/ident->ast","id","ref","cljs.core/Keyword","edn-query-language.core/wrap-expr","root?","expr","cljs.core/with-meta","G__33734","cljs.core/List","edn-query-language.core/parameterize","params","cljs.core/empty?","var_args","G__33742","edn-query-language.core/ast->expr","js/Error","p__33746","map__33748","cljs.core/--destructure-map","edn_query_language.core.ast__GT_expr","ast-meta","unparse?","G__33751","p1__33738#","cljs.core.vary_meta","cljs.core/assoc","map__33755","key","query-root","and__5043__auto__","cljs.core.not_EQ_","cljs.core.dissoc","map__33763","children","query-meta","cljs.core/count","G__33765","p__33768","map__33769","union-key","G__33773","p1__33739#","G__33778","p1__33740#","edn-query-language.core/ast->query","query-ast","<>","edn-query-language.core/ident?","edn-query-language.core/focus-subquery-union*","sub-ast","s-index","p1__33790#","cljs.core/PersistentVector","cljs.core.reduce","p__33795","map__33797","union-entry","temp__5802__auto__","sub","cljs.core.conj","edn-query-language.core/focus-subquery*","q-index","p1__33800#","p__33803","map__33804","focus","edn-query-language.core/focus-subquery","sub-query","p__33814","map__33815","edn-query-language.core/transduce-children","xform","node","G__33816","cljs.core/seq","cljs.core.update","p1__33811#","edn-query-language.core/union-children?","G__33822","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","edn-query-language.core/update-property-param","seq33827","G__33828","cljs.core/next","G__33829","self__5754__auto__","vec__33836","p","cljs.core.apply","edn-query-language.core/merge-asts","qa","qb","p__33855","map__33856","item-b","vec__33862","idx","item","p1__33851#","p2__33850#","cljs.core.keep_indexed","cljs.core/reduced","cljs.core/assoc-in","cljs.core/conj","edn-query-language.core/merge-queries","G__33884","p__33889","map__33890","edn-query-language.core/mask-query*","source-ast","mask-ast","p__33895","map__33896","mask-children","mask-node","source-node","cljs.core.filter","edn-query-language.core/mask-query","mask","edn-query-language.core/normalize-query-variables","G__33912","p1__33906#","p__33914","vec__33915","edn-query-language.core/query-id","cljs.core/hash","edn-query-language.core/query->shallow-ast","*shallow-conversion*-orig-val__33924","*shallow-conversion*-temp-val__33925","edn-query-language$core$IProvideEQLAst$_eql_ast$dyn","x__5393__auto__","m__5394__auto__","edn-query-language.core/-eql-ast","goog/typeOf","m__5392__auto__","cljs.core/missing-protocol","edn-query-language.core/IProvideEQLAst","this","cljs.core/PROTOCOL_SENTINEL","cljs.core/PersistentArrayMap","cljs.core/PersistentHashMap","edn-query-language.core/eql-ast","eql-query-or-ast","cljs.spec.alpha/fspec-impl","cljs.spec.alpha/nilable-impl","cljs.core/boolean?","cljs.core/fn?","cljs.spec.alpha/rep-impl"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$cljs.spec.alpha/spec-impl","~$edn-query-language.core/union->ast","~$cljs.core/PROTOCOL_SENTINEL","~$js/goog.define","~$cljs.core/comp","~$cljs.core/boolean?","~$cljs.core/PersistentHashMap","~$edn-query-language.core/merge-queries","~$cljs.core/methods","~$cljs.core/MultiFn","~$edn-query-language.core/eql-ast","~$edn-query-language.core/keyword->ast","~$cljs.core/keyword?","~$edn-query-language.core/mask-query","~$edn-query-language.core/query-id","~$cljs.spec.alpha/MAX_INT","~$edn-query-language.core/query->ast","~$cljs.spec.alpha/every-impl","~$edn-query-language.core/join->ast","~$cljs.spec.alpha/maybe-impl","~$edn-query-language.core/normalize-query-variables","~$edn-query-language.core/query->ast1","~$cljs.core/vector?","~$edn-query-language.core/ident->ast","~$cljs.core/PersistentArrayMap","~$cljs.core/filter","~$cljs.core/=","~$cljs.core/keys","~$cljs.spec.alpha/rep-impl","~$edn-query-language.core/merge-asts","~$cljs.core/IndexedSeq","~$edn-query-language.core/ident?","~$cljs.core/hash","~$cljs.core/count","~$edn-query-language.core/mask-query*","~$goog/typeOf","~$cljs.core/keep-indexed","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/apply","~$edn-query-language.core/node-type","~$cljs.core/Keyword","~$cljs.spec.alpha/def-impl","~$cljs.spec.alpha/nilable-impl","~$cljs.core/not=","~$cljs.core/dissoc","~$cljs.core/atom","~$js/edn-query-language.core","~$cljs.spec.alpha/tuple-impl","~$edn-query-language.core/union-entry->ast","~$js/edn-query-language.core.node-type","~$js/edn-query-language","~$cljs.core/set","~$cljs.spec.alpha/multi-spec-impl","~$cljs.core/empty?","~$edn-query-language.core/update-property-param","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.spec.alpha/map-spec-impl","~$cljs.core/conj","~$cljs.core/vary-meta","~$cljs.core/update","~$edn-query-language.core/symbol->ast","~$cljs.core/with-meta","~$edn-query-language.core/wrap-expr","~$cljs.core/map","~$cljs.core/fn?","~$cljs.spec.alpha/or-spec-impl","~$cljs.core/PersistentVector","~$edn-query-language.core/call->ast","~$edn-query-language.core/ast->expr","~$cljs.core/List","~$cljs.core/-add-method","~$cljs.core/get","~$edn-query-language.core/parameterize","~$cljs.spec.alpha/cat-impl","~$edn-query-language.core/*shallow-conversion*","~$edn-query-language.core/mark-meta","~$edn-query-language.core/focus-subquery-union*","~$cljs.core/symbol","~$edn-query-language.core/INCLUDE_SPECS","~$cljs.core/missing-protocol","~$edn-query-language.core/-eql-ast","~$cljs.core/nat-int?","~$cljs.core/reduced","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/meta","~$cljs.core/next","~$cljs.core/bounded-count","~$edn-query-language.core/IProvideEQLAst","~$cljs.core/not","~$cljs.core/assoc","~$edn-query-language.core/query->shallow-ast","~$cljs.core/assoc-in","~$edn-query-language.core/transduce-children","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.core/coll?","~$edn-query-language.core/focus-subquery*","~$cljs.spec.alpha/and-spec-impl","~$edn-query-language.core/union-children?","~$cljs.core/first","~$edn-query-language.core/ast->query","~$cljs.core/seq?","~$edn-query-language.core/focus-subquery","~$cljs.spec.alpha/fspec-impl","~$cljs.core/merge","~$cljs.core/every?","~$cljs.core/update-in","~$js/Error","~$cljs.core/any?","~$edn-query-language.core/expr->ast"]]],"~:cache-keys",["~#cmap",[["^13","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^P","~$goog.dom.HtmlElement"]]],["^13","cljs/spec/gen/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^O","~$goog.Uri"]]],["^13","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^13","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^49"]]],["^13","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:"]]],["^13","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:"]]],"~:SHADOW-TIMESTAMP",[1674589626000,1674589626000,1674589626000],["^13","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:","~$goog.reflect"]]],["^13","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:","~$goog.fs.blob","^4;","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4=","^4>","^4?","^4@"]]],["^13","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^O","^?"]]],["^13","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4?","~$goog.html.SafeUrl","^4@","^4:","^49"]]],["^13","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4D","~$goog.html.SafeStyle","^4F","^4<","~$goog.html.uncheckedconversions","^4?","^49"]]],["^13","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^O"]]],["^13","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4?","^4=","^4>","^4D","^4J","~$goog.html.SafeStyleSheet","^4F","~$goog.dom.TagName","^4<","^4@","^4:","~$goog.labs.userAgent.browser","^46","^47","^49","~$goog.dom.tags","^4E"]]],["^13","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^47"]]],["^13","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^13","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^46","^4:","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^13","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","cljs/spec/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^O","^47","~$clojure.walk","~$cljs.spec.gen.alpha","~$clojure.string"]]],["^13","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",[]]],["^13","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^46","^47"]]],["^13","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^O","^4S","~$goog.string.StringBuffer"]]],["^13","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","~$goog.dom.safe","^4K","^4?","^49"]]],["^13","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","~$goog.labs.userAgent","^49"]]],["^13","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:","^4I","^4D","^4J","^4L","^4F","^4<","^4?","^49","^4="]]],["^13","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P"]]],["^13","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","~$goog.math.Long","~$goog.math.Integer","^4S","^47","^46","^45","^4["]]],["^13","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4?","^4@","^4E","^4:"]]],["^13","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4?","^4J","^4@","^47","^4:","^49"]]],["^13","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4B"]]],["^13","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:","^4S"]]],["^13","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^40",["^ ","^41",null,"^42",["^F",[]],"^43",["^P","^4:","^4@"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/alpha.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1674587992000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/gen/alpha.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1674589626000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1673637776000,"jar:file:/C:/Users/nikof/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1674589626000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","edn_query_language/core.cljc","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"~:shadow/protocol-prefixes",["^F",["edn-query-language$core$IProvideEQLAst$"]],"^D",null,"^E",["^F",["^G"]],"^H","^I","^J",["^ "],"^M",null,"^N",["^ ","^>","^?","~$s","^?","^O","^O","^P","^P","^?","^?"],"^Q",["^F",["^R"]],"~:shadow/js-access-global",["^F",["Error"]],"^S",null,"~:defs",["^ ","~$expr->ast",["^ ","~:protocol-inline",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",201,"^8",7,"^9",201,"^:",16,"~:arglists",["^V",["~$quote",["^V",[["~$x"]]]]],"~:doc","Given a query expression convert it into an AST."],"^H","^3Y","^6","edn_query_language/core.cljc","^:",16,"~:method-params",["^V",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^7",201,"~:ret-tag",["^F",[null,"~$clj","~$any","~$cljs.core/IMap","~$clj-nil"]],"^9",201,"~:max-fixed-arity",1,"~:fn-var",true,"^60",["^V",["^61",["^V",[["~$x"]]]]],"^62","Given a query expression convert it into an AST."],"~$*shallow-conversion*",["^ ","^5",["^ ","^6","edn_query_language/core.cljc","^7",8,"^8",16,"^9",8,"^:",36,"~:dynamic",true],"^H","^35","^6","edn_query_language/core.cljc","^:",36,"^8",1,"^6?",true,"^7",8,"^9",8,"~:tag","^69","^62","Dynamic var.  When bound to true in the current thread calls to query->ast will no go past the\n  first level of children.  This is useful when you just want the AST for one layer of a query."],"~$-eql-ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",453,"^8",4,"^9",453,"^:",12,"~:protocol","^3C","^62",null,"^60",["^V",["^61",["^V",[["~$this"]]]]]],"^6B","^3C","^H","^3;","^6","edn_query_language/core.cljc","^:",12,"^63",["^V",[["^6C"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",452,"^67","^69","^9",453,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^6C"]]]]],"^62",null],"~$union-children?",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",351,"^8",7,"^9",351,"^:",22,"^60",["^V",["^61",["^V",[["~$ast"]]]]],"^62","Given an AST point, check if the children is a union query type."],"^H","^3N","^6","edn_query_language/core.cljc","^:",22,"^63",["^V",[["^6E"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",351,"^67","~$boolean","^9",351,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^6E"]]]]],"^62","Given an AST point, check if the children is a union query type."],"~$call->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",153,"^8",7,"^9",153,"^:",16,"^60",["^V",["^61",["^V",[[["~$f","~$args","^Z","~$call"]]]]]]],"^H","^2Z","^6","edn_query_language/core.cljc","^:",16,"^63",["^V",[["~$p__33709"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",153,"^67",["^F",[null,"^68","^69"]],"^9",153,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[[["~$f","^6H","^Z","^6I"]]]]]]],"~$ast->expr",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",226,"^8",7,"^9",226,"^:",16,"^60",["^V",["^61",["^V",[["^6E"],[["^ ","~:keys",["~$type","~$component"],"~$ast-meta","^5","^Z","^6E"],"~$unparse?"]]]]],"^62","Given a query expression AST convert it back into a query expression.","~:top-fn",["^ ","^66",false,"~:fixed-arity",2,"^6<",2,"^63",[["^6E"],[["^ ","^6L",["^6M","^6N"],"^6O","^5","^Z","^6E"],"^6P"]],"^60",["^V",[["^6E"],[["^ ","^6L",["^6M","^6N"],"^6O","^5","^Z","^6E"],"^6P"]]],"^65",["^V",[null,null]]]],"^H","^2[","^6","edn_query_language/core.cljc","^:",16,"^6Q",["^ ","^66",false,"^6R",2,"^6<",2,"^63",[["^6E"],[["^ ","^6L",["^6M","^6N"],"^6O","^5","^Z","^6E"],"^6P"]],"^60",["^V",[["^6E"],[["^ ","^6L",["^6M","^6N"],"^6O","^5","^Z","^6E"],"^6P"]]],"^65",["^V",[null,null]]],"^63",[["^6E"],[["^ ","^6L",["^6M","^6N"],"^6O","^5","^Z","^6E"],"^6P"]],"^64",null,"^6R",2,"^65",["^V",[null,null]],"^8",1,"^66",false,"~:methods",[["^ ","^6R",1,"^66",false,"^6@","^69"],["^ ","^6R",2,"^66",false,"^6@",["^F",[null,"^68","^69","~$cljs.core/MetaFn","^6;"]]]],"^7",226,"^9",226,"^6<",2,"^6=",true,"^60",["^V",[["^6E"],[["^ ","^6L",["^6M","^6N"],"^6O","^5","^Z","^6E"],"^6P"]]],"^62","Given a query expression AST convert it back into a query expression."],"~$mark-meta",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",125,"^8",8,"^9",125,"^:",17,"~:private",true,"^60",["^V",["^61",["^V",[["~$source","~$target"]]]]]],"^6V",true,"^H","^36","^6","edn_query_language/core.cljc","^:",17,"^63",["^V",[["^6W","^6X"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",125,"^67",["^F",[null,"^68","^69"]],"^9",125,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^6W","^6X"]]]]]],"~$INCLUDE_SPECS",["^ ","^5",["^ ","^6","edn_query_language/core.cljc","^7",14,"^8",23,"^9",14,"^:",36,"~:jsdoc",["^V",["@define {boolean}"]],"^6@","^6F"],"^H","^39","^6","edn_query_language/core.cljc","^:",36,"^8",10,"^7",14,"^9",14,"^6@","^6F","^6Z",["^V",["@define {boolean}"]]],"~$focus-subquery-union*",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",283,"^8",7,"^9",283,"^:",28,"^60",["^V",["^61",["^V",[["~$query-ast","~$sub-ast"]]]]]],"^H","^37","^6","edn_query_language/core.cljc","^:",28,"^63",["^V",[["^70","^71"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",283,"^67",["^F",["^68","^69"]],"^9",283,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^70","^71"]]]]]],"~$focus-subquery*",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",296,"^8",7,"^9",296,"^:",22,"^60",["^V",["^61",["^V",[["^70","^71"]]]]],"^62","Internal implementation of focus-subquery, you can use this function directly if\n  you want to send AST in and get AST out (instead of query in / query out)."],"^H","^3L","^6","edn_query_language/core.cljc","^:",22,"^63",["^V",[["^70","^71"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",296,"^67",["^F",["^68","^69"]],"^9",296,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^70","^71"]]]]],"^62","Internal implementation of focus-subquery, you can use this function directly if\n  you want to send AST in and get AST out (instead of query in / query out)."],"~$transduce-children",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",333,"^8",7,"^9",333,"^:",25,"^60",["^V",["^61",["^V",[["~$xform",["^ ","^6L",["~$children"],"^Z","~$node"]]]]]],"^62","Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (->> [:a {:b [:c :d]} :e]\n       (p/query->ast)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast->query))\n  ; => [{:b [:d]} :e]\n  ```"],"^H","^3H","^6","edn_query_language/core.cljc","^:",25,"^63",["^V",[["^74","~$p__33814"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",333,"^67",["^F",[null,"^68","^69","^6;"]],"^9",333,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^74",["^ ","^6L",["^75"],"^Z","^76"]]]]]],"^62","Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (->> [:a {:b [:c :d]} :e]\n       (p/query->ast)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast->query))\n  ; => [{:b [:d]} :e]\n  ```"],"~$focus-subquery",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",319,"^8",7,"^9",319,"^:",21,"^60",["^V",["^61",["^V",[["~$query","~$sub-query"]]]]],"^62","Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]"],"^H","^3R","^6","edn_query_language/core.cljc","^:",21,"^63",["^V",[["^79","^7:"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",319,"^67",["^F",[null,"^68","^69","^6T","^6;"]],"^9",319,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^79","^7:"]]]]],"^62","Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]"],"~$ast->query",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",265,"^8",7,"^9",265,"^:",17,"^60",["^V",["^61",["^V",[["^70"]]]]]],"^H","^3P","^6","edn_query_language/core.cljc","^:",17,"^63",["^V",[["^70"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",265,"^67",["^F",[null,"^68","~$cljs.core/IVector","^69","^6T","^6;"]],"^9",265,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^70"]]]]]],"~$IProvideEQLAst",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","edn_query_language/core.cljc","^:",28,"^8",14,"^7",452,"~:protocol-info",["^ ","^6S",["^ ","^6A",[["^6C"]]]],"^9",452,"~:sigs",["^ ","~:-eql-ast",["^ ","^H","^6A","^60",["^V",[["^6C"]]],"^62",null]],"^6Z",["^V",["@interface"]]],"^7>",true,"^H","^3C","^6","edn_query_language/core.cljc","^:",28,"^8",1,"^7",452,"^7?",["^ ","^6S",["^ ","^6A",[["^6C"]]]],"~:info",null,"^9",452,"^6@","^69","^7@",["^ ","^7A",["^ ","^H","^6A","^60",["^V",[["^6C"]]],"^62",null]],"~:impls",["^F",["^1F","^1X","^2Y"]],"^6Z",["^V",["@interface"]]],"~$query->ast1",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",171,"^8",7,"^9",171,"^:",18,"^60",["^V",["^61",["^V",[["~$query-expr"]]]]],"^62","Call query->ast and return the first children."],"^H","^1U","^6","edn_query_language/core.cljc","^:",18,"^63",["^V",[["^7E"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",171,"^67",["^F",["^69","^6;"]],"^9",171,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^7E"]]]]],"^62","Call query->ast and return the first children."],"~$query->shallow-ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",445,"^8",7,"^9",445,"^:",25,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query."],"^H","^3F","^6","edn_query_language/core.cljc","^:",25,"^63",["^V",[["^79"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",445,"^9",445,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query."],"~$merge-asts",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",371,"^8",7,"^9",371,"^:",17,"^60",["^V",["^61",["^V",[["~$qa","~$qb"]]]]],"^62","Merges two ast's."],"^H","^21","^6","edn_query_language/core.cljc","^:",17,"^63",["^V",[["^7H","^7I"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",371,"^67",["^F",[null,"^69"]],"^9",371,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^7H","^7I"]]]]],"^62","Merges two ast's."],"~$parameterize",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",221,"^8",7,"^9",221,"^:",19,"^60",["^V",["^61",["^V",[["~$expr","~$params"]]]]]],"^H","^33","^6","edn_query_language/core.cljc","^:",19,"^63",["^V",[["^7K","^7L"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",221,"^67","^30","^9",221,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^7K","^7L"]]]]]],"~$mask-query",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",416,"^8",7,"^9",416,"^:",17,"^60",["^V",["^61",["^V",[["^6W","~$mask"]]]]],"^62","Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored."],"^H","^1M","^6","edn_query_language/core.cljc","^:",17,"^63",["^V",[["^6W","^7N"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",416,"^67",["^F",[null,"^68","^7<","^69","^6T","^6;"]],"^9",416,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^6W","^7N"]]]]],"^62","Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored."],"~$mask-query*",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",403,"^8",7,"^9",403,"^:",18,"^60",["^V",["^61",["^V",[[["^ ","^6L",["^75"],"^Z","~$source-ast"],"~$mask-ast"]]]]]],"^H","^26","^6","edn_query_language/core.cljc","^:",18,"^63",["^V",[["~$p__33889","^7Q"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",403,"^67",["^F",[null,"^69"]],"^9",403,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[[["^ ","^6L",["^75"],"^Z","^7P"],"^7Q"]]]]]],"~$query-id",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",438,"^8",7,"^9",438,"^:",15,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later."],"^H","^1N","^6","edn_query_language/core.cljc","^:",15,"^63",["^V",[["^79"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",438,"^67",["^F",[null,"~$number"]],"^9",438,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later."],"~$wrap-expr",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",214,"^8",7,"^9",214,"^:",16,"^60",["^V",["^61",["^V",[["~$root?","^7K"]]]]]],"^H","^2U","^6","edn_query_language/core.cljc","^:",16,"^63",["^V",[["^7V","^7K"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",214,"^67",["^F",[null,"^68","^6T","^6;"]],"^9",214,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^7V","^7K"]]]]]],"~$join->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",176,"^8",7,"^9",176,"^:",16,"^60",["^V",["^61",["^V",[["~$join"]]]]]],"^H","^1R","^6","edn_query_language/core.cljc","^:",16,"^63",["^V",[["^7X"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",176,"^67",["^F",["^69","^6;"]],"^9",176,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^7X"]]]]]],"~$normalize-query-variables",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",424,"^8",7,"^9",424,"^:",32,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Converts ident values and param values to ::p/var."],"^H","^1T","^6","edn_query_language/core.cljc","^:",32,"^63",["^V",[["^79"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",424,"^67",["^F",[null,"^68","^7<","^69","^6T","^6;"]],"^9",424,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Converts ident values and param values to ::p/var."],"^G",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",272,"^8",7,"^9",272,"^:",13,"^60",["^V",["^61",["^V",[["~$x"]]]]],"^62","Check if x is a EQL ident."],"^H","^23","^6","edn_query_language/core.cljc","^:",13,"^63",["^V",[["~$x"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",272,"^67","^6F","^9",272,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["~$x"]]]]],"^62","Check if x is a EQL ident."],"~$eql-ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",465,"^8",7,"^9",465,"^:",14,"^60",["^V",["^61",["^V",[["~$eql-query-or-ast"]]]]],"^62","If param is a vector it assumes its an EEQL query and converts to AST. If its an map,\n  it assumes its already and AST and returns as is. The implementation uses protocols\n  for high performance dispatch."],"^H","^1J","^6","edn_query_language/core.cljc","^:",14,"^63",["^V",[["^7["]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",465,"^67","^69","^9",465,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^7["]]]]],"^62","If param is a vector it assumes its an EEQL query and converts to AST. If its an map,\n  it assumes its already and AST and returns as is. The implementation uses protocols\n  for high performance dispatch."],"~$keyword->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",133,"^8",7,"^9",133,"^:",19,"^60",["^V",["^61",["^V",[["~$k"]]]]]],"^H","^1K","^6","edn_query_language/core.cljc","^:",19,"^63",["^V",[["~$k"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",133,"^67","^6:","^9",133,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["~$k"]]]]]],"~$node-type",["^ ","^H","^2<","^6","edn_query_language/core.cljc","^7",88,"^8",3,"^9",88,"^:",22,"^5",["^ ","^6","edn_query_language/core.cljc","^7",88,"^8",13,"^9",88,"^:",22],"^6@","^1I"],"~$query->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",160,"^8",7,"^9",160,"^:",17,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Convert a query to its AST representation."],"^H","^1P","^6","edn_query_language/core.cljc","^:",17,"^63",["^V",[["^79"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",160,"^67",["^F",["^69","^6;"]],"^9",160,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["^79"]]]]],"^62","Convert a query to its AST representation."],"~$ident->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",196,"^8",7,"^9",196,"^:",17,"^60",["^V",["^61",["^V",[[["~$k","~$id","^Z","~$ref"]]]]]]],"^H","^1W","^6","edn_query_language/core.cljc","^:",17,"^63",["^V",[["~$p__33723"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",196,"^67","^6:","^9",196,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[[["~$k","^84","^Z","^85"]]]]]]],"~$merge-queries",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",397,"^8",7,"^9",397,"^:",20,"^60",["^V",["^61",["^V",[["^7H","^7I"]]]]],"^62","Merges two queries"],"^H","^1G","^6","edn_query_language/core.cljc","^:",20,"^63",["^V",[["^7H","^7I"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",397,"^67",["^F",[null,"^68","^7<","^69","^6T","^6;"]],"^9",397,"^6<",2,"^6=",true,"^60",["^V",["^61",["^V",[["^7H","^7I"]]]]],"^62","Merges two queries"],"~$union-entry->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",138,"^8",7,"^9",138,"^:",23,"^60",["^V",["^61",["^V",[[["~$k","~$v"]]]]]]],"^H","^2E","^6","edn_query_language/core.cljc","^:",23,"^63",["^V",[["~$p__33663"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",138,"^67",["^F",["^69","^6;"]],"^9",138,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[[["~$k","~$v"]]]]]]],"~$symbol->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",129,"^8",7,"^9",129,"^:",18,"^60",["^V",["^61",["^V",[["~$k"]]]]]],"^H","^2S","^6","edn_query_language/core.cljc","^:",18,"^63",["^V",[["~$k"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",129,"^67","^6:","^9",129,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["~$k"]]]]]],"~$union->ast",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",148,"^8",7,"^9",148,"^:",17,"^60",["^V",["^61",["^V",[["~$m"]]]]]],"^H","^1A","^6","edn_query_language/core.cljc","^:",17,"^63",["^V",[["~$m"]]],"^64",null,"^65",["^V",[null,null]],"^8",1,"^66",false,"^7",148,"^67","^6:","^9",148,"^6<",1,"^6=",true,"^60",["^V",["^61",["^V",[["~$m"]]]]]],"~$update-property-param",["^ ","^5[",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",356,"^8",7,"^9",356,"^:",28,"^60",["^V",["^61",["^V",[["~$x","~$f","~$&","^6H"]]]]],"^62","Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo \"bar\") => (:keyword {:foo \"bar\"})\n  (p/update-property-param '(:keyword {:param \"prev\"}) assoc :foo \"bar\") => (:keyword {:foo \"bar\" :param \"prev\"})\n  ```\n  ","^6Q",["^ ","^66",true,"^6R",2,"^6<",2,"^63",[["^V",["~$x","~$f","^6H"]]],"^60",["^V",[["~$x","~$f","~$&","^6H"]]],"^65",["^V",[null]]]],"^H","^2K","^6","edn_query_language/core.cljc","^:",28,"^6Q",["^ ","^66",true,"^6R",2,"^6<",2,"^63",[["^V",["~$x","~$f","^6H"]]],"^60",["^V",[["~$x","~$f","~$&","^6H"]]],"^65",["^V",[null]]],"^63",[["^V",["~$x","~$f","^6H"]]],"^64",null,"^6R",2,"^65",["^V",[null]],"^8",1,"^66",true,"^6S",[["^ ","^6R",2,"^66",true,"^6@","^30"]],"^7",356,"^67","^69","^9",356,"^6<",2,"^6=",true,"^60",["^V",[["~$x","~$f","~$&","^6H"]]],"^62","Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo \"bar\") => (:keyword {:foo \"bar\"})\n  (p/update-property-param '(:keyword {:param \"prev\"}) assoc :foo \"bar\") => (:keyword {:foo \"bar\" :param \"prev\"})\n  ```\n  "]],"^T",["^ ","^O","^O","^>","^?","~$s","^?","^?","^?"],"~:cljs.analyzer/constants",["^ ","^Q",["^F",["~:args","~$cljs.spec.alpha/*","~:xform","~:query-root","~:req-un","~:opt-un","~$x","~:remote","^1D","~:edn-query-language.core/join-query","^I","~:edn-query-language.core/recursion","^1E","~:mutate-key","^1G","^1H","~:ret","~:gfn","~:children","~:edn-query-language.core/join-key-param-expr","~:edn-query-language.ast/root","~:special","~:union-key","^1L","~:pred-exprs","~:into","~:keys-pred","^1P","~:edn-query-language.ast/node","^1U","^1V","~:edn-query-language.core/ident","^5","^1Z","~:edn-query-language.core/mutation-expr","^1[","~:opt-keys","~:edn-query-language.core/recursion-depth","^21","~:key","~:union-entry","^23","~:else","~:call","~:edn-query-language.core/special-property","~$cljs.spec.alpha/and","~:edn-query-language.core/ident-value","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~$cljs.core/->","^2<","~:cljs.spec.alpha/kind-form","~:default","~:qb","~:property","^L","^H","~:edn-query-language.core/union","~:mutation-join","~$*","~:req-specs","~$cljs.spec.alpha/or","^6","~:conform-keys","^:","~:unbounded","~:edn-query-language.ast/dispatch-key","~:params","~$cljs.spec.alpha/fspec","~:ast","^2H","~$cljs.spec.alpha/nilable","~:type","~:edn-query-language.core/query","~$cljs.spec.alpha/tuple","^2K","~:edn-query-language.core/var","^2L","~:sub-query","^2N","~:cljs.spec.alpha/cpred","~:node","~:component","~:mutation","~$if","~:error/invalid-join","~$%","~:edn-query-language.ast/query","~:sym","^2W","^8","~$p1__33216#","~:error/invalid-expression","~:edn-query-language.core/join","~$cljs.spec.alpha/keys","~$p1__33219#","~:edn-query-language.ast/children","~:edn-query-language.ast/union-key","~:req","~:recursion","^7","~:edn-query-language.core/param-expr","~:expr","~$fn*","~:root","~:qa","~:prop","~:min-count","^81","^3<","~:kind","~$cljs.spec.alpha/map-of","~:count","~:req-keys","~:ident","~$cljs.core/fn","~:dispatch-key","~:opt-specs","~:edn-query-language.core/property","^9","~:pred-forms","~:f","~:param-exp","~:depth","~$p1__33214#","~:x","~:edn-query-language.core/join-key-param-key","~:edn-query-language.core/params","~:cljs.spec.alpha/kfn","~:target","^3H","^61","^3J","~$cljs.spec.alpha/multi-spec","^60","~:query","~:edn-query-language.ast/type","~$p1__33213#","~:hierarchy","~:union","~:edn-query-language.core/param-expr-key","~:edn-query-language.core/mutation-key","~$...","^62","^3N","~:edn-query-language.core/mutation","^3O","^3P","^3Q","~:edn-query-language.ast/key","^3R","~:cljs.spec.alpha/conform-all","~:edn-query-language.core/query-expr","~:test","^3U","^3X","~:join","~:edn-query-language.core/join-key","~:edn-query-language.core/mutation-join","~$p1__33218#","~:cljs.spec.alpha/describe","~:opt","~$cljs.spec.alpha/?"]],"~:order",["^:=","^1L","^8[","^61","~$*","^91","^3X","^8S","^9F","^:U","^9<","^:3","^:9","^:?","^8K","^9S","^:6","^8E","^:7","^9=","^8P","^95","^9I","^:5","^:D","^:Q","^:X","^2N","^99","^9E","^:4","^8V","^3<","^8F","^:@","^9>","^:N","^:G","^:K","^9Y","^:C","^:L","^:T","^9Z","^90","^3Q","^93","^9[","^9@","^:Z","^:B","^:M","^3J","^8T","^8G","^:V","^:O","^9L","^9:","^:R","^8M","^92","^1V","^9O","^:P","^9P","^9?","^9W","^9V","^8R","^8L","^9T","^8B","^:H","^:0","^:I","^1Z","^:1","^9D","^::","~$x","^3U","^1D","^:A","^2L","^8Z","^8J","~$%","^8C","^8I","^8O","^8Q","^8U","^9;","^9X","^:8","^:<","^:>","^:Y","^:J","^96","^8W","^:;","^9M","^94","^3O","^9Q","^8X","^:W","^8N","^9U","^2H","^1[","^1H","^2<","^:F","^L","^H","^6","^:","^8","^7","^9","^60","^62","^:S","^I","^81","^5","^9K","^:E","^8D","^8A","^8Y","^9N","^9R","^9G","^1P","^9A","^8>","^9C","^8H","^1U","^3P","^9B","^23","~:x","^1E","^3R","^9H","^3H","^8@","^2W","^9J","^3N","^2K","^98","~:f","^8?","^21","^:2","^97","^1G"]],"^[",["^ ","^R",["^F",[]]],"^10",["^ "],"^11",["^P","^O","^?"]],"^L","^I","~:ns-specs",["^ ","^8E",["^V",["^9<","^:G","^9E","^:K","^99","^9Y","^8F"]],"^8F",["^V",["^9<","^:@","^8V","^9>",["^F",[["^V",["^61","^:N"]]]]]],"^1G",["^V",["^9A","^8>",["^V",["^93","^:2",["^V",["^9C","^9E"]],"^97",["^V",["^9C","^9E"]]]],"^8H",["^V",["^9C","^9E"]]]],"^8K",["^V",["^90","^3Q",["^V",["^93","^9[","^:B","^9@",["^V",["^:Z","^:C"]]]]]],"^1P",["^V",["^9A","^8>",["^V",["^93","^:G",["^V",["^9C","^9E"]]]],"^8H","^8L"]],"^1U",["^V",["^9A","^8>",["^V",["^93","^:G","^9E"]],"^8H",["^V",["^9C","^8R"]]]],"^8S",["^V",["^9F","^:=","^91"]],"^8T",["^V",["^90","^3Q",["^V",["^93","^8G","^:M","^9@",["^V",["^:Z","^:C"]]]]]],"^8V","^3<","^21",["^V",["^9A","^8>",["^V",["^93","^:2","^8R","^97","^8R"]],"^8H",["^V",["^9C","^8R"]]]],"^23",["^V",["^9A","^8>",["^V",["^93","~:x","^3X"]],"^8H","^1E"]],"^8[",["^F",[["^V",["^61","~$*"]]]],"^91","^3X","^99",["^V",["^:6","^:=","^9E","^:4",1,"^9=",true]],"^9E",["^V",["^92","^:R","^:5","^1V"]],"^2K",["^V",["^9A","^8>",["^V",["^93","~:x",["^V",["^9<","^98","^:=","^9[","^9Z"]],"~:f","^2W","^8>",["^V",["^8?","^3X"]]]],"^8H","^9Z"]],"^9S",["^V",["^:6","^:U","^8E","^:7",1,"^9=",true]],"^9Z",["^V",["^90","^3Q",["^V",["^93","^9[","^:L","^9@",["^V",["^:Z","^:C"]]]]]],"^:=","^1L","^:B",["^V",["^9<","^:3","^:=","^:9","^8S"]],"^:C","^2N","^3H",["^V",["^9A","^8>",["^V",["^93","^8@","^2W","^9J","^8R"]],"^8H","^8R"]],"^:L",["^V",["^9<","^:3","^:=","^:T","^9S","^:9","^8S"]],"^:M","^3J","^3N",["^V",["^9A","^8>",["^V",["^93","^9B","^8R"]],"^8H","^1E"]],"^:O",["^V",["^9<","^9L","^8T","^9:","^:V"]],"^3P",["^V",["^9A","^8>",["^V",["^93","^9B","^8R"]],"^8H","^9E"]],"^3R",["^V",["^9A","^8>",["^V",["^93","^:G","^9E","^9H","^9E"]],"^8H","^9E"]],"^:R",["^V",["^9<","^:3","^:=","^:T","^9S","^:9","^8S","^9L","^:O","^:?","^9Z","^8M","^8["]],"^:U",["^V",["^9<","^:3","^:=","^:9","^8S","^:?","^8K"]],"^:V",["^V",["^:6","^8T","^9E","^:7",1,"^9=",true]]],"~:ns-spec-vars",["^F",["^1G","^1P","^1U","^21","^23","^2K","^3H","^3N","^3P","^3R"]],"~:compiler-options",["^3[",[["^;2","~:static-fns"],true,["^;2","~:shadow-tweaks"],null,["^;2","~:source-map-inline"],null,["^;2","~:elide-asserts"],false,["^;2","~:optimize-constants"],null,["^;2","^16"],null,["^;2","~:external-config"],null,["^;2","~:tooling-config"],null,["^;2","~:emit-constants"],null,["^;2","~:load-tests"],null,["^;2","~:form-size-threshold"],null,["^;2","~:global-goog-object&array"],null,["^;2","~:data-readers"],null,["^;2","~:infer-externs"],"~:auto",["^;2","^18"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;2","~:fn-invoke-direct"],null,["^;2","~:source-map"],"/dev/null"]]]